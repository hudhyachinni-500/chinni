/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@twilio/audioplayer/es5/AudioPlayer.js":
/*!*************************************************************!*\
  !*** ./node_modules/@twilio/audioplayer/es5/AudioPlayer.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _regenerator = __webpack_require__(/*! babel-runtime/regenerator */ \"./node_modules/babel-runtime/regenerator/index.js\");\n\nvar _regenerator2 = _interopRequireDefault(_regenerator);\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) {\n            try {\n                step(generator.next(value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function rejected(value) {\n            try {\n                step(generator[\"throw\"](value));\n            } catch (e) {\n                reject(e);\n            }\n        }\n        function step(result) {\n            result.done ? resolve(result.value) : new P(function (resolve) {\n                resolve(result.value);\n            }).then(fulfilled, rejected);\n        }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar Deferred_1 = __webpack_require__(/*! ./Deferred */ \"./node_modules/@twilio/audioplayer/es5/Deferred.js\");\nvar EventTarget_1 = __webpack_require__(/*! ./EventTarget */ \"./node_modules/@twilio/audioplayer/es5/EventTarget.js\");\n/**\n * An {@link AudioPlayer} is an HTMLAudioElement-like object that uses AudioContext\n *   to circumvent browser limitations.\n */\n\nvar AudioPlayer = function (_EventTarget_1$defaul) {\n    _inherits(AudioPlayer, _EventTarget_1$defaul);\n\n    /**\n     * @private\n     */\n    function AudioPlayer(audioContext) {\n        var srcOrOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n        _classCallCheck(this, AudioPlayer);\n\n        /**\n         * The AudioBufferSourceNode of the actively loaded sound. Null if a sound\n         *   has not been loaded yet. This is re-used for each time the sound is\n         *   played.\n         */\n        var _this = _possibleConstructorReturn(this, (AudioPlayer.__proto__ || Object.getPrototypeOf(AudioPlayer)).call(this));\n\n        _this._audioNode = null;\n        /**\n         * An Array of deferred-like objects for each pending `play` Promise. When\n         *   .pause() is called or .src is set, all pending play Promises are\n         *   immediately rejected.\n         */\n        _this._pendingPlayDeferreds = [];\n        /**\n         * Whether or not the audio element should loop. If disabled during playback,\n         *   playing continues until the sound ends and then stops looping.\n         */\n        _this._loop = false;\n        /**\n         * The source URL of the sound to play. When set, the currently playing sound will stop.\n         */\n        _this._src = '';\n        /**\n         * The current sinkId of the device audio is being played through.\n         */\n        _this._sinkId = 'default';\n        if (typeof srcOrOptions !== 'string') {\n            options = srcOrOptions;\n        }\n        _this._audioContext = audioContext;\n        _this._audioElement = new (options.AudioFactory || Audio)();\n        _this._bufferPromise = _this._createPlayDeferred().promise;\n        _this._destination = _this._audioContext.destination;\n        _this._gainNode = _this._audioContext.createGain();\n        _this._gainNode.connect(_this._destination);\n        _this._XMLHttpRequest = options.XMLHttpRequestFactory || XMLHttpRequest;\n        _this.addEventListener('canplaythrough', function () {\n            _this._resolvePlayDeferreds();\n        });\n        if (typeof srcOrOptions === 'string') {\n            _this.src = srcOrOptions;\n        }\n        return _this;\n    }\n\n    _createClass(AudioPlayer, [{\n        key: \"load\",\n\n        /**\n         * Stop any ongoing playback and reload the source file.\n         */\n        value: function load() {\n            this._load(this._src);\n        }\n        /**\n         * Pause the audio coming from this AudioPlayer. This will reject any pending\n         *   play Promises.\n         */\n\n    }, {\n        key: \"pause\",\n        value: function pause() {\n            if (this.paused) {\n                return;\n            }\n            this._audioElement.pause();\n            this._audioNode.stop();\n            this._audioNode.disconnect(this._gainNode);\n            this._audioNode = null;\n            this._rejectPlayDeferreds(new Error('The play() request was interrupted by a call to pause().'));\n        }\n        /**\n         * Play the sound. If the buffer hasn't loaded yet, wait for the buffer to load. If\n         *   the source URL is not set yet, this Promise will remain pending until a source\n         *   URL is set.\n         */\n\n    }, {\n        key: \"play\",\n        value: function play() {\n            return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator2.default.mark(function _callee() {\n                var _this2 = this;\n\n                var buffer;\n                return _regenerator2.default.wrap(function _callee$(_context) {\n                    while (1) {\n                        switch (_context.prev = _context.next) {\n                            case 0:\n                                if (this.paused) {\n                                    _context.next = 6;\n                                    break;\n                                }\n\n                                _context.next = 3;\n                                return this._bufferPromise;\n\n                            case 3:\n                                if (this.paused) {\n                                    _context.next = 5;\n                                    break;\n                                }\n\n                                return _context.abrupt(\"return\");\n\n                            case 5:\n                                throw new Error('The play() request was interrupted by a call to pause().');\n\n                            case 6:\n                                this._audioNode = this._audioContext.createBufferSource();\n                                this._audioNode.loop = this.loop;\n                                this._audioNode.addEventListener('ended', function () {\n                                    if (_this2._audioNode && _this2._audioNode.loop) {\n                                        return;\n                                    }\n                                    _this2.dispatchEvent('ended');\n                                });\n                                _context.next = 11;\n                                return this._bufferPromise;\n\n                            case 11:\n                                buffer = _context.sent;\n\n                                if (!this.paused) {\n                                    _context.next = 14;\n                                    break;\n                                }\n\n                                throw new Error('The play() request was interrupted by a call to pause().');\n\n                            case 14:\n                                this._audioNode.buffer = buffer;\n                                this._audioNode.connect(this._gainNode);\n                                this._audioNode.start();\n\n                                if (!this._audioElement.srcObject) {\n                                    _context.next = 19;\n                                    break;\n                                }\n\n                                return _context.abrupt(\"return\", this._audioElement.play());\n\n                            case 19:\n                            case \"end\":\n                                return _context.stop();\n                        }\n                    }\n                }, _callee, this);\n            }));\n        }\n        /**\n         * Change which device the sound should play through.\n         * @param sinkId - The sink of the device to play sound through.\n         */\n\n    }, {\n        key: \"setSinkId\",\n        value: function setSinkId(sinkId) {\n            return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator2.default.mark(function _callee2() {\n                return _regenerator2.default.wrap(function _callee2$(_context2) {\n                    while (1) {\n                        switch (_context2.prev = _context2.next) {\n                            case 0:\n                                if (!(typeof this._audioElement.setSinkId !== 'function')) {\n                                    _context2.next = 2;\n                                    break;\n                                }\n\n                                throw new Error('This browser does not support setSinkId.');\n\n                            case 2:\n                                if (!(sinkId === this.sinkId)) {\n                                    _context2.next = 4;\n                                    break;\n                                }\n\n                                return _context2.abrupt(\"return\");\n\n                            case 4:\n                                if (!(sinkId === 'default')) {\n                                    _context2.next = 11;\n                                    break;\n                                }\n\n                                if (!this.paused) {\n                                    this._gainNode.disconnect(this._destination);\n                                }\n                                this._audioElement.srcObject = null;\n                                this._destination = this._audioContext.destination;\n                                this._gainNode.connect(this._destination);\n                                this._sinkId = sinkId;\n                                return _context2.abrupt(\"return\");\n\n                            case 11:\n                                _context2.next = 13;\n                                return this._audioElement.setSinkId(sinkId);\n\n                            case 13:\n                                if (!this._audioElement.srcObject) {\n                                    _context2.next = 15;\n                                    break;\n                                }\n\n                                return _context2.abrupt(\"return\");\n\n                            case 15:\n                                this._gainNode.disconnect(this._audioContext.destination);\n                                this._destination = this._audioContext.createMediaStreamDestination();\n                                this._audioElement.srcObject = this._destination.stream;\n                                this._sinkId = sinkId;\n                                this._gainNode.connect(this._destination);\n\n                            case 20:\n                            case \"end\":\n                                return _context2.stop();\n                        }\n                    }\n                }, _callee2, this);\n            }));\n        }\n        /**\n         * Create a Deferred for a Promise that will be resolved when .src is set or rejected\n         *   when .pause is called.\n         */\n\n    }, {\n        key: \"_createPlayDeferred\",\n        value: function _createPlayDeferred() {\n            var deferred = new Deferred_1.default();\n            this._pendingPlayDeferreds.push(deferred);\n            return deferred;\n        }\n        /**\n         * Stop current playback and load a sound file.\n         * @param src - The source URL of the file to load\n         */\n\n    }, {\n        key: \"_load\",\n        value: function _load(src) {\n            var _this3 = this;\n\n            if (this._src && this._src !== src) {\n                this.pause();\n            }\n            this._src = src;\n            this._bufferPromise = new Promise(function (resolve, reject) {\n                return __awaiter(_this3, void 0, void 0, /*#__PURE__*/_regenerator2.default.mark(function _callee3() {\n                    var buffer;\n                    return _regenerator2.default.wrap(function _callee3$(_context3) {\n                        while (1) {\n                            switch (_context3.prev = _context3.next) {\n                                case 0:\n                                    if (src) {\n                                        _context3.next = 2;\n                                        break;\n                                    }\n\n                                    return _context3.abrupt(\"return\", this._createPlayDeferred().promise);\n\n                                case 2:\n                                    _context3.next = 4;\n                                    return bufferSound(this._audioContext, this._XMLHttpRequest, src);\n\n                                case 4:\n                                    buffer = _context3.sent;\n\n                                    this.dispatchEvent('canplaythrough');\n                                    resolve(buffer);\n\n                                case 7:\n                                case \"end\":\n                                    return _context3.stop();\n                            }\n                        }\n                    }, _callee3, this);\n                }));\n            });\n        }\n        /**\n         * Reject all deferreds for the Play promise.\n         * @param reason\n         */\n\n    }, {\n        key: \"_rejectPlayDeferreds\",\n        value: function _rejectPlayDeferreds(reason) {\n            var deferreds = this._pendingPlayDeferreds;\n            deferreds.splice(0, deferreds.length).forEach(function (_ref) {\n                var reject = _ref.reject;\n                return reject(reason);\n            });\n        }\n        /**\n         * Resolve all deferreds for the Play promise.\n         * @param result\n         */\n\n    }, {\n        key: \"_resolvePlayDeferreds\",\n        value: function _resolvePlayDeferreds(result) {\n            var deferreds = this._pendingPlayDeferreds;\n            deferreds.splice(0, deferreds.length).forEach(function (_ref2) {\n                var resolve = _ref2.resolve;\n                return resolve(result);\n            });\n        }\n    }, {\n        key: \"destination\",\n        get: function get() {\n            return this._destination;\n        }\n    }, {\n        key: \"loop\",\n        get: function get() {\n            return this._loop;\n        },\n        set: function set(shouldLoop) {\n            // If a sound is already looping, it should continue playing\n            //   the current playthrough and then stop.\n            if (!shouldLoop && this.loop && !this.paused) {\n                var _pauseAfterPlaythrough = function _pauseAfterPlaythrough() {\n                    self._audioNode.removeEventListener('ended', _pauseAfterPlaythrough);\n                    self.pause();\n                };\n\n                var self = this;\n\n                this._audioNode.addEventListener('ended', _pauseAfterPlaythrough);\n            }\n            this._loop = shouldLoop;\n        }\n        /**\n         * Whether the audio element is muted.\n         */\n\n    }, {\n        key: \"muted\",\n        get: function get() {\n            return this._gainNode.gain.value === 0;\n        },\n        set: function set(shouldBeMuted) {\n            this._gainNode.gain.value = shouldBeMuted ? 0 : 1;\n        }\n        /**\n         * Whether the sound is paused. this._audioNode only exists when sound is playing;\n         *   otherwise AudioPlayer is considered paused.\n         */\n\n    }, {\n        key: \"paused\",\n        get: function get() {\n            return this._audioNode === null;\n        }\n    }, {\n        key: \"src\",\n        get: function get() {\n            return this._src;\n        },\n        set: function set(src) {\n            this._load(src);\n        }\n        /**\n         * The srcObject of the HTMLMediaElement\n         */\n\n    }, {\n        key: \"srcObject\",\n        get: function get() {\n            return this._audioElement.srcObject;\n        },\n        set: function set(srcObject) {\n            this._audioElement.srcObject = srcObject;\n        }\n    }, {\n        key: \"sinkId\",\n        get: function get() {\n            return this._sinkId;\n        }\n    }]);\n\n    return AudioPlayer;\n}(EventTarget_1.default);\n\nexports.default = AudioPlayer;\n/**\n * Use XMLHttpRequest to load the AudioBuffer of a remote audio asset.\n * @private\n * @param context - The AudioContext to use to decode the audio data\n * @param RequestFactory - The XMLHttpRequest factory to build\n * @param src - The URL of the audio asset to load.\n * @returns A Promise containing the decoded AudioBuffer.\n */\n// tslint:disable-next-line:variable-name\nfunction bufferSound(context, RequestFactory, src) {\n    return __awaiter(this, void 0, void 0, /*#__PURE__*/_regenerator2.default.mark(function _callee4() {\n        var request, event;\n        return _regenerator2.default.wrap(function _callee4$(_context4) {\n            while (1) {\n                switch (_context4.prev = _context4.next) {\n                    case 0:\n                        request = new RequestFactory();\n\n                        request.open('GET', src, true);\n                        request.responseType = 'arraybuffer';\n                        _context4.next = 5;\n                        return new Promise(function (resolve) {\n                            request.addEventListener('load', resolve);\n                            request.send();\n                        });\n\n                    case 5:\n                        event = _context4.sent;\n                        _context4.prev = 6;\n                        return _context4.abrupt(\"return\", context.decodeAudioData(event.target.response));\n\n                    case 10:\n                        _context4.prev = 10;\n                        _context4.t0 = _context4[\"catch\"](6);\n                        return _context4.abrupt(\"return\", new Promise(function (resolve) {\n                            context.decodeAudioData(event.target.response, resolve);\n                        }));\n\n                    case 13:\n                    case \"end\":\n                        return _context4.stop();\n                }\n            }\n        }, _callee4, this, [[6, 10]]);\n    }));\n}\n//# sourceMappingURL=AudioPlayer.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/@twilio/audioplayer/es5/AudioPlayer.js?");

/***/ }),

/***/ "./node_modules/@twilio/audioplayer/es5/Deferred.js":
/*!**********************************************************!*\
  !*** ./node_modules/@twilio/audioplayer/es5/Deferred.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n\nvar Deferred = function () {\n    function Deferred() {\n        var _this = this;\n\n        _classCallCheck(this, Deferred);\n\n        this.promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n\n    _createClass(Deferred, [{\n        key: \"reject\",\n        get: function get() {\n            return this._reject;\n        }\n    }, {\n        key: \"resolve\",\n        get: function get() {\n            return this._resolve;\n        }\n    }]);\n\n    return Deferred;\n}();\n\nexports.default = Deferred;\n//# sourceMappingURL=Deferred.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/@twilio/audioplayer/es5/Deferred.js?");

/***/ }),

/***/ "./node_modules/@twilio/audioplayer/es5/EventTarget.js":
/*!*************************************************************!*\
  !*** ./node_modules/@twilio/audioplayer/es5/EventTarget.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n\nvar EventTarget = function () {\n    function EventTarget() {\n        _classCallCheck(this, EventTarget);\n\n        this._eventEmitter = new events_1.EventEmitter();\n    }\n\n    _createClass(EventTarget, [{\n        key: \"addEventListener\",\n        value: function addEventListener(name, handler) {\n            return this._eventEmitter.addListener(name, handler);\n        }\n    }, {\n        key: \"dispatchEvent\",\n        value: function dispatchEvent(name) {\n            var _eventEmitter;\n\n            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n                args[_key - 1] = arguments[_key];\n            }\n\n            return (_eventEmitter = this._eventEmitter).emit.apply(_eventEmitter, [name].concat(args));\n        }\n    }, {\n        key: \"removeEventListener\",\n        value: function removeEventListener(name, handler) {\n            return this._eventEmitter.removeListener(name, handler);\n        }\n    }]);\n\n    return EventTarget;\n}();\n\nexports.default = EventTarget;\n//# sourceMappingURL=EventTarget.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/@twilio/audioplayer/es5/EventTarget.js?");

/***/ }),

/***/ "./node_modules/@twilio/audioplayer/es5/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/@twilio/audioplayer/es5/index.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar AudioPlayer = __webpack_require__(/*! ./AudioPlayer */ \"./node_modules/@twilio/audioplayer/es5/AudioPlayer.js\");\n\nmodule.exports = AudioPlayer.default;\n\n//# sourceURL=webpack://unified-sso/./node_modules/@twilio/audioplayer/es5/index.js?");

/***/ }),

/***/ "./node_modules/available-typed-arrays/index.js":
/*!******************************************************!*\
  !*** ./node_modules/available-typed-arrays/index.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? __webpack_require__.g : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/available-typed-arrays/index.js?");

/***/ }),

/***/ "./node_modules/axios/index.js":
/*!*************************************!*\
  !*** ./node_modules/axios/index.js ***!
  \*************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! ./lib/axios */ \"./node_modules/axios/lib/axios.js\");\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/index.js?");

/***/ }),

/***/ "./node_modules/axios/lib/adapters/xhr.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/adapters/xhr.js ***!
  \************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar settle = __webpack_require__(/*! ./../core/settle */ \"./node_modules/axios/lib/core/settle.js\");\nvar cookies = __webpack_require__(/*! ./../helpers/cookies */ \"./node_modules/axios/lib/helpers/cookies.js\");\nvar buildURL = __webpack_require__(/*! ./../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar buildFullPath = __webpack_require__(/*! ../core/buildFullPath */ \"./node_modules/axios/lib/core/buildFullPath.js\");\nvar parseHeaders = __webpack_require__(/*! ./../helpers/parseHeaders */ \"./node_modules/axios/lib/helpers/parseHeaders.js\");\nvar isURLSameOrigin = __webpack_require__(/*! ./../helpers/isURLSameOrigin */ \"./node_modules/axios/lib/helpers/isURLSameOrigin.js\");\nvar createError = __webpack_require__(/*! ../core/createError */ \"./node_modules/axios/lib/core/createError.js\");\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/adapters/xhr.js?");

/***/ }),

/***/ "./node_modules/axios/lib/axios.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/axios.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\nvar Axios = __webpack_require__(/*! ./core/Axios */ \"./node_modules/axios/lib/core/Axios.js\");\nvar mergeConfig = __webpack_require__(/*! ./core/mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\nvar defaults = __webpack_require__(/*! ./defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = __webpack_require__(/*! ./cancel/Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\naxios.CancelToken = __webpack_require__(/*! ./cancel/CancelToken */ \"./node_modules/axios/lib/cancel/CancelToken.js\");\naxios.isCancel = __webpack_require__(/*! ./cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = __webpack_require__(/*! ./helpers/spread */ \"./node_modules/axios/lib/helpers/spread.js\");\n\n// Expose isAxiosError\naxios.isAxiosError = __webpack_require__(/*! ./helpers/isAxiosError */ \"./node_modules/axios/lib/helpers/isAxiosError.js\");\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/Cancel.js":
/*!*************************************************!*\
  !*** ./node_modules/axios/lib/cancel/Cancel.js ***!
  \*************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/cancel/Cancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/CancelToken.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/cancel/CancelToken.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar Cancel = __webpack_require__(/*! ./Cancel */ \"./node_modules/axios/lib/cancel/Cancel.js\");\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/cancel/CancelToken.js?");

/***/ }),

/***/ "./node_modules/axios/lib/cancel/isCancel.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/cancel/isCancel.js ***!
  \***************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/cancel/isCancel.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/Axios.js":
/*!**********************************************!*\
  !*** ./node_modules/axios/lib/core/Axios.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar buildURL = __webpack_require__(/*! ../helpers/buildURL */ \"./node_modules/axios/lib/helpers/buildURL.js\");\nvar InterceptorManager = __webpack_require__(/*! ./InterceptorManager */ \"./node_modules/axios/lib/core/InterceptorManager.js\");\nvar dispatchRequest = __webpack_require__(/*! ./dispatchRequest */ \"./node_modules/axios/lib/core/dispatchRequest.js\");\nvar mergeConfig = __webpack_require__(/*! ./mergeConfig */ \"./node_modules/axios/lib/core/mergeConfig.js\");\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/core/Axios.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/InterceptorManager.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/core/InterceptorManager.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/core/InterceptorManager.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/buildFullPath.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/buildFullPath.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isAbsoluteURL = __webpack_require__(/*! ../helpers/isAbsoluteURL */ \"./node_modules/axios/lib/helpers/isAbsoluteURL.js\");\nvar combineURLs = __webpack_require__(/*! ../helpers/combineURLs */ \"./node_modules/axios/lib/helpers/combineURLs.js\");\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/core/buildFullPath.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/createError.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/createError.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar enhanceError = __webpack_require__(/*! ./enhanceError */ \"./node_modules/axios/lib/core/enhanceError.js\");\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/core/createError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/dispatchRequest.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/core/dispatchRequest.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\nvar transformData = __webpack_require__(/*! ./transformData */ \"./node_modules/axios/lib/core/transformData.js\");\nvar isCancel = __webpack_require__(/*! ../cancel/isCancel */ \"./node_modules/axios/lib/cancel/isCancel.js\");\nvar defaults = __webpack_require__(/*! ../defaults */ \"./node_modules/axios/lib/defaults.js\");\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/core/dispatchRequest.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/enhanceError.js":
/*!*****************************************************!*\
  !*** ./node_modules/axios/lib/core/enhanceError.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/core/enhanceError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/mergeConfig.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/core/mergeConfig.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/core/mergeConfig.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/settle.js":
/*!***********************************************!*\
  !*** ./node_modules/axios/lib/core/settle.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar createError = __webpack_require__(/*! ./createError */ \"./node_modules/axios/lib/core/createError.js\");\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/core/settle.js?");

/***/ }),

/***/ "./node_modules/axios/lib/core/transformData.js":
/*!******************************************************!*\
  !*** ./node_modules/axios/lib/core/transformData.js ***!
  \******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/core/transformData.js?");

/***/ }),

/***/ "./node_modules/axios/lib/defaults.js":
/*!********************************************!*\
  !*** ./node_modules/axios/lib/defaults.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser */ \"./node_modules/process/browser.js\");\n\n\nvar utils = __webpack_require__(/*! ./utils */ \"./node_modules/axios/lib/utils.js\");\nvar normalizeHeaderName = __webpack_require__(/*! ./helpers/normalizeHeaderName */ \"./node_modules/axios/lib/helpers/normalizeHeaderName.js\");\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = __webpack_require__(/*! ./adapters/xhr */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = __webpack_require__(/*! ./adapters/http */ \"./node_modules/axios/lib/adapters/xhr.js\");\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/defaults.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/bind.js":
/*!************************************************!*\
  !*** ./node_modules/axios/lib/helpers/bind.js ***!
  \************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/helpers/bind.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/buildURL.js":
/*!****************************************************!*\
  !*** ./node_modules/axios/lib/helpers/buildURL.js ***!
  \****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/helpers/buildURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/combineURLs.js":
/*!*******************************************************!*\
  !*** ./node_modules/axios/lib/helpers/combineURLs.js ***!
  \*******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/helpers/combineURLs.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/cookies.js":
/*!***************************************************!*\
  !*** ./node_modules/axios/lib/helpers/cookies.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/helpers/cookies.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAbsoluteURL.js":
/*!*********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAbsoluteURL.js ***!
  \*********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/helpers/isAbsoluteURL.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isAxiosError.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isAxiosError.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/helpers/isAxiosError.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/isURLSameOrigin.js":
/*!***********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/isURLSameOrigin.js ***!
  \***********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/helpers/isURLSameOrigin.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/normalizeHeaderName.js":
/*!***************************************************************!*\
  !*** ./node_modules/axios/lib/helpers/normalizeHeaderName.js ***!
  \***************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ../utils */ \"./node_modules/axios/lib/utils.js\");\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/helpers/normalizeHeaderName.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/parseHeaders.js":
/*!********************************************************!*\
  !*** ./node_modules/axios/lib/helpers/parseHeaders.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar utils = __webpack_require__(/*! ./../utils */ \"./node_modules/axios/lib/utils.js\");\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/helpers/parseHeaders.js?");

/***/ }),

/***/ "./node_modules/axios/lib/helpers/spread.js":
/*!**************************************************!*\
  !*** ./node_modules/axios/lib/helpers/spread.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/helpers/spread.js?");

/***/ }),

/***/ "./node_modules/axios/lib/utils.js":
/*!*****************************************!*\
  !*** ./node_modules/axios/lib/utils.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! ./helpers/bind */ \"./node_modules/axios/lib/helpers/bind.js\");\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/axios/lib/utils.js?");

/***/ }),

/***/ "./src/data.js":
/*!*********************!*\
  !*** ./src/data.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Data)\n/* harmony export */ });\nconst axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nlet DB_URL = \"https://widgets.${this.getRegion()}.500apps.com/widgets\";\nlet unified_url = \"https://applet.${this.getRegion()}.500apps.com\";\nlet unified2_url = \"https://applet2.500apps.com\";\nclass Data {\n  getHeaders() {\n    return {\n      headers: {\n        Authorization: `Bearer ${window._AppletIO.apiKey}`\n      }\n    };\n  }\n\n  getUserDetails() {\n    let parsedToken = \"\";\n    if (window.Active_JWT && window.Active_JWT.jwt) parsedToken = window.Active_JWT.jwt;else if (document.cookie) {\n      let token = document.cookie.split(\"; \").filter(cookie => {\n        return cookie.includes(\"token=\");\n      })[0];\n      parsedToken = JSON.parse(decodeURIComponent(token.split(\"=\")[1])).jwt;\n    } else {\n      parsedToken = window.location.pathname?.split(\"/\") ? window.location.pathname.split(\"/\")[2] : \"\";\n    }\n    return parsedToken;\n  }\n\n  async get(entity, params) {\n    this.setURL();\n    let url = entity.includes(\"v1/apps/active\") ? `${DB_URL}/${entity}` : `${DB_URL}/widgets_v2/${entity}`;\n    if (params) url += `?${params}`;\n    let response = await axios.get(url, this.getHeaders());\n    return response.data;\n  }\n\n  async add(entity, form) {\n    let url = `${DB_URL}/widgets_v2/${entity}`;\n    let response = await axios.post(url, form, this.getHeaders());\n    return response.data;\n  }\n\n  async edit(form, entity) {\n    let tableName = entity ? entity : \"external_users\";\n    let url = `${DB_URL}/widgets_v2/${tableName}`;\n    let response = await axios.put(url, form, this.getHeaders());\n    return response;\n  }\n\n  async delete(id, entity) {\n    let url = `${DB_URL}/widgets_v2/${entity}/${id}`;\n    let response = await axios.delete(url, this.getHeaders());\n    return response;\n  }\n\n  async verify(app, fields) {\n    let url = `${unified_url}/v1/${app}/verify`;\n    let headers = { ...fields\n    };\n    headers[\"Authorization\"] = `Bearer ${window._AppletIO.apiKey}`;\n    let response;\n\n    try {\n      response = await axios.get(url, {\n        headers\n      });\n    } catch (err) {\n      url = `${unified2_url}/${app}/verify`;\n      response = await axios.get(url, {\n        headers\n      });\n    }\n\n    return response.data;\n  }\n\n  async widget_details(widget_id, name) {\n    let db_response = await this.get(\"external_users\", `where=id=${widget_id}`);\n    let app_name = db_response[0].app_name;\n    let headers = JSON.parse(db_response[0].auth_json);\n    let headers_data = {};\n    Object.keys(headers).forEach(key => {\n      headers_data[key.replace(\"_\", \"-\")] = headers[key];\n      delete headers[key];\n    });\n    let url = `${unified2_url}/${app_name}/${name}`;\n\n    let paramsObject = window._AppletIO.getWidget().params;\n\n    let params = \"\";\n\n    try {\n      // Append key & value to params string\n      Object.keys(paramsObject).forEach(function (key) {\n        params += `${key}=${window._AppletIO.getWidget().params[key]}&`;\n      });\n      if (Object.keys(paramsObject).length > 0) url += `?${params.substring(0, params.length - 1)}`;\n    } catch (error) {}\n\n    headers_data[\"Authorization\"] = `Bearer ${window._AppletIO.apiKey}`;\n    let header_details = {};\n    let response;\n\n    if (app_name == \"Box\") {\n      header_details = headers_data;\n      let access_token = JSON.parse(headers_data.token.replace(/'/g, '\"')).access_token;\n      header_details[\"access-token\"] = access_token;\n      header_details[\"widget_id\"] = widget_id;\n      delete header_details[\"token\"]; // Handles error when access token get expired and make a request with the client credentials without access token\n\n      try {\n        response = await axios.get(url, {\n          headers: header_details\n        });\n      } catch (err) {\n        if (err.response.data && err.response.data.error.includes(\"Error Expecting value\")) {\n          delete header_details[\"access-token\"];\n          response = await axios.get(url, {\n            headers: header_details\n          });\n        }\n      }\n    } else {\n      response = await axios.get(url, {\n        headers: headers_data\n      });\n    }\n\n    return response.data;\n  }\n\n  getRegion() {\n    return window._AppletIO.region;\n  }\n\n  setURL() {\n    if (DB_URL.includes(\"this.getRegion()\") || unified_url.includes(\"this.getRegion()\") || unified2_url.includes(\"this.getRegion()\")) {\n      DB_URL = eval(\"`\" + DB_URL + \"`\");\n      unified_url = eval(\"`\" + unified_url + \"`\");\n      unified2_url = eval(\"`\" + unified2_url + \"`\");\n    }\n  }\n\n  async widget_action(widget_id, name, form) {\n    let url = `${unified_url}/v1/${widget_id}/${name}`;\n    let headers = this.getHeaders();\n    if (name == \"Box\") headers[widget_id] = widget_id;\n    let response = await axios.post(url, form, headers);\n    return response.data;\n  }\n  /**\n   * Method used to add/post actions\n   * @param {Number} widget_id - app widget id\n   * @param {String} name - method name\n   * @param {JSON} form - json data\n   */\n\n\n  async add_widget_action(widget_id, name, form) {\n    // Call to get the authenticated widget data\n    let db_url = `${DB_URL}/widgets_v2/external_users?where=id=${widget_id}`;\n    let get_response = await axios.get(db_url, this.getHeaders());\n    let app_name = get_response[\"data\"][0].app_name; // Preapring headers to call unified2\n\n    let headers = JSON.parse(get_response[\"data\"][0].auth_json);\n    let headers_data = {};\n    Object.keys(headers).forEach(key => {\n      headers_data[key.replace(\"_\", \"-\")] = headers[key];\n      delete headers[key];\n    });\n    headers_data[\"Authorization\"] = `Bearer ${window._AppletIO.apiKey}`; // Calling unified2\n\n    let url = `${unified2_url}/${app_name}/${name}`;\n    if (name == \"Box\") headers[widget_id] = widget_id;\n    let response = await axios.post(url, form, {\n      headers: headers_data\n    });\n    return response.data;\n  }\n  /**\n   * Method used to get data\n   * @param {String} plugin_id - plugin_id\n   * @param {String} name - entity name\n   */\n\n\n  async getEntityData(plugin_id, name) {\n    let url = `${unified_url}/v1/${plugin_id}/${name}`;\n\n    let paramsObject = window._AppletIO.getWidget().params;\n\n    let params = \"\";\n\n    try {\n      // Append key & value to params string\n      Object.keys(paramsObject).forEach(function (key) {\n        params += `${key}=${window._AppletIO.getWidget().params[key]}&`;\n      });\n      if (Object.keys(paramsObject).length > 0) url += `?${params.substring(0, params.length - 1)}`;\n    } catch (error) {}\n\n    let response = await axios.get(url, this.getHeaders());\n    return response.data;\n  }\n\n}\n\n//# sourceURL=webpack://unified-sso/./src/data.js?");

/***/ }),

/***/ "./src/dom.js":
/*!********************!*\
  !*** ./src/dom.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass DOM {\n  /**\n   * Method used to display content of the specific element\n   * @param {String} id - Element Id\n   */\n  show(id) {\n    document.getElementById(id).style.display = \"block\";\n  }\n  /**\n   * Method used to hide content of the specific element\n   * @param {String} id - Element Id\n   */\n\n\n  hide(id) {\n    document.getElementById(id).style.display = \"none\";\n  }\n  /**\n   * Method used to disable the specific element\n   * @param {String} id - Element Id\n   */\n\n\n  disable(id) {\n    document.getElementById(id).disabled = true;\n  }\n  /**\n   * Method used to enable the specific element\n   * @param {String} id - Element Id\n   */\n\n\n  enable(id) {\n    document.getElementById(id).disabled = false;\n  }\n  /**\n   * Method used to add class for specific element\n   * @param {String} id - Element Id\n   * @param {String} class_name - Element Class Name\n   */\n\n\n  addClass(id, class_name) {\n    document.getElementById(id).classList.add(class_name);\n  }\n  /**\n    * Method used to remove class for specific element\n    * @param {String} id - Element Id\n    * @param {String} class_name - Element Class Name\n    */\n\n\n  removeClass(id, class_name) {\n    document.getElementById(id).classList.remove(class_name);\n  }\n  /**\n   * Method used to hide content of the specific element\n   * @param {String} name - Element\n   * @param {String} attribute - Attribute\n   * @param {String} value - value\n   */\n\n\n  create_element(name, attribute, value) {\n    let element = document.createElement(name);\n    element.setAttribute(attribute, value);\n    return element;\n  }\n  /**\n  * Method used to remove specific element\n  * @param {String} id - Element Id\n  */\n\n\n  removeElement(id) {\n    document.getElementById(id).remove();\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new DOM());\n\n//# sourceURL=webpack://unified-sso/./src/dom.js?");

/***/ }),

/***/ "./src/filepicker/filepicker.js":
/*!**************************************!*\
  !*** ./src/filepicker/filepicker.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data.js */ \"./src/data.js\");\n/* harmony import */ var _util_render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/render.js */ \"./src/util/render.js\");\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../dom.js */ \"./src/dom.js\");\n/* harmony import */ var _util_jwt__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/jwt */ \"./src/util/jwt.js\");\n\n\n\nconst pcors = \"https://my.${this.getRegion()}.500apps.com/pcors?url=\";\n\nconst axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nconst server_url = \"https://plugins.${this.getRegion()}.500apps.com/plugins\";\nconst profile_url = \"https://applet.${this.getRegion()}.500apps.com\";\nconst upload_file_url = \"https://api.${this.getRegion()}.500apps.com/fs/upload\";\nlet flag = true;\n\n\nclass Filepicker extends _data_js__WEBPACK_IMPORTED_MODULE_0__.default {\n  /**\n   * Method used to invoke Get Files Functionality\n   */\n  async getFile(callback) {\n    window.callback = eval(callback);\n    this.oauth_url = eval(\"`\" + server_url + \"`\"); // variable used to define Upload Files functionality\n\n    this.file_upload = false;\n    let element = _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.create_element(\"div\", \"id\", \"_500apps_file_picker\");\n    element.style.background = \"transparent\";\n    document.body.appendChild(element);\n    await this.showApps();\n  }\n  /**\n   * Method used to invoke Upload Files Functionality\n   */\n\n\n  async uploadFile(file, callback) {\n    window.file = file;\n    this.oauth_url = eval(\"`\" + server_url + \"`\");\n    let element = _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.create_element(\"div\", \"id\", \"_500apps_file_picker\");\n    document.body.appendChild(element); // variable used to define Upload Files functionality\n\n    this.file_upload = true;\n    await this.showApps();\n    window.callback = callback;\n  }\n  /**\n   * Method used to check dropdown data\n   */\n\n\n  async dropdownData() {\n    if (document.getElementById(\"accounts_dropdown\")) {\n      let value = document.getElementById(\"accounts_dropdown\").value;\n      if (value == \"Manage Accounts\") await this.showApps();else {\n        let plugin_id = value;\n        await this.showFiles(plugin_id);\n      }\n    }\n  }\n  /**\n   * Method used to show apps data\n   */\n\n\n  async showApps() {\n    let result = this.getUserDetails();\n    this.user_data = _util_jwt__WEBPACK_IMPORTED_MODULE_3__.default.parseJWT(result);\n    let integrations = await this.get(\"app_sso\", \"where=type='file' and is_active=1\").catch(error => console.log(error));\n    integrations.forEach(i => i.logo = i.app.replace(\" \", \"-\").toLowerCase());\n    await _util_render_js__WEBPACK_IMPORTED_MODULE_1__.default.render_template(\"_500apps_file_picker\", \"filepicker/home\", integrations);\n    await this.showConnectedAccounts();\n    _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.hide(\"filesModal\");\n    _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.show(\"appsModal\");\n  }\n  /**\n   * Method used to show authentication modal\n   * @param {String} app_name - App Name\n   */\n\n\n  async authenticate(app_name) {\n    let active_users = await this.get(\"external_users\", `where=type='filepicker' and application_user_key='${this.user_data.email}'`);\n    let response = await window._AppletIO.getOAuth().authenticate(app_name);\n\n    if (!window.oauthPopup && active_users.length) {\n      let index = active_users.findIndex(active_user_data => active_user_data.app_name == app_name);\n      if (index != -1) await this.delete(active_users[index].id, \"external_users\");\n    }\n\n    await this.addApp(app_name, JSON.stringify(response.data));\n    await this.showConnectedAccounts();\n  }\n  /**\n   * Method used to show connected accounts\n   */\n\n\n  async showConnectedAccounts() {\n    document.getElementById(\"connected-apps\").innerText = \"\";\n    this.active_apps = await this.get(\"external_users\", `where=type='filepicker' and application_user_key='${this.user_data.email}'`); // Display profile info for connected accounts\n\n    await Promise.all(this.active_apps.map(async item => {\n      let profile_data;\n\n      try {\n        profile_data = await this.widget_details(item.id, \"profile\");\n        item.error = false;\n      } catch (err) {\n        console.log(err);\n        item.error = true;\n      }\n\n      item.logo = item.app_name.toLowerCase().replace(\" \", \"-\");\n      item.email = JSON.parse(item.auth_json).email;\n      item.profile_name = profile_data ? profile_data.name : \"\";\n      return item;\n    }));\n    await _util_render_js__WEBPACK_IMPORTED_MODULE_1__.default.render_template(\"connected-apps\", \"filepicker/connected-apps\", this.active_apps, \"append\");\n  }\n  /**\n   * Method used to insert authentication data\n   * @param {String} app_name - App Name\n   * @param {String} token - App authentication data\n   */\n\n\n  async addApp(app_name, token) {\n    let form = {\n      auth_json: token,\n      app_name: app_name,\n      application_user_key: this.user_data.email,\n      type: \"filepicker\"\n    };\n    document.getElementById(\"connected-apps\").innerText = \"\";\n    await _util_render_js__WEBPACK_IMPORTED_MODULE_1__.default.render_template(\"connected-apps\", \"filepicker/connected-apps\", this.active_apps, \"append\");\n    let response = await this.add(\"external_users\", form);\n    await this.getProfile(response, token);\n  }\n  /**\n   * Method used to get profile data of authenticated user\n   * @param {String} plugin_id - Plugin id\n   * @param {String} token - authentication token data\n   */\n\n\n  async getProfile(plugin_id, token) {\n    let user_data = await this.widget_details(plugin_id, \"profile\");\n    let auth_data = JSON.parse(token);\n    auth_data.email = user_data.email;\n    let form = {\n      auth_json: JSON.stringify(auth_data),\n      id: plugin_id\n    };\n    await this.edit(form);\n  }\n  /**\n   * Method used to show files of selected account\n   * @param {String} plugin_id - Plugin id\n   */\n\n\n  async showFiles(plugin_id, name) {\n    _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.show(`connected_account_data${plugin_id}`);\n    let profile = this.active_apps; //variable used to define the path for unified call to differentiate get and upload files functionality\n\n    let path = \"files\",\n        files_response;\n    if (this.file_upload) path = this.file_upload && name == \"Dropbox\" ? \"files\" : \"folders\";\n\n    try {\n      files_response = await this.widget_details(plugin_id, path);\n    } catch (error) {\n      try {\n        window._AppletIO.callback({\n          message: error.response.data.error,\n          status: error.response.status\n        });\n      } catch (err) {\n        console.log(err);\n      }\n\n      let app = profile.findIndex(id => id.id == plugin_id);\n      this.active_apps[app].error = true;\n      document.getElementById(\"connected-apps\").innerText = \"\";\n      await _util_render_js__WEBPACK_IMPORTED_MODULE_1__.default.render_template(\"connected-apps\", \"filepicker/connected-apps\", this.active_apps, \"append\");\n      this.active_apps[app].error = false;\n    }\n\n    if (files_response) {\n      this.files = {\n        response: files_response,\n        sub_type: true,\n        profile,\n        plugin_id\n      };\n      this.files_data = this.files;\n      this.files.profile = this.files.profile.filter(data => data.app_name == name);\n\n      window._AppletIO.getModal().close(\"appsModal\");\n\n      this.files.response.forEach(item => {\n        if (item.type.includes(\"folder\")) item.file_type = true;else item.file_type = false;\n      });\n\n      window._AppletIO.getModal().show(\"filesModal\", \"files\", \"filepicker/files\", this.files);\n\n      await this.loadFiles();\n    }\n  }\n  /**\n   * Method used to get files data\n   * @param {String} plugin_id - Plugin Id\n   * @param {String} path - file path\n   */\n\n\n  async getData(plugin_id, path) {\n    let files_data = await this.getEntityData(plugin_id, path);\n    files_data.forEach(item => {\n      if (item.type.includes(\"folder\")) item.file_type = true;else item.file_type = false;\n    });\n    return files_data;\n  }\n  /**\n   * Method used to load files\n   * @param {String} id - Folder Id\n   */\n\n\n  async loadFiles(id) {\n    if (this.file_upload) _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.show(\"modalFields\");\n    document.getElementById(\"show_files_data\").innerText = \"\";\n    let data = \"\";\n\n    if (id) {\n      document.getElementById(`_500apps_file_picker_${id}`).style.pointerEvents = \"none\";\n      _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.show(\"show_loader\");\n      await this.removeElements(id);\n      data = await this.getFolderData(id);\n      _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.hide(\"show_loader\");\n    } else {\n      document.getElementById(\"show_folder_name\").innerText = \"\";\n      data = this.files;\n      this.files_data = this.files;\n    }\n\n    await _util_render_js__WEBPACK_IMPORTED_MODULE_1__.default.render_template(\"show_files_data\", \"filepicker/child-data\", data, \"append\");\n    document.getElementById(`_500apps_file_picker_${id}`).style.pointerEvents = \"auto\";\n  }\n  /**\n   * Method used to remove DOM element\n   * @param {String} id - Folder id\n   */\n\n\n  removeElements(id) {\n    let elements = document.getElementById(\"show_folder_name\").getElementsByTagName(\"span\");\n\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].id == `_500apps_file_picker_${id}`) {\n        for (let j = elements.length - 1; j > i; j--) {\n          elements[j].remove();\n        }\n\n        break;\n      }\n    }\n  }\n  /**\n   * @param {String} id - File id\n   * @param {String} file_name - File Name\n   * @param {String} type - File Type\n   */\n\n\n  async getFileId(id, file_name, type) {\n    this.selected_file_id = id;\n    await this.checkFileClass(id);\n\n    if (type.includes(\"folder\")) {\n      document.getElementById(id).style.pointerEvents = \"none\";\n      if (!this.file_upload) _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.hide(\"modalFields\");\n      _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.show(`selected_folder_${id}`);\n      let files = await this.getFolderData(id);\n      let folder_data = {\n        file_name,\n        id\n      };\n      files.response.forEach(item => {\n        if (item.type.includes(\"folder\")) item.file_type = true;else item.file_type = false;\n      });\n      document.getElementById(id).style.pointerEvents = \"auto\";\n      document.getElementById(\"show_files_data\").innerText = \" \";\n      await _util_render_js__WEBPACK_IMPORTED_MODULE_1__.default.render_template(\"show_folder_name\", \"filepicker/file-path\", { ...folder_data,\n        ...{\n          flag\n        }\n      }, \"append\");\n      await _util_render_js__WEBPACK_IMPORTED_MODULE_1__.default.render_template(\"show_files_data\", \"filepicker/child-data\", files, \"append\");\n    } else {\n      _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.show(\"modalFields\");\n      await this.setFileData(id, file_name, type);\n    }\n\n    flag = false;\n  }\n  /**\n   * Method used to set file data\n   * @param {String} id - File id\n   * @param {String} file_name - File Name\n   * @param {String} type - File Type\n   */\n\n\n  async setFileData(id, file_name, type) {\n    window._AppletIO.getWidget().params = {\n      file_id: id\n    }; // let url= eval(\"`\" + pcors + \"`\");\n    // let file_response = await axios.get(url+response.file_url, { responseType:\"blob\" })\n    // this.selected_file = file_response.data;\n  }\n  /**\n   * Method used to show list of files in folder\n   * @param {String} id - Folder Id\n   */\n\n\n  async getFolderData(id) {\n    window._AppletIO.getWidget().params = {\n      folder_id: id\n    }; //variable used to define the path for unified call to differentiate get and upload files functionality\n\n    let path = \"filesinfolder\"; // if (this.file_upload) path = \"foldersinfolder\";\n\n    let folder_data = await this.widget_details(this.files.plugin_id, path);\n    let files = {\n      response: folder_data,\n      file_response: JSON.stringify(folder_data)\n    };\n    this.files_data = files;\n    return files;\n  }\n  /**\n   * Method used to check file class\n   * @param {String} id - File Id\n   */\n\n\n  async checkFileClass(id) {\n    for (var i = 0; i < document.getElementsByClassName(\"filesData\").length; i++) {\n      for (let j = 0; j < this.files_data.response.length; j++) {\n        if (document.getElementById(this.files_data.response[j].id).id != id) {\n          document.getElementById(this.files_data.response[j].id).classList.add(\"text-muted\");\n        }\n      }\n    }\n\n    document.getElementById(id).classList.remove(\"text-muted\");\n  }\n  /**\n   * Method used to send selected file data\n   */\n\n\n  async sendFileData() {\n    try {\n      if (this.file_upload) await this.getAccessToken();else {\n        let response = await this.widget_details(this.files.plugin_id, \"file\");\n        let content = await this.widget_details(this.files.plugin_id, \"get_file\");\n        let object = {\n          file_content: content,\n          file_type: response.type,\n          file_name: response.file_name\n        };\n\n        try {\n          window._AppletIO.callback(object);\n        } catch (err) {\n          window._AppletIO.callback({\n            message: error.response.data.error,\n            status: error.response.status\n          });\n        } finally {\n          window._AppletIO.getModal().close(\"filesModal\");\n        }\n\n        window.callback(object);\n      }\n    } catch (error) {\n      window._AppletIO.callback({\n        message: error.response ? error.response.data.error : error.message,\n        status: error.response ? error.response.status : \"\"\n      });\n    }\n\n    document.getElementById(\"_500apps_file_picker\").remove();\n  }\n  /**\n   * Method used to get access token\n   */\n\n\n  async getAccessToken() {\n    let response = this.active_apps.filter(item => item.id == this.files.plugin_id);\n    let app_name = response[0].app_name;\n    response = JSON.parse(response[0].auth_json).token.replaceAll(`'`, `\"`);\n    let token_data = JSON.parse(response);\n    let access_token = token_data.access_token;\n    this.fileUpload(access_token, app_name);\n  }\n  /**\n   * Method used to Upload file\n   * @param {String} access_token - Access Token\n   */\n\n\n  async fileUpload(access_token, app_name) {\n    let app = app_name == \"Google Drive\" ? \"gdrive\" : app_name.toLowerCase();\n    document.getElementById(\"showButton\").style.pointerEvents = \"none\";\n    let folder_id = this.selected_file_id;\n    const formData = new FormData();\n    formData.append(\"file\", window.file);\n    _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.show(\"show_loader\");\n    let url = eval(\"`\" + upload_file_url + \"`\");\n    let upload_url = `${url}/${app}?content_type=application/json&path=${folder_id}`;\n    return new Promise(async (resolve, reject) => {\n      try {\n        let upload_response = await axios.post(upload_url, formData, {\n          headers: {\n            token: access_token\n          }\n        });\n        window.callback(upload_response);\n      } catch (err) {\n        window.callback(\"Failed\");\n      }\n\n      _dom_js__WEBPACK_IMPORTED_MODULE_2__.default.hide(\"show_loader\");\n\n      window._AppletIO.getModal().close(\"filesModal\");\n\n      document.getElementById(\"_500apps_file_picker\").remove();\n    });\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Filepicker());\n\n//# sourceURL=webpack://unified-sso/./src/filepicker/filepicker.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Unified)\n/* harmony export */ });\n/* harmony import */ var _global_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./global.css */ \"./src/global.css\");\n/* harmony import */ var _widget_widget__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./widget/widget */ \"./src/widget/widget.js\");\n/* harmony import */ var _sso_sso__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sso/sso */ \"./src/sso/sso.js\");\n/* harmony import */ var _util_modal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util/modal.js */ \"./src/util/modal.js\");\n/* harmony import */ var _util_jwt_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./util/jwt.js */ \"./src/util/jwt.js\");\n/* harmony import */ var _oauth_oauth_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./oauth/oauth.js */ \"./src/oauth/oauth.js\");\n/* harmony import */ var _widget_twilio_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./widget/twilio.js */ \"./src/widget/twilio.js\");\n/* harmony import */ var _filepicker_filepicker_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./filepicker/filepicker.js */ \"./src/filepicker/filepicker.js\");\n\n\n\n\n\n\n\n\n\nconst Apps = __webpack_require__(/*! ./apps.json */ \"./src/apps.json\");\n\nconst Widget_URL = \"https://plugins.500apps.com\";\nconst URL = \"https://plugins.${this.getRegion()}.500apps.com/plugins\";\nclass Unified {\n  constructor() {\n    this.callback = \"\";\n    this.apiKey = ''; // Store API Key\n  }\n  /**\n   * Initialization method (starting point)\n   * @param {String} apiKey - Developer api key\n   */\n\n\n  init(apiKey, callback) {\n    this.callback = callback;\n    this.apiKey = apiKey;\n    this.region = _util_jwt_js__WEBPACK_IMPORTED_MODULE_4__.default.getRegion();\n    return this;\n  }\n\n  getSSO() {\n    _oauth_oauth_js__WEBPACK_IMPORTED_MODULE_5__.default.URL = URL;\n    return _sso_sso__WEBPACK_IMPORTED_MODULE_2__.default;\n  }\n\n  getWidget() {\n    _oauth_oauth_js__WEBPACK_IMPORTED_MODULE_5__.default.URL = Widget_URL;\n    return _widget_widget__WEBPACK_IMPORTED_MODULE_1__.default;\n  }\n\n  getOAuth() {\n    _oauth_oauth_js__WEBPACK_IMPORTED_MODULE_5__.default.URL = URL;\n    return _oauth_oauth_js__WEBPACK_IMPORTED_MODULE_5__.default;\n  }\n\n  getModal() {\n    return _util_modal_js__WEBPACK_IMPORTED_MODULE_3__.default;\n  }\n\n  getApps() {\n    return Apps;\n  }\n\n  getTwilio() {\n    return _widget_twilio_js__WEBPACK_IMPORTED_MODULE_6__.default;\n  }\n\n  getFilePicker() {\n    return _filepicker_filepicker_js__WEBPACK_IMPORTED_MODULE_7__.default;\n  }\n\n}\n\n(() => {\n  window._AppletIO = new Unified();\n})();\n\n//# sourceURL=webpack://unified-sso/./src/main.js?");

/***/ }),

/***/ "./src/oauth/oauth.js":
/*!****************************!*\
  !*** ./src/oauth/oauth.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data.js */ \"./src/data.js\");\nconst appsData = __webpack_require__(/*! ../apps.json */ \"./src/apps.json\");\n\nconst SSOAppsData = __webpack_require__(/*! ../sso/apps-sso.json */ \"./src/sso/apps-sso.json\");\n\nconst Server_url = \"https://nice-fly-84.loca.lt/plugins\";\n\n\nclass OAuth extends _data_js__WEBPACK_IMPORTED_MODULE_0__.default {\n  authenticate(app_name, type, hybrid_url) {\n    window.oauthPopup = false;\n    let OAuth_URL = eval(\"`\" + this.URL + \"`\");\n    type = type && type == \"SSO\" ? \"SSO\" : \"OAuth\";\n    let oauthType = this.getOAuthType(app_name, type);\n    let url = eval(\"`\" + Server_url + \"`\");\n\n    if (app_name == \"Trello\") {\n      OAuth_URL = `${url}/_oauth1/widgets/${app_name}/authorize`;\n    } else if (app_name == \"Microsoft Dynamics 365 CRM\") {\n      OAuth_URL = `${url}/_oauth2/widgets/` + encodeURIComponent(`${app_name}`) + \"/authorize?organization_url=\" + encodeURIComponent(`${hybrid_url}`);\n    } else if (app_name == \"Quickbooks Online\") {\n      OAuth_URL = `${url}/_oauth${oauthType}/flow/${app_name}/authorize`;\n    } else if (app_name.includes(\"Zoho\")) {\n      OAuth_URL = `${url}/_oauth${oauthType}/widgets/` + encodeURIComponent(`${app_name}`) + `/authorize?data_center=${hybrid_url}`;\n    } else OAuth_URL = `https://nice-fly-84.loca.lt/plugins/_oauth${oauthType}/flow/${app_name}/authorize`;\n\n    return new Promise(function (resolve, reject) {\n      var oauthToken = \"\";\n      window.addEventListener(\"message\", function (event) {\n        alert(\"In unified js listener\");\n        oauthToken = event.data.token;\n\n        if (event.origin.includes(\"aws\") || event.origin.includes(\"http://nice-fly-84.loca.lt\")) {\n          if (type == \"OAuth\") event.source.postMessage(\"Please close yourself!\", event.origin);\n          if (event.data.token) event.data.token = decodeURIComponent(event.data.token);\n          resolve(event);\n        }\n      });\n      let oauthPopupWindow = window.open(`${OAuth_URL}`, \"popUpWindow\", \"height=500,width=700,left=50,top=50,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes\");\n      ablyService.listen(message => {\n        console.log(\"message=============>\", message);\n        oauthToken = message.token;\n\n        if (window.location.origin.includes(\"aws\") || window.location.origin.includes(\"http://honest-dog-47.loca.lt \")) {\n          //  if (type == \"OAuth\") event.source.postMessage(\"Please close yourself!\", window.location.origin);\n          if (message.token) message.token = decodeURIComponent(message.token);\n        }\n\n        resolve(message.token);\n      }); // try{\n      //   window.user_data=(data) => {\n      //     alert(\"inside try\",data);\n      //    console.log(\"data for login python\",data);\n      //   };\n      //  }\n      //  catch(e){\n      //   alert(\"catch\",e);\n      //    console.log(\"catch flutter error\");\n      //  }\n      // this.injectScript();\n      // check if popup window is closed\n\n      if (!oauthPopupWindow) return;\n      var timer = setInterval(() => {\n        if (oauthPopupWindow.closed && !oauthToken) {\n          console.log(\"oauthPopUP WINDOW========\");\n          clearInterval(timer);\n          window.oauthPopup = true;\n        }\n      }, 1000);\n    });\n  }\n\n  getOAuthType(app_name, type) {\n    let apps = type == \"SSO\" ? SSOAppsData : appsData;\n    let fields = apps.find(i => i.name == app_name).api;\n    let auth_type = fields.includes(\"client_id\") ? 2 : 1;\n    return auth_type;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new OAuth());\n\n//# sourceURL=webpack://unified-sso/./src/oauth/oauth.js?");

/***/ }),

/***/ "./src/rest.js":
/*!*********************!*\
  !*** ./src/rest.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Rest)\n/* harmony export */ });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/data.js\");\nconst axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\n\n/**\n * Loading URL's through constructor is not possible because region will not be loaded until API Key is set.\n * Data class is used for only widget schema.\n * Rest Class is used for custom URL's \n */\n\nclass Rest extends _data_js__WEBPACK_IMPORTED_MODULE_0__.default {\n  setURL(url) {\n    // eslint-disable-next-line\n    let region = window._AppletIO.region;\n    this.url = eval(\"`\" + url + \"`\");\n  }\n\n  async add(form) {\n    let response = await axios.post(this.url, form, this.getHeaders());\n    return response.data;\n  }\n\n  async get() {\n    let response = await axios.get(this.url, this.getHeaders());\n    return response.data;\n  }\n\n}\n\n//# sourceURL=webpack://unified-sso/./src/rest.js?");

/***/ }),

/***/ "./src/sso/sso.js":
/*!************************!*\
  !*** ./src/sso/sso.js ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _global_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../global.css */ \"./src/global.css\");\n/* harmony import */ var _oauth_oauth_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../oauth/oauth.js */ \"./src/oauth/oauth.js\");\n/* harmony import */ var _util_render_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/render.js */ \"./src/util/render.js\");\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../data.js */ \"./src/data.js\");\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../dom */ \"./src/dom.js\");\n\n\n\n\n\n\nconst axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nconst URL = \"https://plugins.${this.getRegion()}.500apps.com/plugins\";\n\nclass SSO extends _data_js__WEBPACK_IMPORTED_MODULE_3__.default {\n  /**\n   * Show SSO Apps in UI\n   * @param {String} selector - DOM Id\n   * @param {*} callback - Callback Method\n   */\n  async render(selector, callback) {\n    window.callback = eval(callback);\n    this.oauth_url = eval(\"`\" + URL + \"`\"); // Get enabled SSO apps in Infinity\n\n    let response = await this.get(\"app_sso\", \"where=type='sso' and is_active=1\").catch(error => console.log(error)); // Filter Apps\n\n    let integrations = await this.filterApps(response);\n    integrations.forEach(item => {\n      if (item.logo == \"google\") item.is_google = true;\n    }); // Show Apps in UI\n\n    _util_render_js__WEBPACK_IMPORTED_MODULE_2__.default.render_template(selector, \"sso/sso\", integrations);\n    this.isActive = integrations.length > 0 ? true : false;\n  }\n  /**\n   * Filter Apps by App Name\n   * @param {Array} data\n   */\n\n\n  filterApps(data) {\n    let apps = [];\n    data.forEach(i => {\n      if (i.app == \"Google One-Tap\") {\n        this.appendIframe();\n        this.loadGoogleOneTap();\n      } else {\n        i.logo = i.app.replace(\" \", \"-\").toLowerCase();\n        apps.push(i);\n      }\n    });\n    return apps;\n  }\n  /**\n  * Append Iframe to load google onetap script code\n  */\n\n\n  appendIframe() {\n    var iframe = document.createElement('iframe');\n    iframe.setAttribute('id', '500apps_plugin_google_onetap'); // assign an id\n\n    iframe.setAttribute('class', '_500apps_plugin_google_onetap');\n    if (!document.getElementById(\"500apps_plugin_google_onetap\")) document.body.appendChild(iframe);\n  }\n  /**\n   * Show Google One Touch in UI\n   */\n\n\n  async loadGoogleOneTap() {\n    let handle = setInterval(() => {\n      if (document.getElementById(\"500apps_plugin_google_onetap\")) {\n        document.getElementById(\"500apps_plugin_google_onetap\").src = \"https://500apps-sso.github.io/google_one_tap/index.html\";\n        clearInterval(handle);\n      }\n    }, 1000);\n    window.addEventListener(\"message\", event => {\n      if (event.data.type == \"googleOneTapProfile\") {\n        // Return profile data through callback if exists\n        try {\n          window.callback(event.data.response);\n        } catch (error) {\n          console.log(error);\n        }\n      } else if (event.data.type == \"closeGoogleOneTap\") {\n        _dom__WEBPACK_IMPORTED_MODULE_4__.default.removeElement(\"500apps_plugin_google_onetap\");\n      }\n    });\n  }\n  /**\n   *\n   * @param {String} app_name - App Name\n   */\n\n\n  async authenticate(app_name) {\n    // Authenticate Oauth App\n    let event = await _oauth_oauth_js__WEBPACK_IMPORTED_MODULE_1__.default.authenticate(app_name, \"SSO\"); // Get Profile data for authentictaed app\n\n    let profile = await this.getProfile();\n    profile.data.app = app_name; // Return profile data through callback if exists\n\n    try {\n      window.callback(profile);\n    } catch (error) {\n      console.log(error);\n    } // Close OAuth window\n\n\n    await event.source.postMessage(\"Please close yourself!\", event.origin); // Return profile so that promise can be used while calling authenticate. Both callback and promise will work this way.\n\n    return profile;\n  }\n  /**\n   * Get Profile data of authenticted app\n   */\n\n\n  async getProfile() {\n    let response = await axios.get(`${this.oauth_url}/profile`, {\n      withCredentials: true\n    });\n    return response;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new SSO());\n\n//# sourceURL=webpack://unified-sso/./src/sso/sso.js?");

/***/ }),

/***/ "./src/util/jwt.js":
/*!*************************!*\
  !*** ./src/util/jwt.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var jwt_decode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jwt-decode */ \"./node_modules/jwt-decode/build/jwt-decode.esm.js\");\n\n\nclass JWT {\n  parseJWT(token) {\n    let decoded = (0,jwt_decode__WEBPACK_IMPORTED_MODULE_0__.default)(token);\n    return decoded;\n  }\n\n  getRegion() {\n    let region = this.parseJWT(window._AppletIO.apiKey).env;\n    if (!region) region = 'dev';\n    return region;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new JWT());\n\n//# sourceURL=webpack://unified-sso/./src/util/jwt.js?");

/***/ }),

/***/ "./src/util/modal.js":
/*!***************************!*\
  !*** ./src/util/modal.js ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/render.js */ \"./src/util/render.js\");\n\n\nclass Modal {\n  /**\n   * show modal\n   * @param {String} id dom id\n   */\n  show(id, selector, html, data, type) {\n    this.showModal(id);\n    _util_render_js__WEBPACK_IMPORTED_MODULE_0__.default.render_template(selector, html, data, type);\n  }\n  /**\n   * close modal\n   * @param {String} id dom id\n   */\n\n\n  close(id) {\n    document.getElementById(id).style.display = \"none\";\n    document.getElementById(\"backdrop\").style.display = \"none\";\n  }\n\n  showModal(id) {\n    document.getElementById(id).style.display = \"block\";\n    document.getElementById(\"backdrop\").style.display = \"block\";\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Modal());\n\n//# sourceURL=webpack://unified-sso/./src/util/modal.js?");

/***/ }),

/***/ "./src/util/render.js":
/*!****************************!*\
  !*** ./src/util/render.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst Handlebars = __webpack_require__(/*! handlebars/dist/cjs/handlebars */ \"./node_modules/handlebars/dist/cjs/handlebars.js\");\n\nclass Render {\n  render(innerHtml, data) {\n    let template = Handlebars.compile(innerHtml);\n    return template({\n      data\n    });\n  }\n\n  render_template(div_id, html, data, type) {\n    let template = type && type.includes(\"ui\") ? html : this.render_template_html(html);\n    let resultTemplate = this.render(template, data);\n    var element = document.getElementById(div_id);\n\n    if (element) {\n      if (type && type.includes(\"append\")) {\n        element.insertAdjacentHTML(\"beforeend\", resultTemplate);\n      } else if (type && type.includes(\"before\")) {\n        element.insertAdjacentHTML(\"afterbegin\", resultTemplate);\n      } else {\n        element.innerHTML = resultTemplate;\n      }\n    }\n  }\n\n  render_template_html(path) {\n    let innerHTML = __webpack_require__(\"./src/html sync recursive ^\\\\.\\\\/.*\\\\.html$\")(`./${path}.html`);\n\n    return innerHTML;\n  }\n\n  showLoading() {\n    document.getElementById('apps_card_loder').style.display = \"block\";\n    document.getElementById('apps').style.display = \"none\";\n  }\n\n  hideLoading() {\n    document.getElementById('apps_card_loder').style.display = \"none\";\n    document.getElementById('apps').style.display = \"block\";\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Render());\n\n//# sourceURL=webpack://unified-sso/./src/util/render.js?");

/***/ }),

/***/ "./src/widget/apps-config.js":
/*!***********************************!*\
  !*** ./src/widget/apps-config.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AppConfig)\n/* harmony export */ });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data.js */ \"./src/data.js\");\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../dom.js */ \"./src/dom.js\");\n/* harmony import */ var _customWidget__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./customWidget */ \"./src/widget/customWidget.js\");\n/* harmony import */ var _util_render_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/render.js */ \"./src/util/render.js\");\n\n\n\n\n\nconst axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nclass AppConfig extends _data_js__WEBPACK_IMPORTED_MODULE_0__.default {\n  /**\n   * Get authenticated oauth app object\n   * @param {Object} event\n   */\n  async oAuthPlugin(event, appName, hybrid_data, appId, type) {\n    if (appName && (appName.includes(\"Zoho\") || appName == \"Microsoft Dynamics 365 CRM\")) {\n      if (appName.includes(\"Zoho\")) event.data.data_center = hybrid_data;else event.data.organization_url = hybrid_data;\n      type == \"Update\" ? this.editPlugin(event.data, appId, appName) : this.addPlugin(event.data, appId, appName, \"Oauth\");\n    } // Based on actions type do edit or add functionality\n\n\n    if (window._App.pluginData[2] == \"Update\") {\n      // Call edit plugin method with response, appId, appName as parameters\n      this.editPlugin(event.data, window._App.pluginData[0], window._App.pluginData[1]);\n    } else this.addPlugin(event.data, window._App.pluginData[0], window._App.pluginData[1], \"Oauth\");\n  }\n  /**\n   * get basic plugin app details and verify the details\n   * @param {String} appId - App Id\n   * @param {String} appName - App Name\n   * @param {String} type - action type(add or update)\n   */\n\n\n  async basicPlugin(appId, appName, type) {\n    let validFileds = this.validatePlugin();\n    this.buttonDisable();\n\n    if (validFileds) {\n      document.getElementById(\"errMsg\").innerText = \"\";\n      let fields = {};\n      Array.from(document.getElementById(\"widgetApp\").getElementsByTagName(\"input\")).forEach(item => {\n        fields[item.name.replace(\"_\", \"-\")] = item.value;\n      });\n\n      try {\n        // Verify the credentials of basic App\n        let response = await this.verify(appId, fields);\n\n        if (response && Object.keys(response).length > 0) {\n          if (type == \"Add\") this.addPlugin(fields, appId, appName);else this.editPlugin(fields, appId, appName);\n        } else throw \"\";\n      } catch (error) {\n        document.getElementById(\"errMsg\").innerText = \"Invalid authentication details!\";\n        this.buttonEnable();\n      }\n    } else {\n      document.getElementById(\"errMsg\").innerText = \"All fields are mandatory!\";\n    }\n  }\n  /**\n   * Get customPlugin app details and verify the details\n   * @param {String} appId\n   * @param {String} pluginId\n   * @param {String} type - action type(add or update)\n   */\n\n\n  async customPlugin(appId, pluginId, type) {\n    // Make button disable and add loader\n    this.buttonDisable(); // Validate form fields\n\n    let validate = this.validatePlugin();\n\n    if (validate) {\n      // Get form response object\n      let fields = this.getFormResponse(); // Check widgetName is exist or not\n\n      let name_exist = await _customWidget__WEBPACK_IMPORTED_MODULE_2__.default.checkWidgetName(fields.name, appId, type);\n\n      if (name_exist) {\n        document.getElementById(\"error_message\").innerText = \"\";\n\n        if (type == \"Add\") {\n          _customWidget__WEBPACK_IMPORTED_MODULE_2__.default.addCustomWidgets(fields);\n        } else {\n          fields.id = appId;\n          _customWidget__WEBPACK_IMPORTED_MODULE_2__.default.editCustomWidgets(fields);\n        }\n      } else {\n        // Make button enable and remove loader\n        this.buttonEnable();\n        document.getElementById(\"error_message\").innerText = \"Widget name already exist\";\n      }\n    } else {\n      this.buttonEnable();\n      document.getElementById(\"error_message\").innerText = \"All fields are mandatory!\";\n    }\n  } // Get Api Key\n\n\n  async getAPI(token) {\n    let headers = {};\n    headers[\"authorization\"] = `Bearer ${token}`;\n    let response = await axios.get(`https://api.${this.getRegion()}.500apps.com/500apps/v1/api-key`, {\n      headers: headers\n    });\n    document.getElementById(\"input_api_key\").value = response.data;\n  }\n  /**\n   * Method used to get Form response\n   */\n\n\n  getFormResponse() {\n    let fields = {};\n    let form = document.getElementById(\"widgetApp\");\n    Array.from(form.elements).forEach(element => element.type != \"button\" ? fields[element.name] = element.value : null);\n    return fields;\n  }\n  /**\n   * adding plugin to DB\n   * @param {Object} fields\n   * @param {String} appId\n   * @param {String} appName\n   * @param {String} appType\n   */\n\n\n  async addPlugin(fields, appId, appName, appType) {\n    let form = {\n      auth_json: JSON.stringify(fields),\n      app_name: appName,\n      application_user_key: window._AppletIO.getWidget().userKey\n    };\n    let response = await this.add(\"external_users\", form);\n    this.buttonEnable(appType);\n    if (response) window._App.loadWidget(appId, appName, response, form.auth_json);\n  }\n  /**\n   * Make button enable and remove loader\n   * @param {String} appType\n   */\n\n\n  buttonEnable(appType) {\n    if (appType) return;\n    _dom_js__WEBPACK_IMPORTED_MODULE_1__.default.removeClass(`basic-plugin-button`, `loading`);\n    _dom_js__WEBPACK_IMPORTED_MODULE_1__.default.enable(`basic-plugin-button`);\n  }\n  /**\n   * Make button disable and add loader\n   * @param {String} appType\n   */\n\n\n  buttonDisable(appType) {\n    if (appType) return;\n    _dom_js__WEBPACK_IMPORTED_MODULE_1__.default.addClass(`basic-plugin-button`, `loading`);\n    _dom_js__WEBPACK_IMPORTED_MODULE_1__.default.disable(`basic-plugin-button`);\n  }\n  /**\n   * updating plugin to DB\n   * @param {Object} fields\n   * @param {String} appId\n   * @param {String} appName\n   */\n\n\n  async editPlugin(fields, appId, appName, appType) {\n    let form = {\n      auth_json: JSON.stringify(fields),\n      id: window._App.pluginId\n    };\n    let response = await this.edit(form);\n    this.buttonEnable(appType);\n    if (response) window._App.loadWidget(appId, appName, window._App.pluginId, form.auth_json);\n  }\n  /**\n   * For Plugin Validation\n   */\n\n\n  validatePlugin() {\n    var isValid = true;\n\n    for (var i = 0; i < document.getElementById(\"widgetApp\").length - 2; i++) {\n      if (document.getElementById(\"widgetApp\")[i].value == \"\") {\n        document.getElementById(document.getElementById(\"widgetApp\")[i].id).style[\"border-color\"] = \"red\";\n        isValid = false;\n      } else {\n        document.getElementById(document.getElementById(\"widgetApp\")[i].id).style[\"border-color\"] = \"\";\n      }\n    }\n\n    return isValid;\n  }\n  /**\n   * Method used for do process when widgetType is change\n   * @param {JSON} event\n   * @param {String} pluginId\n   */\n\n\n  customWidgetType(event, pluginId) {\n    // Get customWidgetData based on pluginId - edit mode\n    let customWidgetData = pluginId ? window._App.pluginsData.find(data => data.plugin_id == pluginId) : \"\";\n    let content_value = \"\";\n    content_value = event.value == customWidgetData.widget_type ? customWidgetData.widget_content : \"\";\n    var data = {}; // Prepare object based on widgetType value\n\n    if (event.value != \"HTML\") {\n      data = {\n        HTML: false,\n        widget_content: content_value,\n        label: \"Webhook URL\"\n      };\n    } else {\n      data = {\n        HTML: true,\n        widget_content: content_value,\n        label: \"HTML\"\n      };\n    } // Bind UI based on widgetType value\n\n\n    _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.render_template(\"applet_widget_type\", \"widget/customInput\", data);\n  }\n  /**\n   * delete app from DB and remove app from UI\n   * @param {String} appId - App Id\n   * @param {String} pluginId - Plugin ID\n   * @param {Boolean} customType\n   */\n\n\n  async deletePlugin(appId, pluginId, customType) {\n    // Get tableName based on customType\n    let entity = customType ? \"custom_widgets\" : \"external_users\";\n    let response = await this.delete(pluginId, entity);\n\n    if (response) {\n      var element = document.getElementById(`accordion_${appId}`);\n      if (element) element.parentNode.removeChild(element);\n      document.getElementsByClassName(\"checkWidgetData\").length == 0 ? document.getElementById(\"card_helper\").style.display = \"block\" : null;\n\n      window._App.showApps(\"Plugins\");\n\n      if (appId == \"gmail\") document.getElementById(\"gmailFrame\").contentWindow.postMessage({\n        type: \"signout\"\n      }, \"*\");\n    }\n  }\n\n}\n\n//# sourceURL=webpack://unified-sso/./src/widget/apps-config.js?");

/***/ }),

/***/ "./src/widget/apps.js":
/*!****************************!*\
  !*** ./src/widget/apps.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ App)\n/* harmony export */ });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data.js */ \"./src/data.js\");\n/* harmony import */ var _oauth_oauth_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../oauth/oauth.js */ \"./src/oauth/oauth.js\");\n/* harmony import */ var _util_render_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/render.js */ \"./src/util/render.js\");\n/* harmony import */ var _customWidget__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./customWidget */ \"./src/widget/customWidget.js\");\n\n\n\n\n\nconst appsData = __webpack_require__(/*! ../apps.json */ \"./src/apps.json\");\n\nclass App extends _data_js__WEBPACK_IMPORTED_MODULE_0__.default {\n  /**\n   * fetch apps from DB\n   * @param {string} name\n   * @param {string} params\n   */\n  async getApps(name, params) {\n    // Get marketplace apps and authenticated apps depending on name\n    let entity = name == \"Marketplace\" ? `v1/apps/active?application_user_key=${window._AppletIO.getWidget().userKey}` : `external_users?where=application_user_key='${window._AppletIO.getWidget().userKey}' and type='widget'`;\n    if (params && params.length > 0) entity += `&${params}`;\n    let response = await this.get(entity); // Show widgets in UI if params exists.\n\n    if (params && params.length > 0) window._Widget.downloadWidgets(response, \"\");\n    let app_type = name == \"Marketplace\" ? \"app\" : \"app_name\"; // Get apps of response from apps.json\n\n    var data = response.map(i => appsData.find(item => item.name == i[app_type]));\n\n    if (name != \"Marketplace\") {\n      this.pluginsData = response;\n      response.forEach((item, index) => {\n        data[index][\"plugin_id\"] = item[\"id\"];\n      });\n    }\n\n    return data;\n  }\n  /**\n   * Method used for refresh widget page\n   */\n\n\n  async refreshPage() {\n    // Load autheticated widgets based on fields\n    await this.getApps(\"Plugins\", \"&fields=id,app_name,auth_json\"); // Get customWidgets from DB and load in to UI\n\n    let customWidgets = await _customWidget__WEBPACK_IMPORTED_MODULE_3__.default.getCustomWidgets(\"Plugins\");\n    _customWidget__WEBPACK_IMPORTED_MODULE_3__.default.loadCustomWidgets(customWidgets);\n  }\n  /**\n   * Show apps in UI\n   * @param {String} name\n   */\n\n\n  async showApps(name) {\n    _util_render_js__WEBPACK_IMPORTED_MODULE_2__.default.showLoading();\n\n    window._AppletIO.getModal().showModal(\"appsModal\");\n\n    let data = await this.getApps(name); // Get customWidget data from DB based on name(Marketplace or plugin)\n\n    let CustomWidget = await _customWidget__WEBPACK_IMPORTED_MODULE_3__.default.getCustomWidgets(name); // Push customWidget data to existing widget Array\n\n    CustomWidget.forEach(item => data.push(item));\n    var apps = this.filterByCategory(data);\n    let exists = apps && Object.keys(apps).length > 0 ? true : false;\n    let type = name == \"Marketplace\" ? false : true;\n    _util_render_js__WEBPACK_IMPORTED_MODULE_2__.default.render_template(\"apps\", \"widget/apps\", {\n      apps,\n      name,\n      exists,\n      plugins: type\n    });\n    _util_render_js__WEBPACK_IMPORTED_MODULE_2__.default.hideLoading();\n\n    if (exists) {\n      document.getElementById(\"nav-\" + Object.keys(apps)[0] + \"-tab\").classList.add(\"active\");\n      document.getElementById(\"nav-\" + Object.keys(apps)[0]).classList.add(\"active\", \"show\");\n    }\n  }\n\n  showLoader(type) {\n    document.getElementById(\"apps_card_loder\").style.display = type ? \"block\" : \"none\";\n    document.getElementById(\"apps\").style.display = type ? \"none\" : \"block\";\n  }\n  /**\n   * Filter marketplace or configured apps data\n   * @param {Array} data\n   */\n\n\n  filterByCategory(data) {\n    var obj = {};\n    data.forEach(item => {\n      if (!obj[item.category]) obj[item.category] = [item];else obj[item.category].push(item);\n    });\n    return obj;\n  }\n  /**\n   * Check plugin has been configured by user or not and perform respective action according to it\n   * @param {String} appId - App Id\n   * @param {String} appName - App Name\n   * @param {String} pluginId - Plugin ID\n   * @param {Boolean} customType - Check whether customWidget or not\n   */\n\n\n  configurePlugin(appId, appName, pluginId, customType) {\n    this.pluginId = pluginId;\n\n    window._AppletIO.getModal().close(\"appsModal\");\n\n    let pluginDetails = appsData.find(i => i.name == appName);\n    this.type = pluginId.length > 0 ? \"Update\" : \"Add\";\n    if (appName == \"Gmail\") return this.loadGmail(this.type);else if (customType) {\n      return this.renderBasicPlugin(appId, appName, this.type, [], pluginId, customType);\n    } else if (!pluginDetails.api.includes(\"consumer_key\") && !pluginDetails.api.includes(\"client_id\")) {\n      return this.renderBasicPlugin(appId, appName, this.type, pluginDetails.api.split(\",\"), pluginId);\n    }\n    return this.renderOAuthPlugin(appId, appName, this.type, pluginId);\n  }\n  /**\n   * Show basic plugin fields in UI\n   * @param {String} appId\n   * @param {String} appName\n   * @param {String} type\n   * @param {Array} fields\n   * @param {Number} pluginId\n   * @param {Boolean} customType\n   */\n\n\n  async renderBasicPlugin(appId, appName, type, fields, pluginId, customType) {\n    // Based on customType prepare fields object\n    if (!customType) {\n      // Prepare Array of JSON object for UI purpose\n      fields = fields.map(key => {\n        return {\n          name: key,\n          label: key.replace(\"_\", \" \").replace(\"api\", \"API\").replace(\"url\", \"URL\")\n        };\n      }); // Load fields value in edit mode for basic widget\n\n      if (pluginId.length > 0) {\n        let userData = JSON.parse(this.pluginsData.find(i => i.id == pluginId).auth_json);\n\n        for (let key in userData) {\n          let id = fields.findIndex(i => i.name.replace(\"_\", \"-\") == key);\n          fields[id][\"value\"] = userData[key];\n        }\n      }\n    } else {\n      // Load fields value in edit mode for custom widget\n      fields = pluginId.length > 0 ? this.pluginsData.find(i => i.plugin_id == pluginId) : null;\n    }\n\n    let exists = fields && fields.length > 0 ? true : false;\n    let pluginData = appsData.find(plugin => plugin.app_category == \"500apps\" && plugin.name == appName);\n    let user_token = \"\";\n\n    if (pluginData) {\n      user_token = this.getUserDetails();\n    } // Based on customType load path of the HTML file\n\n\n    let path = customType ? \"widget/custom\" : \"widget/form\";\n    await window._AppletIO.getModal().show(\"formModal\", \"modalFields\", path, {\n      fields,\n      button: type,\n      exists,\n      name: appName,\n      id: appId,\n      token: user_token\n    }); // Set customWidgetType value based on customType\n\n    if (customType) this.setCustomWidgetType(fields);\n  }\n  /**\n   * Method used to set the dropdown value in customWidget form\n   * @param {JSON} fields\n   */\n\n\n  setCustomWidgetType(fields) {\n    // For new customWidget form set default value as HTML to dropdown\n    if (!fields) window._AppConfig.customWidgetType({\n      value: \"HTML\"\n    }, \"\"); // Add selected attribute to dropdown in edit mode based on response\n    else {\n        document.querySelector(`option[value=${fields.widget_type}]`).selected = true;\n\n        window._AppConfig.customWidgetType({\n          value: fields[\"widget_type\"]\n        }, fields.id);\n      }\n  }\n  /**\n   * Show oauth plugin modal in UI\n   * @param {String} appId\n   * @param {String} appName\n   * @param {String} type\n   * @param {Array} fields\n   * @param {Number} pluginId\n   */\n\n\n  renderOAuthPlugin(appId, appName, type, pluginId) {\n    this.appId = appId;\n    this.type = type;\n    this.appName = appName;\n    document.getElementById(\"data_center\").value = \"us\";\n    document.getElementById(\"organization_url\").value = \"\";\n\n    if (pluginId.length > 0) {\n      var userData = JSON.parse(this.pluginsData.find(i => i.id == pluginId).auth_json);\n    }\n\n    if (appName == \"Microsoft Office 365\") appName = appName + \" Email\";else if (appName.includes(\"Zoho\")) {\n      window._AppletIO.getModal().showModal(\"ZohoModal\");\n\n      if (type == \"Update\") document.getElementById(\"data_center\").value = userData.data_center;\n    } else if (appName == \"Microsoft Dynamics 365 CRM\") {\n      window._AppletIO.getModal().showModal(\"MicrosoftdynamicsModal\");\n\n      if (type == \"Update\") document.getElementById(\"organization_url\").value = userData.organization_url;\n    } else {\n      this.pluginData = [...arguments];\n      _oauth_oauth_js__WEBPACK_IMPORTED_MODULE_1__.default.authenticate(appName).then(data => {\n        window._AppConfig.oAuthPlugin(data);\n      });\n    }\n  }\n\n  getURL() {\n    let hybrid_data = this.appName.includes(\"Zoho\") ? document.getElementById(\"data_center\").value : document.getElementById(\"organization_url\").value;\n\n    if (hybrid_data.length) {\n      let modal_id = this.appName.includes(\"Zoho\") ? \"ZohoModal\" : \"MicrosoftdynamicsModal\";\n\n      window._AppletIO.getModal().close(modal_id);\n\n      _oauth_oauth_js__WEBPACK_IMPORTED_MODULE_1__.default.authenticate(this.appName, \"\", hybrid_data).then(data => {\n        window._AppConfig.oAuthPlugin(data, this.appName, hybrid_data, this.appId, this.type);\n      });\n    }\n  }\n  /**\n   * Load app to UI\n   * @param {String} appId\n   * @param {String} appName\n   */\n\n\n  loadWidget(appId, appName, id, auth_json) {\n    var element = document.getElementById(\"accordion_\" + appId);\n    element != null ? element.parentNode.removeChild(element) : null;\n\n    window._Widget.downloadWidgets([{\n      id,\n      app_name: appName,\n      auth_json\n    }], appName);\n\n    window._AppletIO.getModal().close(\"formModal\");\n  }\n  /**\n   * Change Tabs\n   * @param {Number} id Dom Id\n   */\n\n\n  changeTab(id) {\n    var data = Array.from(document.getElementsByClassName(\"remtab\"));\n    data.forEach(item => {\n      if (item.id == id) item.classList.add(\"active\");else if (item.classList.contains(\"active\")) item.classList.remove(\"active\");\n    });\n    id += \"-tab\";\n    var tgltabs = Array.from(document.getElementsByClassName(\"tgltabs\")[0].children);\n    tgltabs.forEach(item => {\n      if (item.id == id) item.classList.add(\"active\");else if (item.classList.contains(\"active\")) item.classList.remove(\"active\");\n    });\n  }\n\n  loadGmail(type) {\n    window.open(\"https://500apps-sso.github.io/gmail/index.html\", \"popUpWindow\", \"height=500,width=700,left=50,top=50,resizable=yes,scrollbars=yes,toolbar=yes,menubar=no,location=no,directories=no, status=yes\");\n    window.addEventListener(\"message\", window._App.authenticateGmail, false);\n  }\n\n  async authenticateGmail(e) {\n    let type = window._App.pluginId.length > 0 ? \"Update\" : \"Add\";\n    if (type == \"Add\") await window._AppConfig.addPlugin(e.data, \"gmail\", \"Gmail\", \"Oauth\");else if (type == \"Update\") await window._AppConfig.editPlugin(e.data, \"gmail\", \"Gmail\", \"Oauth\");\n    window.removeEventListener(\"message\", window._App.authenticateGmail);\n  }\n\n}\n\n//# sourceURL=webpack://unified-sso/./src/widget/apps.js?");

/***/ }),

/***/ "./src/widget/customWidget.js":
/*!************************************!*\
  !*** ./src/widget/customWidget.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _util_render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/render.js */ \"./src/util/render.js\");\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../data.js */ \"./src/data.js\");\n\n\n\nconst appsData = __webpack_require__(/*! ../apps.json */ \"./src/apps.json\");\n\nconst axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nclass CustomWidget extends _data_js__WEBPACK_IMPORTED_MODULE_1__.default {\n  /**\n   * Method used for to load customwidget data to UI\n   * @param {Array} data\n   * @param {String} type\n   */\n  async loadCustomWidgets(data, type) {\n    // Close modal based on type\n    type ? window._AppletIO.getModal().close(\"formModal\") : null; // Hide helper message when we have custom widget Data\n\n    data.length > 0 ? document.getElementById(\"card_helper\").style.display = \"none\" : null;\n    data.forEach(async element => {\n      // Get server widgets if widgetType is URL\n      let response = element.widget_type == \"URL\" ? await this.getServerWidget(element.widget_content) : null; // Set server widget content to element\n\n      if (response) element.widget_content = response.data;\n      _util_render_js__WEBPACK_IMPORTED_MODULE_0__.default.render_template(\"config_widget\", \"widget/custom-card\", element, \"append\");\n    });\n  }\n  /**\n   * Method used for to get serverWidgets\n   * @param {String} URL\n   */\n\n\n  async getServerWidget(URL) {\n    let form = window._AppletIO.getWidget().params;\n\n    let response = await axios.post(URL, form);\n    return response;\n  }\n  /**\n   * Method used for to get customWidget or defaultWidget based on type\n   * @param {String} type - Type will be marketplace or plugin\n   */\n\n\n  async getCustomWidgets(type) {\n    if (type != \"Marketplace\") {\n      let entity = `custom_widgets?where=application_user_key='${window._AppletIO.getWidget().userKey}'`;\n      let response = await this.get(entity);\n      response.forEach(data => {\n        data[\"custom\"] = true;\n        data[\"category\"] = \"Custom\";\n        data[\"plugin_id\"] = data.id;\n      });\n      response.forEach(item => window._App.pluginsData.push(item));\n      return response;\n    }\n\n    let customWidgetData = [appsData.find(data => data.name == \"custom\")];\n    return customWidgetData;\n  }\n  /**\n   * Method used for to store customwidget in DB\n   * @param {JSON} formResponse\n   */\n\n\n  async addCustomWidgets(formResponse) {\n    formResponse.application_user_key = `${window._AppletIO.getWidget().userKey}`;\n    let response = await this.add(\"custom_widgets\", formResponse);\n\n    if (response) {\n      // Make button enable and remove loader\n      window._AppConfig.buttonEnable();\n\n      formResponse.id = response;\n      this.setCustomProperties(formResponse, \"Add\");\n      this.loadCustomWidgets([formResponse], \"Add\");\n    }\n  }\n  /**\n   * Set customProperties for to access data\n   * @param {JSON} formResponse\n   * @param {String} action - (Add or Edit)\n   */\n\n\n  setCustomProperties(formResponse, action) {\n    var widgetData = window._App.pluginsData;\n    let properties = {\n      \"custom\": true,\n      \"category\": \"Custom\",\n      \"plugin_id\": formResponse.id\n    };\n    Object.assign(formResponse, properties);\n    if (action == \"Edit\") widgetData.splice(widgetData.findIndex(item => item.id == formResponse.id), 1);\n    widgetData.push(formResponse);\n  }\n  /**\n   * Method used for to store edit customwidget in DB\n   * @param {JSON} formResponse\n   */\n\n\n  async editCustomWidgets(formResponse) {\n    let response = await this.edit(formResponse, \"custom_widgets\");\n\n    if (response) {\n      // Make button enable and remove loader\n      window._AppConfig.buttonEnable();\n\n      var element = document.getElementById(\"accordion_\" + formResponse.id);\n      element != null ? element.parentNode.removeChild(element) : null;\n      this.setCustomProperties(formResponse, \"Edit\");\n      this.loadCustomWidgets([formResponse], \"Edit\");\n    }\n  }\n  /**\n   * Method used for to check widget name exist in DB or not\n   * @param {String} name - WidgetName\n   * @param {String} id   - ConfigId\n   * @param {String} type - Action (add or edit)\n   */\n\n\n  async checkWidgetName(name, id, type) {\n    // Get CustomWidget data based on name\n    let response = window._App.pluginsData.find(data => data.name == name);\n\n    if (type == \"Add\") {\n      return response ? false : true;\n    } else {\n      if (response) return response.id == id ? true : false;else return true;\n    }\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new CustomWidget());\n\n//# sourceURL=webpack://unified-sso/./src/widget/customWidget.js?");

/***/ }),

/***/ "./src/widget/twilio.js":
/*!******************************!*\
  !*** ./src/widget/twilio.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../rest.js */ \"./src/rest.js\");\n/* harmony import */ var _util_render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/render.js */ \"./src/util/render.js\");\n/* harmony import */ var _util_jwt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/jwt.js */ \"./src/util/jwt.js\");\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../dom.js */ \"./src/dom.js\");\n/* harmony import */ var twilio_client__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! twilio-client */ \"./node_modules/twilio-client/es5/twilio.js\");\n\n\n\n\n\nconst pcors = \"https://my.${region}.500apps.com/pcors?url=\";\nconst db_url = \"https://widgets.${region}.500apps.com/widgets\";\nlet pref_url = \"https://pbxplus.${region}.500apps.com/pbxplus/v1/voice?from=\";\nconst capability_url_py = \"https://api.${region}.500apps.com/widgets/v1/widget/twilio\";\n\nclass Twilio extends _rest_js__WEBPACK_IMPORTED_MODULE_0__.default {\n  /**\n   * To connect call\n   * @param {String} to_number\n   */\n  async call(to_number) {\n    let url = \"\"; // Check Capability URL present in twilio object\n    // If Capability URL present in twilio object then skip configurations dialer\n\n    if (this.capability_url) {\n      url = this.capability_url;\n    } else {\n      // Get Dialer URL\n      let response = await this.getDialer(); // Get Token to connect Twilio\n\n      if (!response.length) url = await this.configureDialer();else url = response[0].pref_value;\n    } // Get token using capability URL\n\n\n    let token = await this.getToken(url); // Connect to Twilio\n\n    await this.connectToTwilio(token, to_number);\n  }\n  /**\n   * Get Dialer URL\n   */\n\n\n  async getDialer() {\n    this.setURL(`${db_url}/pref/app_pref?where=(app_name='Applet' and pref_key='twilioDialer')`);\n    let response = await this.get();\n    return response;\n  }\n  /**\n   * Configure Dialer URL\n   */\n\n\n  async configureDialer() {\n    let from_number = document.getElementById(\"from_number\").value;\n    let response = await this.setCapability(from_number);\n    let form = {\n      data: [{\n        app_name: \"Applet\",\n        pref_key: \"twilioDialer\",\n        pref_value: response\n      }]\n    };\n    this.setURL(`${db_url}/pref/app_pref`);\n    this.add(form);\n    return response;\n  }\n  /**\n   * Set Capability\n   * @param {String} from_number\n   */\n\n\n  async setCapability(from_number) {\n    this.setURL(`${db_url}/widgets_v2/external_users?where=(application_user_key = '${window._AppletIO.getWidget().userKey}' and app_name = 'Twilio')`);\n    let auth = await this.get();\n    auth = JSON.parse(auth[0].auth_json);\n    let region = _util_jwt_js__WEBPACK_IMPORTED_MODULE_2__.default.getRegion();\n    pref_url = eval(\"`\" + pref_url + \"`\");\n    let form = {\n      account_sid: auth.accountsid,\n      auth_token: auth.authtoken,\n      voice_url: `${pref_url}${from_number}`\n    };\n    this.setURL(`${pcors}${capability_url_py}`);\n    let response = await this.add(form);\n    return response;\n  }\n  /**\n   * Get Token\n   * @param {String} url\n   * @returns\n   */\n\n\n  async getToken(url) {\n    let dailer_response = await this.getDialer();\n    let capability_number = dailer_response[0].app_name + \"_\" + dailer_response[0].domain_id + \"_\" + dailer_response[0].created_by;\n    this.setURL(url + `?To=${capability_number}`);\n    let response = await this.get();\n    return response.token;\n  }\n  /**\n   * Connect to Twilio\n   * @param {String} token\n   * @param {String} to_number\n   */\n\n\n  connectToTwilio(token, to_number) {\n    // Set to token to Twilio Device\n    twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device.setup(token, {\n      codecPreferences: [\"opus\", \"pcmu\"],\n      fakeLocalDTMF: true,\n      enableRingingState: true\n    }); // When Twilio Device is ready\n\n    twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device.on(\"ready\", function (device) {\n      console.log(\"Twilio.Device Ready!\");\n    }); // When any error occured in Twilio Device\n\n    twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device.on(\"error\", function (error) {\n      console.log(\"Twilio.Device Error: \" + error.message);\n    }); // When connected to Twilio Device\n\n    twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device.on(\"connect\", function (conn) {\n      console.log(\"Successfully established call!\");\n      bindVolumeIndicators(conn);\n    }); // When Disconnected from Twilio Device\n\n    twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device.on(\"disconnect\", function (conn) {\n      console.log(\"Call ended.\");\n\n      window._AppletIO.getTwilio().disconnectCall();\n\n      twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device.destroy();\n    }); // Connect to call\n\n    this.connectCall(to_number);\n  }\n  /**\n   * Connect Call\n   * @param {String} to_number\n   */\n\n\n  connectCall(to_number) {\n    // Render twilio call UI\n    if (document.getElementById(\"twilio-calling\").style.display == '') {\n      _util_render_js__WEBPACK_IMPORTED_MODULE_1__.default.render_template(\"twilio-calling\", \"widget/twilio/call\", {\n        number: to_number\n      });\n    } else _dom_js__WEBPACK_IMPORTED_MODULE_3__.default.show(\"twilio-calling\"); // Connect Call\n\n\n    if (twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device) {\n      twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device.ready(function () {\n        var outgoingConnection = twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device.connect({\n          To: to_number\n        });\n        outgoingConnection.on(\"ringing\", function () {\n          console.log(\"Ringing...\");\n        });\n      });\n    }\n  }\n  /**\n   * Disconnect Call\n   */\n\n\n  disconnectCall() {\n    if (twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device) {\n      twilio_client__WEBPACK_IMPORTED_MODULE_4__.Device.disconnectAll();\n      _dom_js__WEBPACK_IMPORTED_MODULE_3__.default.hide(\"twilio-calling\");\n    }\n  }\n  /**\n   * Show UI to send Twilio SMS\n   * @param {Number} id  - app config id\n   * @param {String} to_number - To Number\n   */\n\n\n  sms(id, to_number) {\n    _util_render_js__WEBPACK_IMPORTED_MODULE_1__.default.render_template(\"twilio-sms-send\", \"widget/twilio/sms\", {\n      id,\n      to_number\n    });\n  }\n  /**\n   * Send Twilio SMS\n   * @param {Number} id - app config id\n   * @param {String} to_number - To Number\n   */\n\n\n  async message(id, to_number) {\n    _dom_js__WEBPACK_IMPORTED_MODULE_3__.default.addClass(`twilo-sms-button`, `loading`);\n    _dom_js__WEBPACK_IMPORTED_MODULE_3__.default.disable(`twilo-sms-button`);\n    let form = {\n      from_number: document.getElementById(\"from_number\").value,\n      to_number: document.getElementById(\"to_number\").value,\n      message: document.getElementById(\"twilio-sms-message\").value\n    };\n    await this.add_widget_action(id, \"send-sms\", form);\n    _dom_js__WEBPACK_IMPORTED_MODULE_3__.default.removeClass(`twilo-sms-button`, `loading`);\n    _dom_js__WEBPACK_IMPORTED_MODULE_3__.default.enable(`twilo-sms-button`);\n    document.getElementById(\"twilio-sms-send\").style.display = \"none\";\n  }\n  /**\n   * Method used to set Capability URL \n   * @param {String} url\n   */\n\n\n  setCapabilityUrl(url) {\n    this.capability_url = url;\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Twilio());\n\n//# sourceURL=webpack://unified-sso/./src/widget/twilio.js?");

/***/ }),

/***/ "./src/widget/widget.js":
/*!******************************!*\
  !*** ./src/widget/widget.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../data.js */ \"./src/data.js\");\n/* harmony import */ var _apps_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./apps.js */ \"./src/widget/apps.js\");\n/* harmony import */ var _apps_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./apps-config.js */ \"./src/widget/apps-config.js\");\n/* harmony import */ var _util_render_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../util/render.js */ \"./src/util/render.js\");\n/* harmony import */ var _widget_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./widget.css */ \"./src/widget/widget.css\");\n/* harmony import */ var _dom_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../dom.js */ \"./src/dom.js\");\n/* harmony import */ var _customWidget__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./customWidget */ \"./src/widget/customWidget.js\");\n\n\n\n\n\n\n\nconst domain_url = \"https://appletio-js.500apps.com\";\n\nclass Widget extends _data_js__WEBPACK_IMPORTED_MODULE_0__.default {\n  async render(selector, userKey, params) {\n    this.userKey = userKey;\n    this.params = params;\n    _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.render_template(selector, 'widget/widget');\n    await window._App.getApps('Plugins', '&fields=id,app_name,auth_json'); // Get customWidgets from DB and load in to UI\n\n    let customWidgets = await _customWidget__WEBPACK_IMPORTED_MODULE_6__.default.getCustomWidgets('Plugins');\n    _customWidget__WEBPACK_IMPORTED_MODULE_6__.default.loadCustomWidgets(customWidgets);\n  }\n  /**\n   * Method used for two types one is for to get all widgets and for to get by appId\n   * @param {Array} data - Authenticated apps data\n   * @param {String} appName - App Name\n   */\n\n\n  async downloadWidgets(data, appName) {\n    if (!appName) {\n      for (var i = document.getElementsByClassName('checkWidgetData').length - 1; i >= 0; i--) {\n        document.getElementsByClassName('checkWidgetData')[i].remove();\n      }\n\n      document.getElementById('card_loder').style.display = 'block';\n    } // Get widgets by user_application_key\n\n\n    let params = `where=(application_user_key = '${window._AppletIO.getWidget().userKey}'`;\n    if (appName) params += ` and app = '${appName}'`;\n    let response = await this.get('user_widgets', `${params})`);\n    this.filterWidgetData(response, data);\n  }\n  /**\n   * @param {Array} data - active configured widgets data\n   * @param {Array} appData - authenticated apps data\n   */\n\n\n  filterWidgetData(data, appData) {\n    var jsonarray = [];\n    data.forEach(item => {\n      let json = {};\n      ['css_code', 'js', 'id', 'name', 'html'].forEach(i => json[i] = item[i]);\n\n      if (jsonarray.filter(i => i.app_name == item.app).length > 0) {\n        jsonarray.find(i => i.app_name == item.app).widget.push(json);\n      } else {\n        jsonarray.push({\n          app_name: item.app,\n          widget: [json],\n          app_id: item.app.toLowerCase().replace(' ', '-')\n        });\n      }\n    });\n    this.loadWidgets(jsonarray, appData, data);\n  }\n  /**\n   *\n   * @param {Array} jsonarray - appwise widget array\n   * @param {Array} appData - authenticated apps data\n   * @param {Array} data - active configured widgets data\n   */\n\n\n  loadWidgets(jsonarray, appData, data) {\n    jsonarray.forEach(data => {\n      if (!document.getElementById('accordion_' + data.app_id)) {\n        if (data.app_name == \"Twilio\") {\n          // Get Twilio Config Data\n          let response = this.configureTwilio(appData);\n          data = { ...data,\n            ...response\n          }; // Load Widget in UI\n\n          this.showWidget(data);\n        } else this.showWidget(data);\n      }\n    }); // Hide Loader\n\n    document.getElementById('card_loder').style.display = 'none'; // Hide Help Text\n\n    document.getElementById('card_helper').style.display = data.length > 0 ? 'none' : 'block';\n\n    if (data.length > 0) {\n      this.getWidgetData(data, appData);\n    }\n  }\n  /**\n   * Get Twilio data to configure to UI\n   * @param {Array} appData \n   */\n\n\n  configureTwilio(appData) {\n    // Get Twilio Config Data\n    let headers = appData.find(i => i.app_name == \"Twilio\");\n    var obj = {\n      is_twilio: true,\n      to_number: window._AppletIO.getWidget().params.user_number,\n      app_config_id: headers.id,\n      auth_json: headers.auth_json\n    };\n    return obj;\n  }\n  /**\n   * Show configured apps in UI\n   * @param {Object} data \n   */\n\n\n  async showWidget(data) {\n    // Load widget cards in UI\n    _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.render_template(\"config_widget\", \"widget/widget-cards\", data, \"append\");\n    _dom_js__WEBPACK_IMPORTED_MODULE_5__.default.show(\"appcollapse_\" + data.app_id); // Add active class to tab\n\n    document.getElementById(\"nav-home-tab-\" + data.widget[0].id).classList.add(\"active\");\n    document.getElementById(\"nav-home-\" + data.widget[0].id).classList.add(\"active\", \"show\");\n    if (data.app_name == \"Twilio\") await this.showTwilioNumbers(data);\n  }\n  /**\n   * Show Twilio From Numbers in UI\n   * @param {Object} data \n   */\n\n\n  async showTwilioNumbers(data) {\n    data.domain_url = `${domain_url}`; // Load Twilio in UI\n\n    _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.render_template(\"twilio\", \"widget/twilio/index\", data, \"append\"); // Get From Numbers\n\n    let numbers = await this.widget_details(data.app_config_id, \"phoneNumbers\", JSON.parse(data.auth_json)); // Load Twilo From Numbers in UI\n\n    _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.render_template(\"twilio_from_number\", \"widget/twilio/numbers\", numbers, \"append\");\n  }\n  /**\n   * @param {Array} data - active configured widgets data\n   */\n\n\n  getWidgetData(data, appData) {\n    data.forEach(async item => {\n      document.getElementById(`widget_empty_message-${item.id}`).style.display = \"none\";\n      let id = item.app != 'Gmail' ? appData.find(i => i.app_name == item.app).id : null;\n      let w_data;\n\n      try {\n        if (item.app == 'Gmail') {\n          document.getElementById(\"gmailFrame\").src = \"https://500apps-sso.github.io/gmail/index.html\"; // Load gmails. setInterval is used to get emails after iframe src content loaded.\n\n          let handle = setInterval(() => {\n            if (document.getElementById(\"gmailFrame\") && document.getElementById(\"gmailFrame\").contentWindow) {\n              window._AppletIO.getWidget().showGmailData(item);\n\n              clearInterval(handle);\n            }\n          }, 1000); // Based on app name loadExtensionUI  \n        } else if (item.app == \"Facebook Pages\" || item.app == \"LinkedIn\" || item.app == \"Twitter\") {\n          this.loadExtensionUI(item);\n        } else {\n          let name = item.name.replaceAll(' ', '_');\n          w_data = await this.widget_details(id, name);\n          if (item.app == \"Microsoft Office 365\") window._AppletIO.getWidget().office365_data = w_data;\n        }\n      } catch (err) {\n        if (!item.css_code && !item.js) document.getElementById(`widget_empty_message-${item.id}`).style.display = \"block\";\n      }\n\n      item.app != 'Gmail' && item.app != \"Facebook Pages\" && item.app != \"LinkedIn\" && item.app != \"Twitter\" ? this.renderWidget(w_data, item) : '';\n    });\n  }\n  /**\n   * Open Oauth child window to get authorization from user\n   * @param {Object} w_view widget template data\n   * @param {Array} w_data widget rest api data\n   */\n\n\n  renderWidget(w_data, w_view) {\n    if (!Array.isArray(w_data)) {\n      var object = w_data;\n      w_data = [];\n      w_data.push(object);\n    }\n\n    let innerHtml = w_view.app != \"Gmail\" && w_view.app != \"Microsoft Office 365\" ? !!w_data[0] || w_view.css_code || w_view.js ? this.returnWidgetHtml(w_view) : \"\" : \"widget/gmail\";\n    let type = w_view.app != \"Gmail\" && w_view.app != \"Microsoft Office 365\" ? 'append-ui' : '';\n    const id = 'nav-home-' + w_view.id;\n\n    if (w_view.app == \"Microsoft Office 365\") {\n      w_data.forEach(email => {\n        email.app_name = \"Microsoft Office 365\";\n      });\n    }\n\n    document.getElementById(`widget_card_loder-${w_view.id}`).style.display = \"none\";\n    let template = _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.render_template(id, innerHtml, w_data, type);\n    let head = document.getElementsByTagName(\"Head\")[0];\n    let script = document.createElement(\"script\");\n    script.innerText = w_view.js;\n    head.appendChild(script);\n    return template;\n  }\n  /**\n   * @param {Object} w_view widget template data\n   */\n\n\n  returnWidgetHtml(w_view) {\n    return `<div><style>${w_view.css_code}</style>\n        {{#each data}}${w_view.html}{{/each}}\n        <script>${w_view.js}</script>\n        </div>`;\n  }\n  /**\n   * Show App Widgets\n   * @param {Number} id Dom Id\n   */\n\n\n  appWidgets(id) {\n    if (!document.getElementById(id).style.display) document.getElementById(id).style.display = document.getElementById(id).classList.contains('show') ? 'block' : 'none';\n    document.getElementById(id).style.display = document.getElementById(id).style.display == 'none' ? 'block' : 'none';\n  }\n  /** Maximize and Minimize widgets\n   *  @param {String} type used to know maximize or minimize widget\n   */\n\n\n  resizeWidget(type) {\n    if (type == 'maximize') {\n      document.getElementsByClassName(\"_500plugins_widget\")[0].classList.remove('minimize-widget');\n    } else {\n      document.getElementsByClassName(\"_500plugins_widget\")[0].classList.add('minimize-widget');\n    }\n\n    Array.from(document.getElementById('widget-icons').children).forEach((item, index) => {\n      if (index > 1) {\n        if (type == 'maximize') item.classList.remove('hide-widget-icons');else item.classList.add('hide-widget-icons');\n      }\n    });\n    document.getElementById(type + '-widget').style.display = 'none';\n    document.getElementById((type == 'maximize' ? 'minimize' : 'maximize') + '-widget').style.display = 'block';\n  }\n  /**\n   * Change Widget Tabs\n   * @param {Number} id Dom Id\n   * @param {Number} appId App Id\n   */\n\n\n  changeWidgetTab(id, appId) {\n    Array.from(document.getElementsByClassName('widbody')).forEach((item, i) => {\n      var widget_tab = Array.from(document.getElementsByClassName('widtabs')[i].children);\n      var widget_body = Array.from(document.getElementsByClassName('widbody')[i].children);\n      var tab_id = 'nav-home-tab-' + id;\n      var body_id = 'nav-home-' + id;\n      this.changeTab(tab_id, appId, widget_tab, i);\n      this.changeTab(body_id, appId, widget_body, i);\n    });\n  }\n  /**\n   *\n   * @param {Number} id\n   * @param {Number} appId\n   * @param {Array} data\n   * @param {Number} index\n   */\n\n\n  changeTab(id, appId, data, index) {\n    data.forEach(item => {\n      if (item.id == id) {\n        document.getElementById(id).classList.add('active');\n        if (!id.includes('tab')) document.getElementById(id).classList.add('show');\n      } else if (item.classList.contains('active', 'show') && !(document.getElementsByClassName('widbody')[index].id != 'nav-tabContent_' + appId)) {\n        document.getElementById(item.id).classList.remove('active', 'show');\n        if (!id.includes('tab')) document.getElementById(item.id).classList.add('show');\n      }\n    });\n  }\n  /**\n   * \n   * @param {id} String \n   * @param {app_name} String\n   */\n\n\n  showGmailModal(id, app_name) {\n    let html = `<div style=\"margin: 20px;\">\n    <h4>{{data.subject}}</h4>\n    <p style=\"margin-top: 20px;\">From: {{data.from}}</p>\n    <p style=\"margin-bottom: 30px !important;\">To: {{data.to}}</p>\n    <p>{{{data.message}}}</p></div>`;\n    let data = {};\n    if (app_name != \"gmail\") data = window._AppletIO.getWidget().office365_data.find(email => email.id == id);else data = window._AppletIO.getWidget().gmailData.find(email => email.id == id);\n\n    window._AppletIO.getModal().show('appsModal', 'apps', html, data, 'ui');\n\n    _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.hideLoading();\n  }\n  /**\n   *\n   * @param {Object} data\n   */\n\n\n  async showGmailData(data) {\n    // Get Gmail Token from DB\n    let token = await this.get(\"external_users\", `where=(application_user_key='${window._AppletIO.getWidget().userKey}' and app_name = 'Gmail')`); // Assign email value if exists\n\n    let email = window._AppletIO.getWidget().params && window._AppletIO.getWidget().params.user_email ? window._AppletIO.getWidget().params.user_email : \"\"; // If no user email then hiding Loader and showing error message \n\n    if (!email) {\n      _dom_js__WEBPACK_IMPORTED_MODULE_5__.default.hide(`widget_card_loder-${data.id}`);\n      let message_id = `widget_empty_message-${data.id}`; // Change error message content\n\n      document.getElementById(message_id).innerHTML = \"<p>No email found</p>\";\n      _dom_js__WEBPACK_IMPORTED_MODULE_5__.default.show(message_id);\n    } else {\n      // Emit event to iframe to get emails\n      document.getElementById(\"gmailFrame\").contentWindow.postMessage({\n        type: \"getEmails\",\n        token: token[0].auth_json,\n        email\n      }, \"*\"); // Render event data to UI when event emited from iframe\n\n      window.addEventListener(\"message\", event => {\n        if (event.data.type == \"gmail\") {\n          window._AppletIO.getWidget().gmailData = event.data.response;\n\n          if (event.data.response.length == 0) {\n            document.getElementById(`widget_card_loder-${data.id}`).style.display = \"none\";\n            document.getElementById(`widget_empty_message-${data.id}`).style.display = \"block\";\n          } else window._AppletIO.getWidget().renderWidget(event.data.response, data);\n        }\n      });\n    }\n  }\n  /**\n   * To invoke extension\n   * @param {String} app \n   */\n\n\n  invokeExtension(app) {\n    // Show helper message \n    if (!window.applet_extension) {\n      _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.render_template(`500apps_${app}`, '<p>Add Extension</p>', {}, 'ui');\n      return;\n    }\n\n    const extension = window.applet_extension;\n    chrome.runtime.sendMessage(extension, {\n      _500apps: \"Applet.io\",\n      app: \"Applet.io\",\n      request: `${app}`,\n      data: {\n        name: window._AppletIO.getWidget().params.user_name\n      }\n    }, data => {\n      _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.render_template(`500apps_${app}`, `widget/${app}`, data);\n    });\n  }\n  /**\n   * To load app in UI\n   * @param {Object} item \n   */\n\n\n  loadExtensionUI(item) {\n    let type = item.app == \"Facebook Pages\" ? \"facebook\" : item.app.toLowerCase();\n    let el = _dom_js__WEBPACK_IMPORTED_MODULE_5__.default.create_element(\"div\", \"id\", `500apps_${type}`);\n    _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.render_template(`nav-home-${item.id}`, el.outerHTML, {}, \"ui-before\");\n    _util_render_js__WEBPACK_IMPORTED_MODULE_3__.default.render_template(`500apps_${type}`, \"<p>Loading...</p>\", {}, \"ui\");\n    document.getElementById(`widget_card_loder-${item.id}`).style.display = \"none\";\n    this.invokeExtension(type);\n  }\n\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Widget());\n\n(() => {\n  window._App = new _apps_js__WEBPACK_IMPORTED_MODULE_1__.default();\n  window._AppConfig = new _apps_config_js__WEBPACK_IMPORTED_MODULE_2__.default();\n  window._Widget = new Widget();\n})();\n\n//# sourceURL=webpack://unified-sso/./src/widget/widget.js?");

/***/ }),

/***/ "./node_modules/babel-runtime/regenerator/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/babel-runtime/regenerator/index.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports = __webpack_require__(/*! regenerator-runtime */ \"./node_modules/regenerator-runtime/runtime-module.js\");\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/babel-runtime/regenerator/index.js?");

/***/ }),

/***/ "./node_modules/backoff/index.js":
/*!***************************************!*\
  !*** ./node_modules/backoff/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar Backoff = __webpack_require__(/*! ./lib/backoff */ \"./node_modules/backoff/lib/backoff.js\");\nvar ExponentialBackoffStrategy = __webpack_require__(/*! ./lib/strategy/exponential */ \"./node_modules/backoff/lib/strategy/exponential.js\");\nvar FibonacciBackoffStrategy = __webpack_require__(/*! ./lib/strategy/fibonacci */ \"./node_modules/backoff/lib/strategy/fibonacci.js\");\nvar FunctionCall = __webpack_require__(/*! ./lib/function_call.js */ \"./node_modules/backoff/lib/function_call.js\");\n\nmodule.exports.Backoff = Backoff;\nmodule.exports.FunctionCall = FunctionCall;\nmodule.exports.FibonacciStrategy = FibonacciBackoffStrategy;\nmodule.exports.ExponentialStrategy = ExponentialBackoffStrategy;\n\n// Constructs a Fibonacci backoff.\nmodule.exports.fibonacci = function(options) {\n    return new Backoff(new FibonacciBackoffStrategy(options));\n};\n\n// Constructs an exponential backoff.\nmodule.exports.exponential = function(options) {\n    return new Backoff(new ExponentialBackoffStrategy(options));\n};\n\n// Constructs a FunctionCall for the given function and arguments.\nmodule.exports.call = function(fn, vargs, callback) {\n    var args = Array.prototype.slice.call(arguments);\n    fn = args[0];\n    vargs = args.slice(1, args.length - 1);\n    callback = args[args.length - 1];\n    return new FunctionCall(fn, vargs, callback);\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/backoff/index.js?");

/***/ }),

/***/ "./node_modules/backoff/lib/backoff.js":
/*!*********************************************!*\
  !*** ./node_modules/backoff/lib/backoff.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar events = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar precond = __webpack_require__(/*! precond */ \"./node_modules/precond/index.js\");\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\n// A class to hold the state of a backoff operation. Accepts a backoff strategy\n// to generate the backoff delays.\nfunction Backoff(backoffStrategy) {\n    events.EventEmitter.call(this);\n\n    this.backoffStrategy_ = backoffStrategy;\n    this.maxNumberOfRetry_ = -1;\n    this.backoffNumber_ = 0;\n    this.backoffDelay_ = 0;\n    this.timeoutID_ = -1;\n\n    this.handlers = {\n        backoff: this.onBackoff_.bind(this)\n    };\n}\nutil.inherits(Backoff, events.EventEmitter);\n\n// Sets a limit, greater than 0, on the maximum number of backoffs. A 'fail'\n// event will be emitted when the limit is reached.\nBackoff.prototype.failAfter = function(maxNumberOfRetry) {\n    precond.checkArgument(maxNumberOfRetry > 0,\n        'Expected a maximum number of retry greater than 0 but got %s.',\n        maxNumberOfRetry);\n\n    this.maxNumberOfRetry_ = maxNumberOfRetry;\n};\n\n// Starts a backoff operation. Accepts an optional parameter to let the\n// listeners know why the backoff operation was started.\nBackoff.prototype.backoff = function(err) {\n    precond.checkState(this.timeoutID_ === -1, 'Backoff in progress.');\n\n    if (this.backoffNumber_ === this.maxNumberOfRetry_) {\n        this.emit('fail', err);\n        this.reset();\n    } else {\n        this.backoffDelay_ = this.backoffStrategy_.next();\n        this.timeoutID_ = setTimeout(this.handlers.backoff, this.backoffDelay_);\n        this.emit('backoff', this.backoffNumber_, this.backoffDelay_, err);\n    }\n};\n\n// Handles the backoff timeout completion.\nBackoff.prototype.onBackoff_ = function() {\n    this.timeoutID_ = -1;\n    this.emit('ready', this.backoffNumber_, this.backoffDelay_);\n    this.backoffNumber_++;\n};\n\n// Stops any backoff operation and resets the backoff delay to its inital value.\nBackoff.prototype.reset = function() {\n    this.backoffNumber_ = 0;\n    this.backoffStrategy_.reset();\n    clearTimeout(this.timeoutID_);\n    this.timeoutID_ = -1;\n};\n\nmodule.exports = Backoff;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/backoff/lib/backoff.js?");

/***/ }),

/***/ "./node_modules/backoff/lib/function_call.js":
/*!***************************************************!*\
  !*** ./node_modules/backoff/lib/function_call.js ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar events = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar precond = __webpack_require__(/*! precond */ \"./node_modules/precond/index.js\");\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nvar Backoff = __webpack_require__(/*! ./backoff */ \"./node_modules/backoff/lib/backoff.js\");\nvar FibonacciBackoffStrategy = __webpack_require__(/*! ./strategy/fibonacci */ \"./node_modules/backoff/lib/strategy/fibonacci.js\");\n\n// Wraps a function to be called in a backoff loop.\nfunction FunctionCall(fn, args, callback) {\n    events.EventEmitter.call(this);\n\n    precond.checkIsFunction(fn, 'Expected fn to be a function.');\n    precond.checkIsArray(args, 'Expected args to be an array.');\n    precond.checkIsFunction(callback, 'Expected callback to be a function.');\n\n    this.function_ = fn;\n    this.arguments_ = args;\n    this.callback_ = callback;\n    this.lastResult_ = [];\n    this.numRetries_ = 0;\n\n    this.backoff_ = null;\n    this.strategy_ = null;\n    this.failAfter_ = -1;\n    this.retryPredicate_ = FunctionCall.DEFAULT_RETRY_PREDICATE_;\n\n    this.state_ = FunctionCall.State_.PENDING;\n}\nutil.inherits(FunctionCall, events.EventEmitter);\n\n// States in which the call can be.\nFunctionCall.State_ = {\n    // Call isn't started yet.\n    PENDING: 0,\n    // Call is in progress.\n    RUNNING: 1,\n    // Call completed successfully which means that either the wrapped function\n    // returned successfully or the maximal number of backoffs was reached.\n    COMPLETED: 2,\n    // The call was aborted.\n    ABORTED: 3\n};\n\n// The default retry predicate which considers any error as retriable.\nFunctionCall.DEFAULT_RETRY_PREDICATE_ = function(err) {\n  return true;\n};\n\n// Checks whether the call is pending.\nFunctionCall.prototype.isPending = function() {\n    return this.state_ == FunctionCall.State_.PENDING;\n};\n\n// Checks whether the call is in progress.\nFunctionCall.prototype.isRunning = function() {\n    return this.state_ == FunctionCall.State_.RUNNING;\n};\n\n// Checks whether the call is completed.\nFunctionCall.prototype.isCompleted = function() {\n    return this.state_ == FunctionCall.State_.COMPLETED;\n};\n\n// Checks whether the call is aborted.\nFunctionCall.prototype.isAborted = function() {\n    return this.state_ == FunctionCall.State_.ABORTED;\n};\n\n// Sets the backoff strategy to use. Can only be called before the call is\n// started otherwise an exception will be thrown.\nFunctionCall.prototype.setStrategy = function(strategy) {\n    precond.checkState(this.isPending(), 'FunctionCall in progress.');\n    this.strategy_ = strategy;\n    return this; // Return this for chaining.\n};\n\n// Sets the predicate which will be used to determine whether the errors\n// returned from the wrapped function should be retried or not, e.g. a\n// network error would be retriable while a type error would stop the\n// function call.\nFunctionCall.prototype.retryIf = function(retryPredicate) {\n    precond.checkState(this.isPending(), 'FunctionCall in progress.');\n    this.retryPredicate_ = retryPredicate;\n    return this;\n};\n\n// Returns all intermediary results returned by the wrapped function since\n// the initial call.\nFunctionCall.prototype.getLastResult = function() {\n    return this.lastResult_.concat();\n};\n\n// Returns the number of times the wrapped function call was retried.\nFunctionCall.prototype.getNumRetries = function() {\n    return this.numRetries_;\n};\n\n// Sets the backoff limit.\nFunctionCall.prototype.failAfter = function(maxNumberOfRetry) {\n    precond.checkState(this.isPending(), 'FunctionCall in progress.');\n    this.failAfter_ = maxNumberOfRetry;\n    return this; // Return this for chaining.\n};\n\n// Aborts the call.\nFunctionCall.prototype.abort = function() {\n    if (this.isCompleted() || this.isAborted()) {\n      return;\n    }\n\n    if (this.isRunning()) {\n        this.backoff_.reset();\n    }\n\n    this.state_ = FunctionCall.State_.ABORTED;\n    this.lastResult_ = [new Error('Backoff aborted.')];\n    this.emit('abort');\n    this.doCallback_();\n};\n\n// Initiates the call to the wrapped function. Accepts an optional factory\n// function used to create the backoff instance; used when testing.\nFunctionCall.prototype.start = function(backoffFactory) {\n    precond.checkState(!this.isAborted(), 'FunctionCall is aborted.');\n    precond.checkState(this.isPending(), 'FunctionCall already started.');\n\n    var strategy = this.strategy_ || new FibonacciBackoffStrategy();\n\n    this.backoff_ = backoffFactory ?\n        backoffFactory(strategy) :\n        new Backoff(strategy);\n\n    this.backoff_.on('ready', this.doCall_.bind(this, true /* isRetry */));\n    this.backoff_.on('fail', this.doCallback_.bind(this));\n    this.backoff_.on('backoff', this.handleBackoff_.bind(this));\n\n    if (this.failAfter_ > 0) {\n        this.backoff_.failAfter(this.failAfter_);\n    }\n\n    this.state_ = FunctionCall.State_.RUNNING;\n    this.doCall_(false /* isRetry */);\n};\n\n// Calls the wrapped function.\nFunctionCall.prototype.doCall_ = function(isRetry) {\n    if (isRetry) {\n        this.numRetries_++;\n    }\n    var eventArgs = ['call'].concat(this.arguments_);\n    events.EventEmitter.prototype.emit.apply(this, eventArgs);\n    var callback = this.handleFunctionCallback_.bind(this);\n    this.function_.apply(null, this.arguments_.concat(callback));\n};\n\n// Calls the wrapped function's callback with the last result returned by the\n// wrapped function.\nFunctionCall.prototype.doCallback_ = function() {\n    this.callback_.apply(null, this.lastResult_);\n};\n\n// Handles wrapped function's completion. This method acts as a replacement\n// for the original callback function.\nFunctionCall.prototype.handleFunctionCallback_ = function() {\n    if (this.isAborted()) {\n        return;\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    this.lastResult_ = args; // Save last callback arguments.\n    events.EventEmitter.prototype.emit.apply(this, ['callback'].concat(args));\n\n    var err = args[0];\n    if (err && this.retryPredicate_(err)) {\n        this.backoff_.backoff(err);\n    } else {\n        this.state_ = FunctionCall.State_.COMPLETED;\n        this.doCallback_();\n    }\n};\n\n// Handles the backoff event by reemitting it.\nFunctionCall.prototype.handleBackoff_ = function(number, delay, err) {\n    this.emit('backoff', number, delay, err);\n};\n\nmodule.exports = FunctionCall;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/backoff/lib/function_call.js?");

/***/ }),

/***/ "./node_modules/backoff/lib/strategy/exponential.js":
/*!**********************************************************!*\
  !*** ./node_modules/backoff/lib/strategy/exponential.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\nvar precond = __webpack_require__(/*! precond */ \"./node_modules/precond/index.js\");\n\nvar BackoffStrategy = __webpack_require__(/*! ./strategy */ \"./node_modules/backoff/lib/strategy/strategy.js\");\n\n// Exponential backoff strategy.\nfunction ExponentialBackoffStrategy(options) {\n    BackoffStrategy.call(this, options);\n    this.backoffDelay_ = 0;\n    this.nextBackoffDelay_ = this.getInitialDelay();\n    this.factor_ = ExponentialBackoffStrategy.DEFAULT_FACTOR;\n\n    if (options && options.factor !== undefined) {\n        precond.checkArgument(options.factor > 1,\n            'Exponential factor should be greater than 1 but got %s.',\n            options.factor);\n        this.factor_ = options.factor;\n    }\n}\nutil.inherits(ExponentialBackoffStrategy, BackoffStrategy);\n\n// Default multiplication factor used to compute the next backoff delay from\n// the current one. The value can be overridden by passing a custom factor as\n// part of the options.\nExponentialBackoffStrategy.DEFAULT_FACTOR = 2;\n\nExponentialBackoffStrategy.prototype.next_ = function() {\n    this.backoffDelay_ = Math.min(this.nextBackoffDelay_, this.getMaxDelay());\n    this.nextBackoffDelay_ = this.backoffDelay_ * this.factor_;\n    return this.backoffDelay_;\n};\n\nExponentialBackoffStrategy.prototype.reset_ = function() {\n    this.backoffDelay_ = 0;\n    this.nextBackoffDelay_ = this.getInitialDelay();\n};\n\nmodule.exports = ExponentialBackoffStrategy;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/backoff/lib/strategy/exponential.js?");

/***/ }),

/***/ "./node_modules/backoff/lib/strategy/fibonacci.js":
/*!********************************************************!*\
  !*** ./node_modules/backoff/lib/strategy/fibonacci.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nvar BackoffStrategy = __webpack_require__(/*! ./strategy */ \"./node_modules/backoff/lib/strategy/strategy.js\");\n\n// Fibonacci backoff strategy.\nfunction FibonacciBackoffStrategy(options) {\n    BackoffStrategy.call(this, options);\n    this.backoffDelay_ = 0;\n    this.nextBackoffDelay_ = this.getInitialDelay();\n}\nutil.inherits(FibonacciBackoffStrategy, BackoffStrategy);\n\nFibonacciBackoffStrategy.prototype.next_ = function() {\n    var backoffDelay = Math.min(this.nextBackoffDelay_, this.getMaxDelay());\n    this.nextBackoffDelay_ += this.backoffDelay_;\n    this.backoffDelay_ = backoffDelay;\n    return backoffDelay;\n};\n\nFibonacciBackoffStrategy.prototype.reset_ = function() {\n    this.nextBackoffDelay_ = this.getInitialDelay();\n    this.backoffDelay_ = 0;\n};\n\nmodule.exports = FibonacciBackoffStrategy;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/backoff/lib/strategy/fibonacci.js?");

/***/ }),

/***/ "./node_modules/backoff/lib/strategy/strategy.js":
/*!*******************************************************!*\
  !*** ./node_modules/backoff/lib/strategy/strategy.js ***!
  \*******************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nvar events = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nfunction isDef(value) {\n    return value !== undefined && value !== null;\n}\n\n// Abstract class defining the skeleton for the backoff strategies. Accepts an\n// object holding the options for the backoff strategy:\n//\n//  * `randomisationFactor`: The randomisation factor which must be between 0\n//     and 1 where 1 equates to a randomization factor of 100% and 0 to no\n//     randomization.\n//  * `initialDelay`: The backoff initial delay in milliseconds.\n//  * `maxDelay`: The backoff maximal delay in milliseconds.\nfunction BackoffStrategy(options) {\n    options = options || {};\n\n    if (isDef(options.initialDelay) && options.initialDelay < 1) {\n        throw new Error('The initial timeout must be greater than 0.');\n    } else if (isDef(options.maxDelay) && options.maxDelay < 1) {\n        throw new Error('The maximal timeout must be greater than 0.');\n    }\n\n    this.initialDelay_ = options.initialDelay || 100;\n    this.maxDelay_ = options.maxDelay || 10000;\n\n    if (this.maxDelay_ <= this.initialDelay_) {\n        throw new Error('The maximal backoff delay must be ' +\n                        'greater than the initial backoff delay.');\n    }\n\n    if (isDef(options.randomisationFactor) &&\n        (options.randomisationFactor < 0 || options.randomisationFactor > 1)) {\n        throw new Error('The randomisation factor must be between 0 and 1.');\n    }\n\n    this.randomisationFactor_ = options.randomisationFactor || 0;\n}\n\n// Gets the maximal backoff delay.\nBackoffStrategy.prototype.getMaxDelay = function() {\n    return this.maxDelay_;\n};\n\n// Gets the initial backoff delay.\nBackoffStrategy.prototype.getInitialDelay = function() {\n    return this.initialDelay_;\n};\n\n// Template method that computes and returns the next backoff delay in\n// milliseconds.\nBackoffStrategy.prototype.next = function() {\n    var backoffDelay = this.next_();\n    var randomisationMultiple = 1 + Math.random() * this.randomisationFactor_;\n    var randomizedDelay = Math.round(backoffDelay * randomisationMultiple);\n    return randomizedDelay;\n};\n\n// Computes and returns the next backoff delay. Intended to be overridden by\n// subclasses.\nBackoffStrategy.prototype.next_ = function() {\n    throw new Error('BackoffStrategy.next_() unimplemented.');\n};\n\n// Template method that resets the backoff delay to its initial value.\nBackoffStrategy.prototype.reset = function() {\n    this.reset_();\n};\n\n// Resets the backoff delay to its initial value. Intended to be overridden by\n// subclasses.\nBackoffStrategy.prototype.reset_ = function() {\n    throw new Error('BackoffStrategy.reset_() unimplemented.');\n};\n\nmodule.exports = BackoffStrategy;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/backoff/lib/strategy/strategy.js?");

/***/ }),

/***/ "./node_modules/call-bind/callBound.js":
/*!*********************************************!*\
  !*** ./node_modules/call-bind/callBound.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar callBind = __webpack_require__(/*! ./ */ \"./node_modules/call-bind/index.js\");\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/call-bind/callBound.js?");

/***/ }),

/***/ "./node_modules/call-bind/index.js":
/*!*****************************************!*\
  !*** ./node_modules/call-bind/index.js ***!
  \*****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/get-intrinsic/index.js\");\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/call-bind/index.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/global.css":
/*!**************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/global.css ***!
  \**************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/css-loader/dist/runtime/getUrl.js */ \"./node_modules/css-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _public_fonts_cerebrisans_cerebrisans_regular_eot__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./public/fonts/cerebrisans/cerebrisans-regular.eot */ \"./src/public/fonts/cerebrisans/cerebrisans-regular.eot\");\n/* harmony import */ var _public_fonts_cerebrisans_cerebrisans_regular_woff__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./public/fonts/cerebrisans/cerebrisans-regular.woff */ \"./src/public/fonts/cerebrisans/cerebrisans-regular.woff\");\n/* harmony import */ var _public_fonts_cerebrisans_cerebrisans_regular_ttf__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./public/fonts/cerebrisans/cerebrisans-regular.ttf */ \"./src/public/fonts/cerebrisans/cerebrisans-regular.ttf\");\n/* harmony import */ var _public_fonts_cerebrisans_cerebrisans_medium_eot__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./public/fonts/cerebrisans/cerebrisans-medium.eot */ \"./src/public/fonts/cerebrisans/cerebrisans-medium.eot\");\n/* harmony import */ var _public_fonts_cerebrisans_cerebrisans_medium_woff__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./public/fonts/cerebrisans/cerebrisans-medium.woff */ \"./src/public/fonts/cerebrisans/cerebrisans-medium.woff\");\n/* harmony import */ var _public_fonts_cerebrisans_cerebrisans_medium_ttf__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./public/fonts/cerebrisans/cerebrisans-medium.ttf */ \"./src/public/fonts/cerebrisans/cerebrisans-medium.ttf\");\n/* harmony import */ var _public_fonts_cerebrisans_cerebrisans_semibold_eot__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./public/fonts/cerebrisans/cerebrisans-semibold.eot */ \"./src/public/fonts/cerebrisans/cerebrisans-semibold.eot\");\n/* harmony import */ var _public_fonts_cerebrisans_cerebrisans_semibold_woff__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./public/fonts/cerebrisans/cerebrisans-semibold.woff */ \"./src/public/fonts/cerebrisans/cerebrisans-semibold.woff\");\n/* harmony import */ var _public_fonts_cerebrisans_cerebrisans_semibold_ttf__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./public/fonts/cerebrisans/cerebrisans-semibold.ttf */ \"./src/public/fonts/cerebrisans/cerebrisans-semibold.ttf\");\n// Imports\n\n\n\n\n\n\n\n\n\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_regular_eot__WEBPACK_IMPORTED_MODULE_2__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_regular_eot__WEBPACK_IMPORTED_MODULE_2__.default, { hash: \"?#iefix\" });\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_regular_woff__WEBPACK_IMPORTED_MODULE_3__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_3___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_regular_ttf__WEBPACK_IMPORTED_MODULE_4__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_4___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_medium_eot__WEBPACK_IMPORTED_MODULE_5__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_5___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_medium_eot__WEBPACK_IMPORTED_MODULE_5__.default, { hash: \"?#iefix\" });\nvar ___CSS_LOADER_URL_REPLACEMENT_6___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_medium_woff__WEBPACK_IMPORTED_MODULE_6__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_7___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_medium_ttf__WEBPACK_IMPORTED_MODULE_7__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_8___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_semibold_eot__WEBPACK_IMPORTED_MODULE_8__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_9___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_semibold_eot__WEBPACK_IMPORTED_MODULE_8__.default, { hash: \"?#iefix\" });\nvar ___CSS_LOADER_URL_REPLACEMENT_10___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_semibold_woff__WEBPACK_IMPORTED_MODULE_9__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_11___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_public_fonts_cerebrisans_cerebrisans_semibold_ttf__WEBPACK_IMPORTED_MODULE_10__.default);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".div {\\n  color: red;\\n}\\n._500apps_plugin_login_apps {\\n  display: flex !important;\\n}\\n.hover .hover-logo {\\n  display: none !important;\\n}\\n.hover:hover .normal-logo {\\n  display: none !important;\\n}\\n.hover:hover .hover-logo {\\n  display: inline-flex !important;\\n}\\n.m {\\n  margin: 5px;\\n}\\n.cursor-pointer {\\n  cursor: pointer;\\n}\\n._500apps_plugin_login_apps .sso-app:nth-child(n + 7) {\\n  margin-top: 10px !important;\\n  text-align: left !important;\\n  display: inline-block;\\n}\\n\\n._500apps_plugin_login_apps .sso-app:nth-child(n + 7) img {\\n  background: #edf2f9 !important;\\n  padding: 4px;\\n  border-radius: 50%;\\n  height: 39px !important;\\n  width: 40px !important;\\n}\\n\\n._500apps_plugin_login_apps .sso-app:nth-child(n + 7) {\\n  margin-top: 13px !important;\\n  display: inline-block;\\n  background: none !important;\\n  padding: 1px !important;\\n  float: left;\\n  margin-left: 7px;\\n}\\n\\n._500apps_plugin_login_apps .sso-app:nth-child(n + 7) img:hover {\\n  background-color: #c7d6ec !important;\\n}\\n\\n._500apps_plugin_login_apps ._500apps_plugin_google_onetap {\\n  border: none;\\n  min-height: 260px;\\n  width: 407px;\\n  position: fixed;\\n  top: -20px;\\n  right: -30%;\\n  z-index: 99999;\\n}\\n@media only screen and (max-device-width: 1024px) {\\n  ._500apps_plugin_login_apps ._500apps_plugin_google_onetap {\\n    right: -4% !important;\\n  }\\n}\\n@media only screen and (min-device-width: 1025px) and (max-device-width: 1400px) {\\n  ._500apps_plugin_login_apps ._500apps_plugin_google_onetap {\\n    right: -22% !important;\\n  }\\n}\\n\\n._500apps_plugin_google_onetap {\\n  width: 410px;\\n  height: 40%;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  border: none;\\n  z-index: 99999;\\n}\\n.file-picker-accounts{\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n/* filepicker css  */\\n._500plugins_widget.file-picker{\\n  font-family: \\\"Cerebri Sans\\\", sans-serif  !important;\\n}\\n._500plugins_widget.file-picker .modal-content{\\n  padding: 1.25rem !important;\\n  background: #f9fbfd !important;\\n}\\n.file-picker .border-bottom{\\n  border-bottom: 1px solid #E3EBF6 !important;\\n}\\n.file-picker .padding-bottom-10{\\n  padding-bottom: 10px;\\n}\\n.file-picker .margin-top-10{\\n  margin-top: 1.25rem !important;\\n}\\n.file-picker .margin-bottom-10{\\n  margin-bottom: 10px !important;\\n}\\n.file-picker .head-font{\\n  font-weight: 500;\\n  line-height: 1.5;\\n  color: #12263F;\\n  font-size: 0.9rem !important;\\n}\\n._500plugins_widget.file-picker button.close {\\n  right: 7px;\\n  top: 0px;\\n\\n}\\n._500plugins_widget.file-picker div#connected-apps,\\n._500plugins_widget.file-picker .login-apps, div#files .file_picker {\\n  background: #fff !important;\\n  border: 1px solid #EDF2F9 !important;\\n  box-shadow: 0 0.75rem 1.5rem rgb(18 38 63 / 3%);\\n  word-wrap: break-word;\\n  background-color: #FFFFFF;\\n  background-clip: border-box;\\n  border-radius: 0.5rem;\\n  padding:1.25rem !important;\\n}\\n._500plugins_widget.file-picker .card.card-stayle{\\n  position: relative !important;\\n  word-wrap: break-word !important;\\n  background-color: #FFFFFF !important;\\n  background-clip: border-box !important;\\n  border: 1px solid #EDF2F9 !important;\\n  border-radius: 0.5rem !important;\\n  box-shadow: 0 0.75rem 1.5rem rgb(18 38 63 / 3%) !important;\\n  cursor: pointer !important;\\n  transition: box-shadow .25s ease, transform .25s ease !important;\\n}\\n._500plugins_widget.file-picker .card.card-stayle:hover{\\n  box-shadow: 0 1rem 2.5rem rgb(18 38 63 / 10%), 0 0.5rem 1rem -0.75rem rgb(18 38 63 / 10%) !important;\\n  transform: translate3d(0, -3px, 0) !important;\\n}\\n._500plugins_widget.file-picker button.close span{\\n  padding:0px !important;\\n  font-size: 18px !important;\\n}\\n._500plugins_widget.file-picker .error{\\n  display: flex;\\n  position: absolute;\\n  top: 37px;\\n  padding: 3px 9PX;\\n  margin-bottom: 1.5rem;\\n  border: 1px solid transparent;\\n  border-radius: 0.375rem;\\n  font-size: 0.85rem !important;\\n  right: 42px !important;\\n  background-color: #fff8e7 !important;\\n  border-color: #f6c343 !important;\\n  cursor: pointer !important;\\n}\\n._500plugins_widget.file-picker .error-text{\\n  color:#283e59 !important;\\n}\\n._500plugins_widget select#accounts_dropdown {\\n    width: 95% !important;\\n    margin: 0px !important;\\n    background: transparent !important;\\n    border-radius: 0.25rem !important;\\n    border-color: #EDF2F9 !important;\\n    padding:10px !important;\\n    height:auto !important;\\n    margin: 0 auto !important;\\n    appearance: none !important;\\n}\\n.file-picker select#accounts_dropdown:focus-visible {\\n  outline: 0 !important;\\n  box-shadow: unset !important;\\n  font-family: \\\"Cerebri Sans\\\", sans-serif !important;\\n}\\n.file-picker .app-loader{\\n  position: absolute;\\n  top: 10px !important;\\n  right: 10px;\\n}\\n.file-picker .user-select{\\n  padding-bottom: 8px;\\n}\\n._500plugins_widget.file-picker p{\\n  color: #12263F !important; \\n}\\n.file-picker .mr1{\\n  margin-right: 0.25rem !important;\\n}\\n.file-picker .d-flex{\\n  display: flex;\\n}\\n.file-picker .align-items-center{\\n  align-items: center;\\n}\\n.margin-auto-nowrap{\\n  margin: 0 auto !important;\\n  white-space: nowrap !important;\\n}\\n.margin-top-bottom-10{\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n.file-picker .padding-left-right-17{\\n  padding-left: 17px;\\n  padding-right: 17px;\\n}\\n.file-picker .font-size-base{\\n  font-size: 0.9rem !important;\\n}\\n.file-picker .bordered-box{\\n  border: 1px solid #e3ebf6;\\n    border-radius: 4px !important;\\n    padding:15px !important;\\n}\\n.file-picker .mr-small{\\n  margin-right: 0.3rem !important;\\n}\\n._500plugins_widget.file-picker .filesData {\\n  display: flex;\\n  align-items: center;\\n  cursor: pointer;\\n}\\n.file-picker div#show_files_data {\\n  max-height: calc(100vh - 50vh);\\n  overflow: auto;\\n  padding-top:8px;\\n}\\n.file-picker .row.user-select{\\n  position: relative;\\n}\\n.file-picker .row.user-select:after {\\n  position: absolute;\\n  top: 10px;\\n  color: #bdc1c7;\\n  z-index: 99 !important;\\n  font-size: 20px;\\n  right: 24px !important;\\n  content: \\\"\\\\e92e\\\";\\n  font-family: 'Feather' !important;\\n  speak: none;\\n  font-style: normal;\\n  font-weight: normal;\\n  font-variant: normal;\\n  text-transform: none;\\n  line-height: 1;\\n  -webkit-font-smoothing: antialiased;\\n}\\n@keyframes spinner-border {\\n  to { transform: rotate(360deg); }\\n  }\\n  .file-picker .spinner-border {\\n  display: inline-block;\\n  width: 20px;\\n  height: 20px;\\n  vertical-align: text-bottom;\\n  border: 2px solid #2C7BE5;\\n  border-right-color: transparent;\\n  border-radius: 50%;\\n  animation: spinner-border .75s linear infinite;\\n  }\\n  .file-picker .width-height-15{\\n    width: 13px !important;\\n    height: 13px !important;\\n    margin-right: 4px !important;\\n  }\\n  .file-picker .width-height-12{\\n    width: 12px !important;\\n    height: 12px !important;\\n    margin-left: -10px !important;\\n  }\\n._500plugins_widget.file-picker #modalFields {\\n    border-radius: 0.3rem !important;\\n    padding-right: 0px;\\n}\\n._500plugins_widget.file-picker #modalFields .addbtn {\\n    border-radius: 0.3rem !important;\\n    margin-top:12px !important;\\n}\\n\\n.file-picker .w-30{\\n  width:30%;\\n  margin-right:10px;\\n  cursor: pointer;\\n}\\n._500plugins_widget.file-picker .d-flex{\\n  display: flex;\\n}\\n._500plugins_widget.file-picker .p-1{\\n  padding: 1rem !important;\\n}\\n._500plugins_widget.file-picker .small{\\n  font-size: 0.85rem !important;\\n  font-weight: 500 !important;\\n  color: #12263F !important;\\n  text-align: center;\\n}\\n._500plugins_widget.file-picker  .profile-name{\\n  font-size: 12px !important;\\n  color: #3B506C !important;\\n  text-overflow: ellipsis;\\n  width: 15ch;\\n  margin-top: 2px;\\n  overflow: hidden;\\n}\\n\\n @font-face {\\n  font-family: 'Cerebri Sans';\\n  font-display: swap;\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \");\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") format(\\\"embedded-opentype\\\"), url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") format(\\\"woff\\\"), url(\" + ___CSS_LOADER_URL_REPLACEMENT_3___ + \") format(\\\"truetype\\\");\\n  font-weight: 400;\\n  unicode-range: U+000-5FF;\\n  font-style: normal; }\\n\\n@font-face {\\n  font-family: 'Cerebri Sans';\\n  font-display: swap;\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_4___ + \");\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_5___ + \") format(\\\"embedded-opentype\\\"), url(\" + ___CSS_LOADER_URL_REPLACEMENT_6___ + \") format(\\\"woff\\\"), url(\" + ___CSS_LOADER_URL_REPLACEMENT_7___ + \") format(\\\"truetype\\\");\\n  font-weight: 500;\\n  unicode-range: U+000-5FF;\\n  font-style: normal; }\\n\\n@font-face {\\n  font-family: 'Cerebri Sans';\\n  font-display: swap;\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_8___ + \");\\n  src: url(\" + ___CSS_LOADER_URL_REPLACEMENT_9___ + \") format(\\\"embedded-opentype\\\"), url(\" + ___CSS_LOADER_URL_REPLACEMENT_10___ + \") format(\\\"woff\\\"), url(\" + ___CSS_LOADER_URL_REPLACEMENT_11___ + \") format(\\\"truetype\\\");\\n  font-weight: 600;\\n  unicode-range: U+000-5FF;\\n  font-style: normal; }\\n\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://unified-sso/./src/global.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/widget/feather/feather.css":
/*!******************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/widget/feather/feather.css ***!
  \******************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../node_modules/css-loader/dist/runtime/getUrl.js */ \"./node_modules/css-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _fonts_Feather_ttf_sdxovp__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fonts/Feather.ttf?sdxovp */ \"./src/widget/feather/fonts/Feather.ttf?sdxovp\");\n/* harmony import */ var _fonts_Feather_woff_sdxovp__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fonts/Feather.woff?sdxovp */ \"./src/widget/feather/fonts/Feather.woff?sdxovp\");\n/* harmony import */ var _fonts_Feather_svg_sdxovp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./fonts/Feather.svg?sdxovp */ \"./src/widget/feather/fonts/Feather.svg?sdxovp\");\n// Imports\n\n\n\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_Feather_ttf_sdxovp__WEBPACK_IMPORTED_MODULE_2__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_Feather_woff_sdxovp__WEBPACK_IMPORTED_MODULE_3__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_1___default()(_fonts_Feather_svg_sdxovp__WEBPACK_IMPORTED_MODULE_4__.default, { hash: \"#Feather\" });\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@font-face {\\n    font-family: 'Feather';\\n    src:\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") format('truetype'),\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") format('woff'),\\n      url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") format('svg');\\n    font-weight: normal;\\n    font-style: normal;\\n  }\\n  \\n  .fe {\\n    /* use !important to prevent issues with browser extensions that change fonts */\\n    font-family: 'Feather' !important;\\n    speak: none;\\n    font-style: normal;\\n    font-weight: normal;\\n    font-variant: normal;\\n    text-transform: none;\\n    line-height: 1;\\n  \\n    /* Better Font Rendering =========== */\\n    -webkit-font-smoothing: antialiased;\\n    -moz-osx-font-smoothing: grayscale;\\n  }\\n  \\n  .fe-activity:before {\\n    content: \\\"\\\\e900\\\";\\n  }\\n  .fe-airplay:before {\\n    content: \\\"\\\\e901\\\";\\n  }\\n  .fe-alert-circle:before {\\n    content: \\\"\\\\e902\\\";\\n  }\\n  .fe-alert-octagon:before {\\n    content: \\\"\\\\e903\\\";\\n  }\\n  .fe-alert-triangle:before {\\n    content: \\\"\\\\e904\\\";\\n  }\\n  .fe-align-center:before {\\n    content: \\\"\\\\e905\\\";\\n  }\\n  .fe-align-justify:before {\\n    content: \\\"\\\\e906\\\";\\n  }\\n  .fe-align-left:before {\\n    content: \\\"\\\\e907\\\";\\n  }\\n  .fe-align-right:before {\\n    content: \\\"\\\\e908\\\";\\n  }\\n  .fe-anchor:before {\\n    content: \\\"\\\\e909\\\";\\n  }\\n  .fe-aperture:before {\\n    content: \\\"\\\\e90a\\\";\\n  }\\n  .fe-archive:before {\\n    content: \\\"\\\\e90b\\\";\\n  }\\n  .fe-arrow-down:before {\\n    content: \\\"\\\\e90c\\\";\\n  }\\n  .fe-arrow-down-circle:before {\\n    content: \\\"\\\\e90d\\\";\\n  }\\n  .fe-arrow-down-left:before {\\n    content: \\\"\\\\e90e\\\";\\n  }\\n  .fe-arrow-down-right:before {\\n    content: \\\"\\\\e90f\\\";\\n  }\\n  .fe-arrow-left:before {\\n    content: \\\"\\\\e910\\\";\\n  }\\n  .fe-arrow-left-circle:before {\\n    content: \\\"\\\\e911\\\";\\n  }\\n  .fe-arrow-right:before {\\n    content: \\\"\\\\e912\\\";\\n  }\\n  .fe-arrow-right-circle:before {\\n    content: \\\"\\\\e913\\\";\\n  }\\n  .fe-arrow-up:before {\\n    content: \\\"\\\\e914\\\";\\n  }\\n  .fe-arrow-up-circle:before {\\n    content: \\\"\\\\e915\\\";\\n  }\\n  .fe-arrow-up-left:before {\\n    content: \\\"\\\\e916\\\";\\n  }\\n  .fe-arrow-up-right:before {\\n    content: \\\"\\\\e917\\\";\\n  }\\n  .fe-at-sign:before {\\n    content: \\\"\\\\e918\\\";\\n  }\\n  .fe-award:before {\\n    content: \\\"\\\\e919\\\";\\n  }\\n  .fe-bar-chart:before {\\n    content: \\\"\\\\e91a\\\";\\n  }\\n  .fe-bar-chart-2:before {\\n    content: \\\"\\\\e91b\\\";\\n  }\\n  .fe-battery:before {\\n    content: \\\"\\\\e91c\\\";\\n  }\\n  .fe-battery-charging:before {\\n    content: \\\"\\\\e91d\\\";\\n  }\\n  .fe-bell:before {\\n    content: \\\"\\\\e91e\\\";\\n  }\\n  .fe-bell-off:before {\\n    content: \\\"\\\\e91f\\\";\\n  }\\n  .fe-bluetooth:before {\\n    content: \\\"\\\\e920\\\";\\n  }\\n  .fe-bold:before {\\n    content: \\\"\\\\e921\\\";\\n  }\\n  .fe-book:before {\\n    content: \\\"\\\\e922\\\";\\n  }\\n  .fe-book-open:before {\\n    content: \\\"\\\\e923\\\";\\n  }\\n  .fe-bookmark:before {\\n    content: \\\"\\\\e924\\\";\\n  }\\n  .fe-box:before {\\n    content: \\\"\\\\e925\\\";\\n  }\\n  .fe-briefcase:before {\\n    content: \\\"\\\\e926\\\";\\n  }\\n  .fe-calendar:before {\\n    content: \\\"\\\\e927\\\";\\n  }\\n  .fe-camera:before {\\n    content: \\\"\\\\e928\\\";\\n  }\\n  .fe-camera-off:before {\\n    content: \\\"\\\\e929\\\";\\n  }\\n  .fe-cast:before {\\n    content: \\\"\\\\e92a\\\";\\n  }\\n  .fe-check:before {\\n    content: \\\"\\\\e92b\\\";\\n  }\\n  .fe-check-circle:before {\\n    content: \\\"\\\\e92c\\\";\\n  }\\n  .fe-check-square:before {\\n    content: \\\"\\\\e92d\\\";\\n  }\\n  .fe-chevron-down:before {\\n    content: \\\"\\\\e92e\\\";\\n  }\\n  .fe-chevron-left:before {\\n    content: \\\"\\\\e92f\\\";\\n  }\\n  .fe-chevron-right:before {\\n    content: \\\"\\\\e930\\\";\\n  }\\n  .fe-chevron-up:before {\\n    content: \\\"\\\\e931\\\";\\n  }\\n  .fe-chevrons-down:before {\\n    content: \\\"\\\\e932\\\";\\n  }\\n  .fe-chevrons-left:before {\\n    content: \\\"\\\\e933\\\";\\n  }\\n  .fe-chevrons-right:before {\\n    content: \\\"\\\\e934\\\";\\n  }\\n  .fe-chevrons-up:before {\\n    content: \\\"\\\\e935\\\";\\n  }\\n  .fe-chrome:before {\\n    content: \\\"\\\\e936\\\";\\n  }\\n  .fe-circle:before {\\n    content: \\\"\\\\e937\\\";\\n  }\\n  .fe-clipboard:before {\\n    content: \\\"\\\\e938\\\";\\n  }\\n  .fe-clock:before {\\n    content: \\\"\\\\e939\\\";\\n  }\\n  .fe-cloud:before {\\n    content: \\\"\\\\e93a\\\";\\n  }\\n  .fe-cloud-drizzle:before {\\n    content: \\\"\\\\e93b\\\";\\n  }\\n  .fe-cloud-lightning:before {\\n    content: \\\"\\\\e93c\\\";\\n  }\\n  .fe-cloud-off:before {\\n    content: \\\"\\\\e93d\\\";\\n  }\\n  .fe-cloud-rain:before {\\n    content: \\\"\\\\e93e\\\";\\n  }\\n  .fe-cloud-snow:before {\\n    content: \\\"\\\\e93f\\\";\\n  }\\n  .fe-code:before {\\n    content: \\\"\\\\e940\\\";\\n  }\\n  .fe-codepen:before {\\n    content: \\\"\\\\e941\\\";\\n  }\\n  .fe-command:before {\\n    content: \\\"\\\\e942\\\";\\n  }\\n  .fe-compass:before {\\n    content: \\\"\\\\e943\\\";\\n  }\\n  .fe-copy:before {\\n    content: \\\"\\\\e944\\\";\\n  }\\n  .fe-corner-down-left:before {\\n    content: \\\"\\\\e945\\\";\\n  }\\n  .fe-corner-down-right:before {\\n    content: \\\"\\\\e946\\\";\\n  }\\n  .fe-corner-left-down:before {\\n    content: \\\"\\\\e947\\\";\\n  }\\n  .fe-corner-left-up:before {\\n    content: \\\"\\\\e948\\\";\\n  }\\n  .fe-corner-right-down:before {\\n    content: \\\"\\\\e949\\\";\\n  }\\n  .fe-corner-right-up:before {\\n    content: \\\"\\\\e94a\\\";\\n  }\\n  .fe-corner-up-left:before {\\n    content: \\\"\\\\e94b\\\";\\n  }\\n  .fe-corner-up-right:before {\\n    content: \\\"\\\\e94c\\\";\\n  }\\n  .fe-cpu:before {\\n    content: \\\"\\\\e94d\\\";\\n  }\\n  .fe-credit-card:before {\\n    content: \\\"\\\\e94e\\\";\\n  }\\n  .fe-crop:before {\\n    content: \\\"\\\\e94f\\\";\\n  }\\n  .fe-crosshair:before {\\n    content: \\\"\\\\e950\\\";\\n  }\\n  .fe-database:before {\\n    content: \\\"\\\\e951\\\";\\n  }\\n  .fe-delete:before {\\n    content: \\\"\\\\e952\\\";\\n  }\\n  .fe-disc:before {\\n    content: \\\"\\\\e953\\\";\\n  }\\n  .fe-dollar-sign:before {\\n    content: \\\"\\\\e954\\\";\\n  }\\n  .fe-download:before {\\n    content: \\\"\\\\e955\\\";\\n  }\\n  .fe-download-cloud:before {\\n    content: \\\"\\\\e956\\\";\\n  }\\n  .fe-droplet:before {\\n    content: \\\"\\\\e957\\\";\\n  }\\n  .fe-edit:before {\\n    content: \\\"\\\\e958\\\";\\n  }\\n  .fe-edit-2:before {\\n    content: \\\"\\\\e959\\\";\\n  }\\n  .fe-edit-3:before {\\n    content: \\\"\\\\e95a\\\";\\n  }\\n  .fe-external-link:before {\\n    content: \\\"\\\\e95b\\\";\\n  }\\n  .fe-eye:before {\\n    content: \\\"\\\\e95c\\\";\\n  }\\n  .fe-eye-off:before {\\n    content: \\\"\\\\e95d\\\";\\n  }\\n  .fe-facebook:before {\\n    content: \\\"\\\\e95e\\\";\\n  }\\n  .fe-fast-forward:before {\\n    content: \\\"\\\\e95f\\\";\\n  }\\n  .fe-feather:before {\\n    content: \\\"\\\\e960\\\";\\n  }\\n  .fe-file:before {\\n    content: \\\"\\\\e961\\\";\\n  }\\n  .fe-file-minus:before {\\n    content: \\\"\\\\e962\\\";\\n  }\\n  .fe-file-plus:before {\\n    content: \\\"\\\\e963\\\";\\n  }\\n  .fe-file-text:before {\\n    content: \\\"\\\\e964\\\";\\n  }\\n  .fe-film:before {\\n    content: \\\"\\\\e965\\\";\\n  }\\n  .fe-filter:before {\\n    content: \\\"\\\\e966\\\";\\n  }\\n  .fe-flag:before {\\n    content: \\\"\\\\e967\\\";\\n  }\\n  .fe-folder:before {\\n    content: \\\"\\\\e968\\\";\\n  }\\n  .fe-folder-minus:before {\\n    content: \\\"\\\\e969\\\";\\n  }\\n  .fe-folder-plus:before {\\n    content: \\\"\\\\e96a\\\";\\n  }\\n  .fe-gift:before {\\n    content: \\\"\\\\e96b\\\";\\n  }\\n  .fe-git-branch:before {\\n    content: \\\"\\\\e96c\\\";\\n  }\\n  .fe-git-commit:before {\\n    content: \\\"\\\\e96d\\\";\\n  }\\n  .fe-git-merge:before {\\n    content: \\\"\\\\e96e\\\";\\n  }\\n  .fe-git-pull-request:before {\\n    content: \\\"\\\\e96f\\\";\\n  }\\n  .fe-github:before {\\n    content: \\\"\\\\e970\\\";\\n  }\\n  .fe-gitlab:before {\\n    content: \\\"\\\\e971\\\";\\n  }\\n  .fe-globe:before {\\n    content: \\\"\\\\e972\\\";\\n  }\\n  .fe-grid:before {\\n    content: \\\"\\\\e973\\\";\\n  }\\n  .fe-hard-drive:before {\\n    content: \\\"\\\\e974\\\";\\n  }\\n  .fe-hash:before {\\n    content: \\\"\\\\e975\\\";\\n  }\\n  .fe-headphones:before {\\n    content: \\\"\\\\e976\\\";\\n  }\\n  .fe-heart:before {\\n    content: \\\"\\\\e977\\\";\\n  }\\n  .fe-help-circle:before {\\n    content: \\\"\\\\e978\\\";\\n  }\\n  .fe-home:before {\\n    content: \\\"\\\\e979\\\";\\n  }\\n  .fe-image:before {\\n    content: \\\"\\\\e97a\\\";\\n  }\\n  .fe-inbox:before {\\n    content: \\\"\\\\e97b\\\";\\n  }\\n  .fe-info:before {\\n    content: \\\"\\\\e97c\\\";\\n  }\\n  .fe-instagram:before {\\n    content: \\\"\\\\e97d\\\";\\n  }\\n  .fe-italic:before {\\n    content: \\\"\\\\e97e\\\";\\n  }\\n  .fe-layers:before {\\n    content: \\\"\\\\e97f\\\";\\n  }\\n  .fe-layout:before {\\n    content: \\\"\\\\e980\\\";\\n  }\\n  .fe-life-buoy:before {\\n    content: \\\"\\\\e981\\\";\\n  }\\n  .fe-link:before {\\n    content: \\\"\\\\e982\\\";\\n  }\\n  .fe-link-2:before {\\n    content: \\\"\\\\e983\\\";\\n  }\\n  .fe-linkedin:before {\\n    content: \\\"\\\\e984\\\";\\n  }\\n  .fe-list:before {\\n    content: \\\"\\\\e985\\\";\\n  }\\n  .fe-loader:before {\\n    content: \\\"\\\\e986\\\";\\n  }\\n  .fe-lock:before {\\n    content: \\\"\\\\e987\\\";\\n  }\\n  .fe-log-in:before {\\n    content: \\\"\\\\e988\\\";\\n  }\\n  .fe-log-out:before {\\n    content: \\\"\\\\e989\\\";\\n  }\\n  .fe-mail:before {\\n    content: \\\"\\\\e98a\\\";\\n  }\\n  .fe-map:before {\\n    content: \\\"\\\\e98b\\\";\\n  }\\n  .fe-map-pin:before {\\n    content: \\\"\\\\e98c\\\";\\n  }\\n  .fe-maximize:before {\\n    content: \\\"\\\\e98d\\\";\\n  }\\n  .fe-maximize-2:before {\\n    content: \\\"\\\\e98e\\\";\\n  }\\n  .fe-menu:before {\\n    content: \\\"\\\\e98f\\\";\\n  }\\n  .fe-message-circle:before {\\n    content: \\\"\\\\e990\\\";\\n  }\\n  .fe-message-square:before {\\n    content: \\\"\\\\e991\\\";\\n  }\\n  .fe-mic:before {\\n    content: \\\"\\\\e992\\\";\\n  }\\n  .fe-mic-off:before {\\n    content: \\\"\\\\e993\\\";\\n  }\\n  .fe-minimize:before {\\n    content: \\\"\\\\e994\\\";\\n  }\\n  .fe-minimize-2:before {\\n    content: \\\"\\\\e995\\\";\\n  }\\n  .fe-minus:before {\\n    content: \\\"\\\\e996\\\";\\n  }\\n  .fe-minus-circle:before {\\n    content: \\\"\\\\e997\\\";\\n  }\\n  .fe-minus-square:before {\\n    content: \\\"\\\\e998\\\";\\n  }\\n  .fe-monitor:before {\\n    content: \\\"\\\\e999\\\";\\n  }\\n  .fe-moon:before {\\n    content: \\\"\\\\e99a\\\";\\n  }\\n  .fe-more-horizontal:before {\\n    content: \\\"\\\\e99b\\\";\\n  }\\n  .fe-more-vertical:before {\\n    content: \\\"\\\\e99c\\\";\\n  }\\n  .fe-move:before {\\n    content: \\\"\\\\e99d\\\";\\n  }\\n  .fe-music:before {\\n    content: \\\"\\\\e99e\\\";\\n  }\\n  .fe-navigation:before {\\n    content: \\\"\\\\e99f\\\";\\n  }\\n  .fe-navigation-2:before {\\n    content: \\\"\\\\e9a0\\\";\\n  }\\n  .fe-octagon:before {\\n    content: \\\"\\\\e9a1\\\";\\n  }\\n  .fe-package:before {\\n    content: \\\"\\\\e9a2\\\";\\n  }\\n  .fe-paperclip:before {\\n    content: \\\"\\\\e9a3\\\";\\n  }\\n  .fe-pause:before {\\n    content: \\\"\\\\e9a4\\\";\\n  }\\n  .fe-pause-circle:before {\\n    content: \\\"\\\\e9a5\\\";\\n  }\\n  .fe-percent:before {\\n    content: \\\"\\\\e9a6\\\";\\n  }\\n  .fe-phone:before {\\n    content: \\\"\\\\e9a7\\\";\\n  }\\n  .fe-phone-call:before {\\n    content: \\\"\\\\e9a8\\\";\\n  }\\n  .fe-phone-forwarded:before {\\n    content: \\\"\\\\e9a9\\\";\\n  }\\n  .fe-phone-incoming:before {\\n    content: \\\"\\\\e9aa\\\";\\n  }\\n  .fe-phone-missed:before {\\n    content: \\\"\\\\e9ab\\\";\\n  }\\n  .fe-phone-off:before {\\n    content: \\\"\\\\e9ac\\\";\\n  }\\n  .fe-phone-outgoing:before {\\n    content: \\\"\\\\e9ad\\\";\\n  }\\n  .fe-pie-chart:before {\\n    content: \\\"\\\\e9ae\\\";\\n  }\\n  .fe-play:before {\\n    content: \\\"\\\\e9af\\\";\\n  }\\n  .fe-play-circle:before {\\n    content: \\\"\\\\e9b0\\\";\\n  }\\n  .fe-plus:before {\\n    content: \\\"\\\\e9b1\\\";\\n  }\\n  .fe-plus-circle:before {\\n    content: \\\"\\\\e9b2\\\";\\n  }\\n  .fe-plus-square:before {\\n    content: \\\"\\\\e9b3\\\";\\n  }\\n  .fe-pocket:before {\\n    content: \\\"\\\\e9b4\\\";\\n  }\\n  .fe-power:before {\\n    content: \\\"\\\\e9b5\\\";\\n  }\\n  .fe-printer:before {\\n    content: \\\"\\\\e9b6\\\";\\n  }\\n  .fe-radio:before {\\n    content: \\\"\\\\e9b7\\\";\\n  }\\n  .fe-refresh-ccw:before {\\n    content: \\\"\\\\e9b8\\\";\\n  }\\n  .fe-refresh-cw:before {\\n    content: \\\"\\\\e9b9\\\";\\n  }\\n  .fe-repeat:before {\\n    content: \\\"\\\\e9ba\\\";\\n  }\\n  .fe-rewind:before {\\n    content: \\\"\\\\e9bb\\\";\\n  }\\n  .fe-rotate-ccw:before {\\n    content: \\\"\\\\e9bc\\\";\\n  }\\n  .fe-rotate-cw:before {\\n    content: \\\"\\\\e9bd\\\";\\n  }\\n  .fe-rss:before {\\n    content: \\\"\\\\e9be\\\";\\n  }\\n  .fe-save:before {\\n    content: \\\"\\\\e9bf\\\";\\n  }\\n  .fe-scissors:before {\\n    content: \\\"\\\\e9c0\\\";\\n  }\\n  .fe-search:before {\\n    content: \\\"\\\\e9c1\\\";\\n  }\\n  .fe-send:before {\\n    content: \\\"\\\\e9c2\\\";\\n  }\\n  .fe-server:before {\\n    content: \\\"\\\\e9c3\\\";\\n  }\\n  .fe-settings:before {\\n    content: \\\"\\\\e9c4\\\";\\n  }\\n  .fe-share:before {\\n    content: \\\"\\\\e9c5\\\";\\n  }\\n  .fe-share-2:before {\\n    content: \\\"\\\\e9c6\\\";\\n  }\\n  .fe-shield:before {\\n    content: \\\"\\\\e9c7\\\";\\n  }\\n  .fe-shield-off:before {\\n    content: \\\"\\\\e9c8\\\";\\n  }\\n  .fe-shopping-bag:before {\\n    content: \\\"\\\\e9c9\\\";\\n  }\\n  .fe-shopping-cart:before {\\n    content: \\\"\\\\e9ca\\\";\\n  }\\n  .fe-shuffle:before {\\n    content: \\\"\\\\e9cb\\\";\\n  }\\n  .fe-sidebar:before {\\n    content: \\\"\\\\e9cc\\\";\\n  }\\n  .fe-skip-back:before {\\n    content: \\\"\\\\e9cd\\\";\\n  }\\n  .fe-skip-forward:before {\\n    content: \\\"\\\\e9ce\\\";\\n  }\\n  .fe-slack:before {\\n    content: \\\"\\\\e9cf\\\";\\n  }\\n  .fe-slash:before {\\n    content: \\\"\\\\e9d0\\\";\\n  }\\n  .fe-sliders:before {\\n    content: \\\"\\\\e9d1\\\";\\n  }\\n  .fe-smartphone:before {\\n    content: \\\"\\\\e9d2\\\";\\n  }\\n  .fe-speaker:before {\\n    content: \\\"\\\\e9d3\\\";\\n  }\\n  .fe-square:before {\\n    content: \\\"\\\\e9d4\\\";\\n  }\\n  .fe-star:before {\\n    content: \\\"\\\\e9d5\\\";\\n  }\\n  .fe-stop-circle:before {\\n    content: \\\"\\\\e9d6\\\";\\n  }\\n  .fe-sun:before {\\n    content: \\\"\\\\e9d7\\\";\\n  }\\n  .fe-sunrise:before {\\n    content: \\\"\\\\e9d8\\\";\\n  }\\n  .fe-sunset:before {\\n    content: \\\"\\\\e9d9\\\";\\n  }\\n  .fe-tablet:before {\\n    content: \\\"\\\\e9da\\\";\\n  }\\n  .fe-tag:before {\\n    content: \\\"\\\\e9db\\\";\\n  }\\n  .fe-target:before {\\n    content: \\\"\\\\e9dc\\\";\\n  }\\n  .fe-terminal:before {\\n    content: \\\"\\\\e9dd\\\";\\n  }\\n  .fe-thermometer:before {\\n    content: \\\"\\\\e9de\\\";\\n  }\\n  .fe-thumbs-down:before {\\n    content: \\\"\\\\e9df\\\";\\n  }\\n  .fe-thumbs-up:before {\\n    content: \\\"\\\\e9e0\\\";\\n  }\\n  .fe-toggle-left:before {\\n    content: \\\"\\\\e9e1\\\";\\n  }\\n  .fe-toggle-right:before {\\n    content: \\\"\\\\e9e2\\\";\\n  }\\n  .fe-trash:before {\\n    content: \\\"\\\\e9e3\\\";\\n  }\\n  .fe-trash-2:before {\\n    content: \\\"\\\\e9e4\\\";\\n  }\\n  .fe-trending-down:before {\\n    content: \\\"\\\\e9e5\\\";\\n  }\\n  .fe-trending-up:before {\\n    content: \\\"\\\\e9e6\\\";\\n  }\\n  .fe-triangle:before {\\n    content: \\\"\\\\e9e7\\\";\\n  }\\n  .fe-truck:before {\\n    content: \\\"\\\\e9e8\\\";\\n  }\\n  .fe-tv:before {\\n    content: \\\"\\\\e9e9\\\";\\n  }\\n  .fe-twitter:before {\\n    content: \\\"\\\\e9ea\\\";\\n  }\\n  .fe-type:before {\\n    content: \\\"\\\\e9eb\\\";\\n  }\\n  .fe-umbrella:before {\\n    content: \\\"\\\\e9ec\\\";\\n  }\\n  .fe-underline:before {\\n    content: \\\"\\\\e9ed\\\";\\n  }\\n  .fe-unlock:before {\\n    content: \\\"\\\\e9ee\\\";\\n  }\\n  .fe-upload:before {\\n    content: \\\"\\\\e9ef\\\";\\n  }\\n  .fe-upload-cloud:before {\\n    content: \\\"\\\\e9f0\\\";\\n  }\\n  .fe-user:before {\\n    content: \\\"\\\\e9f1\\\";\\n  }\\n  .fe-user-check:before {\\n    content: \\\"\\\\e9f2\\\";\\n  }\\n  .fe-user-minus:before {\\n    content: \\\"\\\\e9f3\\\";\\n  }\\n  .fe-user-plus:before {\\n    content: \\\"\\\\e9f4\\\";\\n  }\\n  .fe-user-x:before {\\n    content: \\\"\\\\e9f5\\\";\\n  }\\n  .fe-users:before {\\n    content: \\\"\\\\e9f6\\\";\\n  }\\n  .fe-video:before {\\n    content: \\\"\\\\e9f7\\\";\\n  }\\n  .fe-video-off:before {\\n    content: \\\"\\\\e9f8\\\";\\n  }\\n  .fe-voicemail:before {\\n    content: \\\"\\\\e9f9\\\";\\n  }\\n  .fe-volume:before {\\n    content: \\\"\\\\e9fa\\\";\\n  }\\n  .fe-volume-1:before {\\n    content: \\\"\\\\e9fb\\\";\\n  }\\n  .fe-volume-2:before {\\n    content: \\\"\\\\e9fc\\\";\\n  }\\n  .fe-volume-x:before {\\n    content: \\\"\\\\e9fd\\\";\\n  }\\n  .fe-watch:before {\\n    content: \\\"\\\\e9fe\\\";\\n  }\\n  .fe-wifi:before {\\n    content: \\\"\\\\e9ff\\\";\\n  }\\n  .fe-wifi-off:before {\\n    content: \\\"\\\\ea00\\\";\\n  }\\n  .fe-wind:before {\\n    content: \\\"\\\\ea01\\\";\\n  }\\n  .fe-x:before {\\n    content: \\\"\\\\ea02\\\";\\n  }\\n  .fe-x-circle:before {\\n    content: \\\"\\\\ea03\\\";\\n  }\\n  .fe-x-square:before {\\n    content: \\\"\\\\ea04\\\";\\n  }\\n  .fe-youtube:before {\\n    content: \\\"\\\\ea05\\\";\\n  }\\n  .fe-zap:before {\\n    content: \\\"\\\\ea06\\\";\\n  }\\n  .fe-zap-off:before {\\n    content: \\\"\\\\ea07\\\";\\n  }\\n  .fe-zoom-in:before {\\n    content: \\\"\\\\ea08\\\";\\n  }\\n  .fe-zoom-out:before {\\n    content: \\\"\\\\ea09\\\";\\n  }\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://unified-sso/./src/widget/feather/feather.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js!./src/widget/widget.css":
/*!*********************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js!./src/widget/widget.css ***!
  \*********************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_feather_feather_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! -!../../node_modules/css-loader/dist/cjs.js!./feather/feather.css */ \"./node_modules/css-loader/dist/cjs.js!./src/widget/feather/feather.css\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/getUrl.js */ \"./node_modules/css-loader/dist/runtime/getUrl.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _feather_fonts_Feather_ttf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./feather/fonts/Feather.ttf */ \"./src/widget/feather/fonts/Feather.ttf\");\n/* harmony import */ var _feather_fonts_Feather_woff_sdxovp__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./feather/fonts/Feather.woff?sdxovp */ \"./src/widget/feather/fonts/Feather.woff?sdxovp\");\n/* harmony import */ var _feather_fonts_Feather_svg_sdxovp__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./feather/fonts/Feather.svg?sdxovp */ \"./src/widget/feather/fonts/Feather.svg?sdxovp\");\n// Imports\n\n\n\n\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n___CSS_LOADER_EXPORT___.i(_node_modules_css_loader_dist_cjs_js_feather_feather_css__WEBPACK_IMPORTED_MODULE_1__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_0___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_feather_fonts_Feather_ttf__WEBPACK_IMPORTED_MODULE_3__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_1___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_feather_fonts_Feather_woff_sdxovp__WEBPACK_IMPORTED_MODULE_4__.default);\nvar ___CSS_LOADER_URL_REPLACEMENT_2___ = _node_modules_css_loader_dist_runtime_getUrl_js__WEBPACK_IMPORTED_MODULE_2___default()(_feather_fonts_Feather_svg_sdxovp__WEBPACK_IMPORTED_MODULE_5__.default, { hash: \"#Feather\" });\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"@font-face {\\n  font-family: 'Feather';\\n  src:\\n    url(\" + ___CSS_LOADER_URL_REPLACEMENT_0___ + \") format('truetype'),\\n    url(\" + ___CSS_LOADER_URL_REPLACEMENT_1___ + \") format('woff'),\\n    url(\" + ___CSS_LOADER_URL_REPLACEMENT_2___ + \") format('svg');\\n  font-weight: normal;\\n  font-style: normal;\\n}\\n._500plugins_widget {\\n  font-family: \\\"Cerebri Sans\\\", sans-serif;\\n  margin: 0;\\n  padding: 0;\\n  box-sizing: border-box;\\n}\\n\\n*,\\n::after,\\n::before {\\n  box-sizing: border-box;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n._500plugins_widget ::-webkit-scrollbar {\\n  width: 6px;\\n  height: 6px;\\n  border-radius: 6px;\\n}\\n\\n._500plugins_widget ::-webkit-scrollbar-thumb {\\n  -webkit-box-shadow: inset 0 0 1px 1px #ccc;\\n  box-shadow: inset 0 0 1px 1px #ccc;\\n}\\n\\n._500plugins_widget ::-webkit-scrollbar-thumb {\\n  border-radius: 6px;\\n}\\n\\n._500plugins_widget ::-webkit-scrollbar-thumb {\\n  background: #cfd8dc;\\n}\\n\\n._500plugins_widget ::-webkit-scrollbar-track {\\n  background: transparent;\\n}\\n\\n._500plugins_widget .elipses {\\n  display: -webkit-box;\\n  -webkit-line-clamp: 3;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  height: 60px;\\n  line-height: 1.5 !important;\\n  text-align: left;\\n  font-size: 13px;\\n font-family: \\\"Cerebri Sans\\\", sans-serif;\\n}\\n\\n._500plugins_widget .label {\\n  border: 1px solid #ddd;\\n  background-color: #f1f1f1;\\n}\\n\\n._500plugins_widget section {\\n  padding: 60px 0;\\n}\\n\\n._500plugins_widget .fa-plus {\\n  vertical-align: middle !important;\\n}\\n\\n._500plugins_widget section .section-title {\\n  text-align: center;\\n  /* color: #007b5e; */\\n  margin-bottom: 50px;\\n  text-transform: uppercase;\\n}\\n\\n/* .plugins {\\n-webkit-box-shadow: -4px 0px 10px 1px rgba(0, 0, 0, 0.15) !important;\\nbox-shadow: -4px 0px 10px 1px rgba(0, 0, 0, 0.15) !important\\n} */\\n\\n._500plugins_widget #tabs {\\n  /* background: #007b5e; */\\n  color: #eee;\\n}\\n\\n._500plugins_widget #tabs h6.section-title {\\n  color: #eee;\\n}\\n\\n._500plugins_widget #tabs .nav-tabs .nav-link,\\n._500plugins_widget #app-data .nav-tabs .nav-link,\\n._500plugins_widget .checkWidgetData .nav-tabs .nav-link {\\n  font-weight: 400 !important;\\n  color: #909090 !important;\\n  /* border-color: #fff !important; */\\n  margin-right: 1rem !important;\\n  padding: 0.5rem 0rem 0.5rem 0rem !important;\\n}\\n\\n._500plugins_widget #app-data .nav-tabs .nav-link.active,\\n._500plugins_widget .checkWidgetData .nav-tabs .nav-link.active {\\n  color: #12263F !important;\\n  border-bottom: 2px solid #1556e6 !important;\\n  padding-right: 0px !important;\\n  margin-right: 1rem !important;\\n}\\n\\n._500plugins_widget a {\\n  text-decoration: none !important;\\n}\\n\\n._500plugins_widget article,\\n._500plugins_widget aside,\\n._500plugins_widget figcaption,\\n._500plugins_widget figure,\\n._500plugins_widget footer,\\n._500plugins_widget header,\\n._500plugins_widget hgroup,\\n._500plugins_widget main,\\n._500plugins_widget nav,\\n._500plugins_widget section {\\n  display: block;\\n}\\n\\n._500plugins_widget button,\\n._500plugins_widget input {\\n  overflow: visible;\\n}\\n\\n._500plugins_widget h1,\\n._500plugins_widget h2,\\n._500plugins_widget h3,\\n._500plugins_widget h4,\\n._500plugins_widget h5,\\n._500plugins_widget h6 {\\n  margin-bottom: 0.5rem;\\n  font-family: inherit;\\n  font-weight: 300;\\n  line-height: 1.2;\\n  color: #02033e;\\n}\\n\\n._500plugins_widget button,\\n._500plugins_widget input,\\n._500plugins_widget optgroup,\\n._500plugins_widget select,\\n._500plugins_widget textarea {\\n  margin: 0;\\n  font-family: inherit;\\n  font-size: inherit;\\n  line-height: inherit;\\n}\\n\\n._500plugins_widget .btn:focus {\\n  outline: none !important;\\n  box-shadow: none !important;\\n}\\n\\n._500plugins_widget p {\\n  margin-bottom: 0 !important;\\n}\\n\\n._500plugins_widget .h4,\\n._500plugins_widget h4 {\\n  font-size: 24px;\\n  margin-bottom: 0;\\n  margin-top: 0;\\n}\\n\\n._500plugins_widget .h5,\\n._500plugins_widget h5 {\\n  font-size: 17px;\\n  margin-bottom: 0;\\n  margin-top: 0;\\n}\\n\\n._500plugins_widget {\\n  box-sizing: border-box;\\n}\\n\\n._500plugins_widget.row {\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n}\\n\\n._500plugins_widget .fon14,\\n._500plugins_widget #signup,\\n._500plugins_widget #login {\\n  font-size: 14px;\\n}\\n\\n._500plugins_widget .fon12 {\\n  font-size: 12px;\\n}\\n\\n._500plugins_widget ._500plugins_widget .fon10 {\\n  font-size: 10px;\\n}\\n\\n._500plugins_widget .label-head {\\n  border-bottom: 1px solid #E3EBF6;\\n  padding: 6px 10px;\\n  border-top: 1px solid #E3EBF6;\\n}\\n\\n._500plugins_widget .label-head h5 {\\n  color: #12263F !important;\\n  font-weight: 400;\\n}\\n\\n._500plugins_widget p {\\n  color: #6c757d !important;\\n  line-height: 1.6 !important;\\n}\\n\\n._500plugins_widget .empty-stats {\\n  text-align: center;\\n  margin: 0 auto;\\n}\\n\\n._500plugins_widget .cardheader .cardlink {\\n  color: #383838 !important;\\n}\\n\\n._500plugins_widget .row {\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-wrap: wrap;\\n  flex-wrap: wrap;\\n  margin-right: -15px;\\n  margin-left: -15px;\\n}\\n\\n._500plugins_widget .col2,\\n._500plugins_widget .col3,\\n._500plugins_widget .col4,\\n._500plugins_widget .col7\\n._500plugins_widget .col8\\n._500plugins_widget .col9\\n._500plugins_widget .col12 {\\n  position: relative;\\n  width: 100%;\\n  padding-right: 0.5rem;\\n  padding-left: 0.5rem;\\n}\\n\\n._500plugins_widget .col2 {\\n  -ms-flex: 0 0 16.666667%;\\n  flex: 0 0 16.666667%;\\n  max-width: 16.666667%;\\n}\\n\\n._500plugins_widget .col3,\\n.widget-footer {\\n  -ms-flex: 0 0 25%;\\n  flex: 0 0 25%;\\n  max-width: 25%;\\n}\\n\\n._500plugins_widget .col4 {\\n  -ms-flex: 0 0 33.333333%;\\n  flex: 0 0 33.333333%;\\n  max-width: 33.333333%;\\n}\\n\\n._500plugins_widget .col7 {\\n  -ms-flex: 0 0 58.333333%;\\n  flex: 0 0 58.333333%;\\n  max-width: 58.333333%;\\n}\\n\\n._500plugins_widget .col8 {\\n  -ms-flex: 0 0 66.6666667%;\\n  flex: 0 0 66.6666667%;\\n  max-width: 66.6666667%\\n}\\n\\n._500plugins_widget .col9 {\\n  -ms-flex: 0 0 75%;\\n  flex: 0 0 75%;\\n  max-width: 75%;\\n}\\n\\n._500plugins_widget .col10 {\\n  -ms-flex: 0 0 83.333333%;\\n  flex: 0 0 83.333333%;\\n  max-width: 83.333333%;\\n}\\n\\n._500plugins_widget .col12 {\\n  -ms-flex: 0 0 100%;\\n  flex: 0 0 100%;\\n  max-width: 100%;\\n}\\n\\n._500plugins_widget .padding-5 {\\n  padding: 3rem !important;\\n}\\n\\n._500plugins_widget .padding-0 {\\n  padding: 0 !important;\\n  /* height: 98vh; */\\n}\\n\\n._500plugins_widget.m0 {\\n  margin: 0 !important;\\n}\\n\\n._500plugins_widget .mt2 {\\n  margin-top: 0.5rem !important;\\n}\\n._500plugins_widget .mt3 {\\n  margin-top: 1rem !important;\\n}\\n\\n._500plugins_widget .mr2,\\n._500plugins_widget .mx2 {\\n  margin-right: 0.5rem !important;\\n}\\n._500plugins_widget .mr0,\\n._500plugins_widget .mx0 {\\n  margin-right: 0 !important;\\n}\\n\\n._500plugins_widget .ml1,\\n.mx1 {\\n  margin-left: 0.25rem !important;\\n}\\n\\n._500plugins_widget .ml2,\\n  .mx2 {\\n    margin-left: 0.50rem !important;\\n  }\\n\\n  ._500plugins_widget .ml4,\\n  .mx4 {\\n    margin-left: 1.50rem !important;\\n  }\\n\\n  ._500plugins_widget .mr4,\\n  .mx4 {\\n    margin-right: 1.50rem !important;\\n  }\\n\\n._500plugins_widget .mt4,\\n._500plugins_widget .my4 {\\n  margin-top: 1.5rem !important;\\n}\\n\\n._500plugins_widget .mt2,\\n._500plugins_widget .my2 {\\n  margin-top: 0.5rem !important;\\n}\\n\\n._500plugins_widget .mt5,\\n._500plugins_widget .my5 {\\n  margin-top: 3rem !important;\\n}\\n\\n._500plugins_widget .mb2 {\\n  margin-bottom: 0.5rem !important;\\n}\\n\\n._500plugins_widget .mt0,\\n._500plugins_widget .my0 {\\n  margin-top: 0 !important;\\n}\\n\\n._500plugins_widget .pt0 {\\n  padding-top: 0;\\n}\\n\\n.loginmodal.pt0 {\\n  padding-top: 0 !important;\\n}\\n\\n._500plugins_widget .p1 {\\n  padding: 0.25rem !important;\\n}\\n\\n._500plugins_widget .p0 {\\n  padding: 0 !important;\\n}\\n\\n._500plugins_widget .p3 {\\n  padding: 1rem !important;\\n}\\n\\n._500plugins_widget .pl0,\\n._500plugins_widget .px0 {\\n  padding-left: 0 !important;\\n}\\n\\n._500plugins_widget .pl2,\\n._500plugins_widget .px2 {\\n  padding-left: 0.5rem !important;\\n}\\n\\n._500plugins_widget .pl3,\\n._500plugins_widget .px3 {\\n  padding-left: 1rem !important;\\n}\\n\\n._500plugins_widget .pl4,\\n._500plugins_widget .px4 {\\n  padding-left: 1.5rem !important;\\n}\\n\\n._500plugins_widget .pl5,\\n._500plugins_widget .px5 {\\n  padding-left: 3rem !important;\\n}\\n\\n._500plugins_widget .pr0,\\n.px0 {\\n  padding-right: 0 !important;\\n}\\n\\n._500plugins_widget .text-center {\\n  text-align: center !important;\\n}\\n\\n._500plugins_widget .pt1 {\\n  padding-top: 0.25rem !important;\\n}\\n\\n._500plugins_widget .pt2,\\n._500plugins_widget .py2 {\\n  padding-top: 0.5rem !important;\\n}\\n\\n._500plugins_widget .pt3 {\\n  padding-top: 1rem !important;\\n}\\n\\n._500plugins_widget .pb3,\\n._500plugins_widget .py3 {\\n  padding-bottom: 1rem !important;\\n}\\n\\n._500plugins_widget .pb2,\\n._500plugins_widget .py2 {\\n  padding-bottom: 0.5rem !important;\\n}\\n\\n._500plugins_widget .pr2,\\n._500plugins_widget .px2 {\\n  padding-right: 0.5rem !important;\\n}\\n\\n._500plugins_widget .textdanger {\\n  color: #dc3545 !important;\\n  font-size: 12px;\\n}\\n\\n._500plugins_widget .loginmodal .textdanger {\\n  text-align: left;\\n  margin-left: 92px;\\n  margin-bottom: 8px;\\n}\\n\\n._500plugins_widget .text-primary {\\n  color: #2C7BE5 !important;\\n}\\n\\n._500plugins_widget .imgfluid {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n._500plugins_widget .navbar-brand {\\n  display: inline-block !important;\\n  padding-top: 0.3125rem;\\n  padding-bottom: 0.3125rem;\\n  margin-right: 1rem;\\n  font-size: 20px;\\n  line-height: inherit;\\n  white-space: nowrap;\\n}\\n\\n._500plugins_widget .font-weight-normal,\\n.loginmodal .font-weight-normal {\\n  font-weight: 400 !important;\\n}\\n\\n._500plugins_widget .font-weight-600 {\\n  font-weight: 600 !important;\\n}\\n\\n._500plugins_widget .text-muted {\\n  color: #95AAC9 !important;\\n}\\n\\n._500plugins_widget .small {\\n  font-size: 80%;\\n  font-weight: 400;\\n}\\n\\n._500plugins_widget .p3 {\\n  padding: 1rem !important;\\n}\\n\\n._500plugins_widget .mlauto,\\n._500plugins_widget .mxauto {\\n  margin-left: auto !important;\\n}\\n\\n._500plugins_widget .mrauto,\\n._500plugins_widget .mxauto {\\n  margin-right: auto !important;\\n}\\n\\n._500plugins_widget textarea {\\n  height: auto !important;\\n}\\n\\n._500plugins_widget .form-control {\\n  display: block;\\n  width: 100%;\\n  height: 42px;\\n  padding: 0.375rem 0.75rem;\\n  font-size: 14px;\\n  font-weight: 400;\\n  line-height: 1.5;\\n  color: #495057;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid #ced4da;\\n  border-radius: 4px;\\n}\\n\\n._500plugins_widget input:focus,\\n._500plugins_widget textarea:focus {\\n  border-color: #1556e6 !important;\\n  outline: none !important;\\n}\\n\\n._500plugins_widget .badge {\\n  display: inline-block;\\n  padding: 0.25em 0.4em;\\n  font-size: 75%;\\n  font-weight: 700;\\n  line-height: 1;\\n  text-align: center;\\n  white-space: nowrap;\\n  vertical-align: baseline;\\n  border-radius: 0.25rem !important;\\n}\\n\\n._500plugins_widget .btn {\\n  display: inline-block;\\n  font-weight: 400;\\n  color: #4d5156;\\n  text-align: center;\\n  vertical-align: middle;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  background-color: transparent;\\n  border: 1px solid transparent;\\n  padding: 0.5rem 0.75rem;\\n  font-size: 14px;\\n  line-height: 1.5;\\n  border-radius: 2px;\\n  text-transform: none;\\n  -webkit-transition: color 0.15s ease-in-out,\\n    background-color 0.15s ease-in-out, border-color 0.15s ease-in-out,\\n    -webkit-box-shadow 0.15s ease-in-out;\\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\\n    border-color 0.15s ease-in-out, -webkit-box-shadow 0.15s ease-in-out;\\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\\n  transition: color 0.15s ease-in-out, background-color 0.15s ease-in-out,\\n    border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out,\\n    -webkit-box-shadow 0.15s ease-in-out;\\n}\\n\\n._500plugins_widget .btnprimary,\\n#h-login .btn-outline-primary {\\n  color: #fff !important;\\n  background-color: #007bff !important;\\n  border-color: #007bff !important;\\n}\\n\\n._500plugins_widget .tc {\\n  color: #007bff !important;\\n}\\n\\n._500plugins_widget #h-login {\\n  margin-top: 50px;\\n}\\n\\n._500plugins_widget #h-login h5 {\\n  color: #02033e;\\n  font-weight: 400;\\n}\\n\\n._500plugins_widget #h-login .btn-outline-primary {\\n  margin-top: 15px;\\n}\\n\\n._500plugins_widget .signupbtn,\\n._500plugins_widget .loginbtn {\\n  max-width: 100%;\\n  width: 58.333333%;\\n}\\n\\n._500plugins_widget .form-group {\\n  margin-bottom: 14px !important;\\n}\\n\\n._500plugins_widget .textleft {\\n  text-align: left !important;\\n}\\n\\n._500plugins_widget .textcenter {\\n  text-align: center !important;\\n}\\n\\n._500plugins_widget .heading-name {\\n  font-size: 20.8px !important;\\n  color: #02033e !important;\\n  font-weight: 500 !important;\\n}\\n\\n/*--navtab--*/\\n\\n._500plugins_widget .nav-tabs {\\n  border-bottom: 1px solid #dee2e6 !important;\\n}\\n\\n._500plugins_widget .nav {\\n  display: -ms-flexbox !important;\\n  display: flex !important;\\n  -ms-flex-wrap: wrap !important;\\n  flex-wrap: wrap !important;\\n  padding-left: 0 !important;\\n  margin-bottom: 0 !important;\\n  list-style: none !important;\\n  border-bottom: 1px solid #f1f1f1;\\n  /* margin: 0px 16px 0px 7px; */\\n  width: auto !important;\\n  font-size: 14px !important;\\n}\\n\\n._500plugins_widget .nav-tabs .nav-link {\\n  font-weight: 400 !important;\\n  color: #909090;\\n  border-color: #dee2e6 !important;\\n  /* margin-right: 2.1rem !important; */\\n  padding-bottom: 0.6rem !important;\\n  border-bottom: 0px solid #0000000d !important;\\n  border-top: 0 !important;\\n  border-left: 0 !important;\\n  border-right: 0 !important;\\n  border: 1px solid transparent !important;\\n  border-top-left-radius: 0;\\n  border-top-right-radius: 0;\\n  cursor: pointer;\\n}\\n\\n._500plugins_widget #nav-tab_2.nav-tabs {\\n  margin-left: 0 !important;\\n}\\n\\n._500plugins_widget .nav-tabs .nav-item {\\n  margin-bottom: -1px !important;\\n  /* margin: 0px !important; */\\n  font-weight: 400;\\n  position: relative;\\n}\\n\\n._500plugins_widget .nav-tabs .nav-item a {\\n  padding: 0px !important;\\n  margin-right: 2.1rem;\\n}\\n\\n._500plugins_widget .text-capitalize {\\n  text-transform: capitalize !important;\\n}\\n\\n._500plugins_widget .nav-link {\\n  display: block;\\n}\\n\\n._500plugins_widget .tab-content .tab-pane {\\n  display: none;\\n  padding-top: 10px;\\n}\\n\\n._500plugins_widget .tab-content .tab-pane.active {\\n  display: block !important;\\n}\\n\\n._500plugins_widget .tab-pane.fade {\\n  transition: opacity 0.15s linear;\\n}\\n\\n/*--navtab--*/\\n\\n/*-- modalFields --*/\\n\\n._500plugins_widget #modalFields {\\n  padding: 0 20px;\\n}\\n\\n._500plugins_widget #modalFields .form-group {\\n  margin-bottom: 20px !important;\\n}\\n\\n._500plugins_widget #modalFields .form-group label {\\n  display: inline-block !important;\\n  margin-bottom: 0.4rem !important;\\n  font-size: 14px !important;\\n  color: #909090 !important;\\n}\\n\\n._500plugins_widget #modalFields button {\\n  min-width: 110px;\\n  border-radius: 2px !important;\\n  color: #4d5156;\\n  border-color: transparent;\\n  background: #eff1f5;\\n  cursor: pointer;\\n}\\n\\n._500plugins_widget #modalFields .addbtn {\\n  background-color: #1556e6 !important;\\n  border: 1px solid #1556e6 !important;\\n  color: #fff !important;\\n  margin-left: 15px;\\n}\\n\\n._500plugins_widget #modalFields .cancelbtn {\\n  border: 1px solid #eff1f5 !important;\\n  background: #eff1f5 !important;\\n}\\n\\n._500plugins_widget .instll-btn-sec {\\n  display: flex;\\n  align-items: center;\\n  justify-content: flex-end;\\n  margin-top: 30px !important;\\n}\\n\\n._500plugins_widget #modalFields .formsec {\\n  width: 100%;\\n  padding: 0 !important;\\n  margin: 0 !important;\\n}\\n\\n._500plugins_widget #modalFields .ml4 {\\n  margin-left: 1.5rem !important;\\n}\\n\\n._500plugins_widget  #modalFields .mb2 {\\n  margin-bottom: 0.5rem !important;\\n}\\n\\n._500plugins_widget #modalFields .mt3 {\\n  margin-top: 1rem !important;\\n}\\n\\n/*-- modalFields --*/\\n\\n/*-- card --*/\\n\\n._500plugins_widget .appdata {\\n  padding: 15px 15px !important;\\n}\\n\\n._500plugins_widget .installbtn {\\n  text-align: center !important;\\n  margin: 0 auto !important;\\n}\\n\\n._500plugins_widget .appdata .cardfooter {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n/* .cardrow .col4{\\npadding: 0 8px;\\n} */\\n\\n._500plugins_widget .cardrow p {\\n  margin: 0 !important;\\n}\\n\\n._500plugins_widget .checkWidgetData {\\n  padding: 6px 3px 2px 1px;\\n}\\n\\n._500plugins_widget .card,\\n._500plugins_widget .checkWidgetData .card {\\n  position: relative !important;\\n  display: -ms-flexbox !important;\\n  display: flex !important;\\n  -ms-flex-direction: column !important;\\n  flex-direction: column !important;\\n  min-width: 0 !important;\\n  word-wrap: break-word !important;\\n  background-color: #fff !important;\\n  background-clip: border-box !important;\\n  border: 1px solid #E3EBF6;\\n  border-radius: 4px !important;\\n  margin-bottom: 0 !important;\\n}\\n\\n._500plugins_widget .card:hover {\\n  -webkit-box-shadow: 0px 15px 10px -15px rgba(0, 0, 0, 0.15) !important;\\n  box-shadow: 0px 15px 10px -15px rgba(0, 0, 0, 0.15) !important;\\n}\\n\\n._500plugins_widget .cardheader:first-child,\\n._500plugins_widget .checkWidgetData .cardheader:first-child {\\n  border-radius: calc(4px - 1px) calc(4px - 1px) 0 0;\\n}\\n\\n._500plugins_widget .cardheader,\\n._500plugins_widget .checkWidgetData .cardheader {\\n  background-color: transparent !important;\\n  padding: 10px !important;\\n  /* padding-top: 1rem !important;\\npadding-bottom: 0px !important;\\nheight: 70px; */\\n  border: none !important;\\n  margin-bottom: 0;\\n  color: inherit;\\n}\\n\\n._500plugins_widget .cardbody,\\n._500plugins_widget .checkWidgetData .cardbody {\\n  -ms-flex: 1 1 auto !important;\\n  flex: 1 1 auto !important;\\n  font-size: 12.8px;\\n  font-weight: 400;\\n  /* color: #4D5156; */\\n  /* color: #cccccc; */\\n  color: #ececec;\\n  border: 0 !important;\\n  padding-left: 1rem !important;\\n  padding-bottom: 1rem !important;\\n  padding-right: 1rem !important;\\n}\\n\\n._500plugins_widget .cardbody h5 {\\n  font-size: 16.5px !important;\\n  color: #252552 !important;\\n}\\n._500plugins_widget .checkWidgetData .cardbody h5 {\\n  font-size: 18.4px !important;\\n  color: #02033e !important;\\n}\\n\\n._500plugins_widget .checkWidgetData .cardbody h5,\\n._500plugins_widget .cardbody h5 {\\n  line-height: 1.2 !important;\\n  margin-top: 0.6rem !important;\\n  font-weight: 500 !important;\\n font-family: \\\"Cerebri Sans\\\", sans-serif;\\n}\\n\\n/* .collapseheader {\\n\\tmargin-bottom: -10px !important;\\n} */\\n\\n._500plugins_widget .texttruncate {\\n  overflow: hidden !important;\\n  text-overflow: ellipsis !important;\\n  white-space: nowrap !important;\\n  text-transform: capitalize !important;\\n}\\n\\n._500plugins_widget .nav-tabs .nav-item.texttruncate {\\n  max-width: 8ch;\\n}\\n\\n._500plugins_widget .cardfooter,\\n.checkWidgetData .cardfooter {\\n  padding: 0.15rem 0.35rem !important;\\n  background-color: transparent !important;\\n  border-radius: 0 0 calc(4px - 1px) calc(4px - 1px);\\n  padding: 0px !important;\\n  background-color: transparent !important;\\n  border-top: 1px solid #0000000d;\\n}\\n\\n._500plugins_widget .cardfooter .btn,\\n._500plugins_widget .checkWidgetData .cardfooter .btn {\\n  font-size: 14px !important;\\n  color: #1556e6 !important;\\n  background: transparent;\\n  cursor: pointer !important;\\n font-family: \\\"Cerebri Sans\\\", sans-serif;\\n}\\n._500plugins_widget .cardfooter .btn {\\n  padding: 13px !important;\\n}\\n\\n._500plugins_widget .checkWidgetData .cardfooter {\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n/*--end --*/\\n\\n/*-- modal--*/\\n\\n._500plugins_widget .modal {\\n  position: fixed !important;\\n  top: 0 !important;\\n  left: 0 !important;\\n  z-index: 1050 !important;\\n  display: none;\\n  width: 100% !important;\\n  height: 100% !important;\\n  overflow: auto;\\n  outline: 0;\\n  background-color: rgb(0, 0, 0) !important;\\n  background-color: rgba(0, 0, 0, 0.4) !important;\\n  text-align: left;\\n}\\n\\n/* Modal Content */\\n\\n._500plugins_widget .modal-content {\\n  position: relative;\\n  background-color: #fefefe;\\n  margin: auto;\\n  padding: 0;\\n  border: 1px solid #888;\\n  width: 80%;\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  -webkit-animation-name: animatetop;\\n  -webkit-animation-duration: 0.4s;\\n  animation-name: animatetop;\\n  animation-duration: 0.4s;\\n}\\n\\n/* Add Animation */\\n\\n@-webkit-keyframes animatetop {\\n  from {\\n    top: -300px;\\n    opacity: 0;\\n  }\\n  to {\\n    top: 0;\\n    opacity: 1;\\n  }\\n}\\n\\n@keyframes animatetop {\\n  from {\\n    top: -300px;\\n    opacity: 0;\\n  }\\n  to {\\n    top: 0;\\n    opacity: 1;\\n  }\\n}\\n\\n/* The Close Button */\\n\\n/* .close {\\ncolor: white;\\nfloat: right;\\nfont-size: 28px;\\nfont-weight: bold;\\n}\\n.close:hover,\\n.close:focus {\\ncolor: #000;\\ntext-decoration: none;\\ncursor: pointer;\\n} */\\n\\n/* .modal-header {\\npadding: 2px 16px;\\nbackground-color: #5cb85c;\\ncolor: white;\\n} */\\n\\n._500plugins_widget .modal-body {\\n  padding: 2px 16px;\\n}\\n\\n._500plugins_widget .modal-footer {\\n  padding: 2px 16px;\\n  color: white;\\n}\\n\\n/*--end here--*/\\n\\n._500plugins_widget .close {\\n  cursor: pointer;\\n}\\n\\n._500plugins_widget #user_name,\\n._500plugins_widget #email {\\n  margin: 0 auto;\\n}\\n\\n._500plugins_widget .close:hover {\\n  color: #000;\\n  text-decoration: none;\\n}\\n\\n._500plugins_widget .modal-open .modal {\\n  overflow-x: hidden;\\n  overflow-y: auto;\\n}\\n\\n._500plugins_widget .modal-dialog {\\n  position: relative;\\n  width: auto;\\n  pointer-events: none;\\n  min-height: calc(100% - (2rem * 2));\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n}\\n\\n._500plugins_widget .modal.show .modal-dialog {\\n  -webkit-transform: none;\\n  transform: none;\\n}\\n\\n._500plugins_widget .modal-content {\\n  position: relative;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -ms-flex-direction: column;\\n  flex-direction: column;\\n  width: 100%;\\n  pointer-events: auto;\\n  background-color: #fff;\\n  background-clip: padding-box;\\n  border: 1px solid rgba(0, 0, 0, 0.2);\\n  border-radius: 6px;\\n  outline: 0;\\n  padding: 14px !important;\\n}\\n\\n._500plugins_widget button.close {\\n  padding: 0;\\n  background-color: transparent;\\n  border: 0;\\n  font-size: 26px;\\n  outline: none;\\n  opacity: 0.4;\\n  position: absolute;\\n  right: 10px;\\n}\\n\\n._500plugins_widget button.close span {\\n  padding: 15px 20px !important;\\n}\\n\\n._500plugins_widget button.close:hover {\\n  opacity: 0.6;\\n}\\n\\n._500plugins_widget .modal-body {\\n  position: relative;\\n  -ms-flex: 1 1 auto;\\n  flex: 1 1 auto;\\n  padding: 1rem;\\n}\\n\\n@media (min-width: 576px) {\\n  ._500plugins_widget .modal-dialog {\\n    max-width: 500px;\\n    margin: 30px auto;\\n  }\\n}\\n\\n@media (min-width: 992px) {\\n  ._500plugins_widget .custommodal .modal-dialog {\\n    max-width: 800px !important;\\n  }\\n  ._500plugins_widget .nodata p {\\n    font-size: 16px;\\n    width: 40%;\\n    margin: 0 auto;\\n  }\\n}\\n\\n/* @media (min-width: 1200px){\\n.custommodal .modal-dialog {\\nmax-width: 1140px;\\n}\\n} */\\n\\n/*--end--*/\\n\\n._500plugins_widget .modalcards {\\n  height: 275px;\\n  overflow-x: auto;\\n}\\n\\n._500plugins_widget {\\n  position: fixed !important;\\n  height: 100vh;\\n  padding: 0;\\n  margin: 0;\\n  z-index: 10000;\\n  background-color: #fff;\\n  border-left: 1px solid #E3EBF6;\\n  /* -webkit-box-shadow: -4px 0px 10px 1px rgba(0, 0, 0, 0.15) !important;\\n  box-shadow: 0px 6px 12px 2px rgba(0, 0, 0, 0.1) !important; */\\n  border-right: 1px solid #E3EBF6;\\n  max-width: inherit;\\n  width: 100% !important;\\n  right: 0 !important;\\n  top: 0;\\n}\\n\\n._500plugins_widget .widget-footer {\\n  position: fixed;\\n  bottom: 0;\\n  text-align: center;\\n  border-top: 1px solid #ececec;\\n  width: 100%;\\n  max-width: unset;\\n}\\n\\n._500plugins_widget .widget-footer-inner {\\n  background: #f3f3f3;\\n  padding: 15px;\\n  font-size: 12px;\\n  text-align: left;\\n  color: #6c757d;\\n}\\n\\n._500plugins_widget .widget-footer a {\\n  color: #2C7BE5;\\n}\\n\\n._500plugins_widget #config_widget {\\n  padding: 6px 10px;\\n}\\n\\n._500plugins_widget .checkWidgetData .content-card:hover {\\n  box-shadow: none !important;\\n}\\n\\n._500plugins_widget .modalcards .cardheader {\\n  padding: 1rem !important;\\n}\\n\\n._500plugins_widget .content-card .cardheader {\\n  padding: 10px 10px 10px 15px !important;\\n}\\n\\n._500plugins_widget .custom-content {\\n  overflow-y: auto !important;\\n  max-height: 80vh !important;\\n  padding: 0.5rem 0.75rem 0.75rem 0.75rem !important;\\n  font-size: 16px;\\n  text-align: left;\\n}\\n\\n._500plugins_widget .accordian-icon {\\n  float: right !important;\\n  margin-top: 4px !important;\\n  opacity: 0.3 !important;\\n}\\n\\n._500plugins_widget .rotate-icon {\\n  transform: rotate(90deg) !important;\\n}\\n\\n._500plugins_widget .tgltabs {\\n  margin: 0 !important;\\n}\\n\\n._500plugins_widget .plr-05 {\\n  padding-right: 8px !important;\\n  padding-left: 8px !important;\\n}\\n\\n._500plugins_widget .cardlink {\\n  cursor: pointer !important;\\n}\\n\\n._500plugins_widget .card1 {\\n  padding: 10px !important;\\n}\\n\\n._500plugins_widget .modalcards .cardbody {\\n  padding: 0px 18px 15px 18px !important;\\n  text-align: left;\\n}\\n\\n._500plugins_widget .modalcards .cardheader {\\n  padding: 18px !important;\\n  justify-content: flex-start;\\n  display: flex;\\n}\\n\\n._500plugins_widget .modalcards .cardbody h5 {\\n  margin-top: 0rem !important;\\n}\\n\\n._500plugins_widget .modalcards .cardbody p {\\n  color: rgba(0, 0, 0, 0.5) !important;\\n}\\n\\n._500plugins_widget .custom-modal-tab .tab-pane {\\n  padding-top: 0px !important;\\n  display: none !important;\\n  opacity: 1 !important;\\n}\\n\\n._500plugins_widget .modalcards .cardfooter {\\n  padding: 0px 8px !important;\\n}\\n\\n._500plugins_widget .mt-5p {\\n  margin-top: 5px !important;\\n}\\n\\n._500plugins_widget .user-appname {\\n  vertical-align: middle !important;\\n}\\n\\n._500plugins_widget .nav-item-size {\\n  font-size: 12.5px !important;\\n}\\n\\n._500plugins_widget .error-message {\\n  color: #dc3545 !important;\\n  font-size: 13px;\\n font-family: \\\"Cerebri Sans\\\", sans-serif;\\n  padding-bottom: 0px;\\n}\\n\\n._500plugins_widget .custom-card {\\n  color: #6c757d;\\n}\\n\\n/* new code here  */\\n\\n._500plugins_widget .elipses {\\n  display: -webkit-box;\\n  -webkit-line-clamp: 3;\\n  -webkit-box-orient: vertical;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  height: 60px;\\n  line-height: 1.5 !important;\\n  text-align: left;\\n  font-size: 13px;\\n font-family: \\\"Cerebri Sans\\\", sans-serif;\\n}\\n\\n._500plugins_widget .w-50 {\\n  width: 50%;\\n}\\n\\n._500plugins_widget #widgetApp {\\n  width: 100%;\\n  margin-top: 10px;\\n}\\n\\n._500plugins_widget .reload-icon {\\n  font-size: 11.5px;\\n  margin-left: 10px;\\n  cursor: pointer;\\n  /* display: flex; */\\n  margin-top: 3px;\\n  margin-left: 11px;\\n}\\n\\n/* ._500plugins_widget .mt-5p {\\n\\tmargin-top: 5px !important;\\n} */\\n\\n._500plugins_widget .label-head .textleft {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n._500plugins_widget .modal-dialog {\\n  position: relative;\\n  width: auto;\\n  pointer-events: none;\\n  min-height: calc(100% - (2rem * 2));\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-align: center;\\n  -ms-flex-align: center;\\n  align-items: center;\\n}\\n\\n._500plugins_widget .widget-app-logo {\\n  width: 38px;\\n  border-radius: 20px;\\n  height: 38px;\\n  margin-right: 10px;\\n  vertical-align: middle;\\n}\\n\\n._500plugins_widget .widget-app-text {\\n  font-size: 18px;\\n}\\n\\n._500plugins_widget .widget-shield {\\n  font-size: 12px;\\n  color: #24b314 !important;\\n}\\n\\n._500plugins_widget .modalcards .cardfooter .plugin-btn {\\n  width: 50%;\\n}\\n\\n._500plugins_widget .plugin-btn-delete {\\n  color: #4d5156;\\n}\\n._500plugins_widget .plugin-btn-delete:hover {\\n  color: #0f3ca0 !important;\\n}\\n\\n._500plugins_widget .border-right {\\n  border-right: 1px solid #0000000d !important;\\n}\\n._500plugins_widget .mt-10p {\\n  margin-top: 10px;\\n}\\n\\n._500plugins_widget .checkWidgetData:last-child {\\n  margin-bottom: 32px;\\n}\\n\\n._500plugins_widget .modal .container {\\n  width: 100% !important;\\n  padding: 10px 0 !important;\\n}\\n._500plugins_widget .active {\\n  background: none;\\n}\\n._500plugins_widget .custom-modal-tab .modalcards .cardfooter {\\n  padding: 0px !important;\\n}\\n._500plugins_widget .cardfooter .plugin-btn-delete {\\n  color: #4d5156 !important;\\n}\\n._500plugins_widget .cardfooter .plugin-btn-delete:hover {\\n  color: #1556e6 !important;\\n}\\n._500plugins_widget .widget-app-text {\\n  font-size: 18px;\\n  display: flex;\\n  align-items: center;\\n  place-content: center;\\n  margin-top: 15px;\\n}\\n\\n._500plugins_widget .custom-content {\\n  max-height: calc(100vh - 125px) !important;\\n}\\n._500plugins_widget .widget-shield {\\n  font-size: 12px;\\n  color: #24b314 !important;\\n}\\n._500plugins_widget .widget-app-text {\\n  display: inline-block !important;\\n}\\n.minimize-widget {\\n  bottom: 0 !important;\\n  top: unset !important;\\n  height: unset !important;\\n  border-top-left-radius: 5px;\\n  border-top-right-radius: 5px;\\n}\\n.minimize-widget .widget-footer {\\n  display: none !important;\\n}\\n.minimize-widget .custom-content {\\n  display: none !important;\\n}\\n._500plugins_widget .widget-shield {\\n  font-size: 12px;\\n  color: #24b314 !important;\\n  position: relative;\\n}\\n._500plugins_widget .widget-shield .fa-shield-check {\\n  position: absolute;\\n  font-size: 12px;\\n  right: -19px;\\n  top: -2px;\\n  color: #24b314 !important;\\n}\\n._500plugins_widget .minimize-widget .label-head {\\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  border-top-left-radius: 5px;\\n  border-top-right-radius: 5px;\\n}\\n._500plugins_widget #widget-icons{\\n  justify-content: end;\\n  padding-right: 3px !important;\\n}\\n._500plugins_widget .minimize-widget .hide-widget-icons {\\n  display: none;\\n}\\n._500plugins_widget #maximize-widget {\\n  margin-left: auto;\\n}\\n._500plugins_widget .widget-powered-text {\\n  display: none;\\n}\\n._500plugins_widget .minimize-widget .widget-powered-text {\\n  font-size: 10px;\\n  display: flex !important;\\n  margin-left: 15px;\\n  margin-top: 9px;\\n  color: #6c757d !important;\\n}\\n._500plugins_widget .minimize-widget .powered-bold-text {\\n  font-weight: 500;\\n  color: #5555f9;\\n  margin-left: 3px;\\n  font-size: 11px;\\n}\\n\\n._500plugins_widget .my6 {\\n  margin-top: 4rem !important;\\n  margin-bottom: 4rem !important;\\n}\\n\\n._500plugins_widget .gmail .card {\\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.09) !important;\\n  transition: 0.3s;\\n  width: 100%;\\n}\\n\\n._500plugins_widget .gmail .card:hover {\\n  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2) !important;\\n}\\n\\n._500plugins_widget .gmail .container {\\n  padding: 10px 16px;\\n}\\n\\n._500plugins_widget .gmail .ml {\\n  margin-left: 10px;\\n}\\n\\n._500plugins_widget .gmail .mt {\\n  margin-top: 6px;\\n}\\n\\n._500plugins_widget .gmail .mx{\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n._500plugins_widget .minimize-widget ._500plugins_widget {\\n  bottom: 0 !important;\\n  top: unset;\\n  height: unset;\\n}\\n._500plugins_widget .gmail .gmail-subject{\\n  color: #555 !important;\\n}\\n._500plugins_widget .gmail .gmail-date{\\n  font-size: 12px !important;\\n  margin-top: 3px !important;\\n}\\n._500plugins_widget .file_picker.border-bottom {\\n  border-bottom: 1px solid #ced4da;\\n}\\n\\n._500plugins_widget .center {\\n  justify-content: center;\\n  display: flex;\\n}\\n\\n._500plugins_widget .input-group-append {\\n  display:flex;\\n  align-items:center;\\n}\\n._500plugins_widget .input-group-text {\\n  display: flex;\\n  align-items: center;\\n  font-weight: 400;\\n  height: 42px;\\n  color: #495057;\\n  padding: 5px 15px 5px;\\n  text-align: center;\\n  white-space: nowrap;\\n  border: 1px solid #ced4da;\\n  border-left: none;\\n  background: #f4f4f5;\\n  border-top-right-radius: 4px !important;\\n  border-bottom-right-radius: 4px !important;\\n}\\n._500plugins_widget .input-group {\\n  display: flex;\\n}\\n._500plugins_widget  .form-input-append{\\n  border-top-right-radius: 0 !important;\\n  border-bottom-right-radius: 0 !important;\\n}\\n._500plugins_widget  .spinner-button.loading {\\n  background-color: #CCC;\\n  padding-right: 40px;\\n}\\n._500plugins_widget  .spinner-button.loading:after {\\n  content: \\\"\\\";\\n  position: absolute;\\n  border-radius: 100%;\\n  right: 6px;\\n  top: 50%;\\n  width: 0px;\\n  height: 0px;\\n  margin-top: -2px;\\n  border: 2px solid rgba(255,255,255,0.5);\\n  border-left-color: #FFF;\\n  border-top-color: #FFF;\\n  animation: spin .6s infinite linear, grow .3s forwards ease-out;\\n}\\n@keyframes spin {\\n  to {\\n      transform: rotate(359deg);\\n  }\\n}\\n@keyframes grow {\\n  to {\\n      width: 14px;\\n      height: 14px;\\n      margin-top: -8px;\\n      right: 13px;\\n  }\\n}\\n._500plugins_widget  .position-relative{\\nposition: relative;\\n}\\n\\n._500plugins_widget ._500apps_plugin_google_onetap{\\n\\twidth: 410px;\\n  height: 100%;\\n  position: fixed;\\n  top: 0;\\n  right: 0;\\n  border: none;\\n}\\n._500plugins_widget .custom-form-select {\\n  -webkit-appearance: none;\\n  -moz-appearance: none;\\n  background: transparent;\\n  background-image: url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='22' height='22' viewBox='0 0 24 24' fill='none' stroke='gray' stroke-width='1' stroke-linecap='round' stroke-linejoin='round' class='feather feather-chevron-down'%3E%3Cpolyline points='6 9 12 15 18 9'/%3E%3C/svg%3E\\\");\\n  background-repeat: no-repeat;\\n  background-position-x: 98%;\\n  background-position-y: 8px;\\n  border: 1px solid #dfdfdf;\\n  border-radius: 4px;\\n  height: 42px;\\n  padding: 5px 10px;\\n}\\n\\n._500plugins_widget label {\\n  color: #12263F !important;\\n}\\n.options-icon{\\n  color: #95AAC9 !important;\\n}\\n.options-icon:hover{\\n  color: #2C7BE5 !important;\\n}\\n._500plugins_widget .custommodal .modal-content{\\npadding: 15px !important;\\n}\\n._500plugins_widget .tooltip {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n._500plugins_widget .tooltip .tooltiptext {\\n  visibility: hidden;\\n  width: 300px;\\n  background-color:#dce1e6;\\n  color:#222;\\n  text-align: center;\\n  border-radius: 6px;\\n  padding: 5px 0;\\n\\n  /* Position the tooltip */\\n  position: absolute;\\n  z-index: 1;\\n}\\n\\n._500plugins_widget .tooltip:hover .tooltiptext {\\n  visibility: visible;\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://unified-sso/./src/widget/widget.css?./node_modules/css-loader/dist/cjs.js");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\n// eslint-disable-next-line func-names\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = cssWithMappingToString(item);\n\n      if (item[2]) {\n        return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n  // eslint-disable-next-line func-names\n\n\n  list.i = function (modules, mediaQuery, dedupe) {\n    if (typeof modules === \"string\") {\n      // eslint-disable-next-line no-param-reassign\n      modules = [[null, modules, \"\"]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var i = 0; i < this.length; i++) {\n        // eslint-disable-next-line prefer-destructuring\n        var id = this[i][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _i = 0; _i < modules.length; _i++) {\n      var item = [].concat(modules[_i]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        // eslint-disable-next-line no-continue\n        continue;\n      }\n\n      if (mediaQuery) {\n        if (!item[2]) {\n          item[2] = mediaQuery;\n        } else {\n          item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};\n\n//# sourceURL=webpack://unified-sso/./node_modules/css-loader/dist/runtime/api.js?");

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/getUrl.js":
/*!********************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/getUrl.js ***!
  \********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = url && url.__esModule ? url.default : url;\n\n  if (typeof url !== \"string\") {\n    return url;\n  } // If url is already wrapped in quotes, remove them\n\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    // eslint-disable-next-line no-param-reassign\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};\n\n//# sourceURL=webpack://unified-sso/./node_modules/css-loader/dist/runtime/getUrl.js?");

/***/ }),

/***/ "./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js":
/*!**********************************************************************!*\
  !*** ./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar GetIntrinsic = __webpack_require__(/*! get-intrinsic */ \"./node_modules/es-abstract/node_modules/get-intrinsic/index.js\");\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js?");

/***/ }),

/***/ "./node_modules/es-abstract/node_modules/get-intrinsic/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/es-abstract/node_modules/get-intrinsic/index.js ***!
  \**********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = __webpack_require__(/*! has-symbols */ \"./node_modules/es-abstract/node_modules/has-symbols/index.js\")();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\nvar hasOwn = __webpack_require__(/*! has */ \"./node_modules/has/src/index.js\");\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/es-abstract/node_modules/get-intrinsic/index.js?");

/***/ }),

/***/ "./node_modules/es-abstract/node_modules/has-symbols/index.js":
/*!********************************************************************!*\
  !*** ./node_modules/es-abstract/node_modules/has-symbols/index.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = __webpack_require__(/*! ./shams */ \"./node_modules/es-abstract/node_modules/has-symbols/shams.js\");\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/es-abstract/node_modules/has-symbols/index.js?");

/***/ }),

/***/ "./node_modules/es-abstract/node_modules/has-symbols/shams.js":
/*!********************************************************************!*\
  !*** ./node_modules/es-abstract/node_modules/has-symbols/shams.js ***!
  \********************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/es-abstract/node_modules/has-symbols/shams.js?");

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/***/ ((module) => {

"use strict";
eval("// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/events/events.js?");

/***/ }),

/***/ "./src/widget/feather/fonts/Feather.svg?sdxovp":
/*!*****************************************************!*\
  !*** ./src/widget/feather/fonts/Feather.svg?sdxovp ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"d3530016d388784bc97a9cbb99f989c3.svg\");\n\n//# sourceURL=webpack://unified-sso/./src/widget/feather/fonts/Feather.svg?");

/***/ }),

/***/ "./node_modules/foreach/index.js":
/*!***************************************!*\
  !*** ./node_modules/foreach/index.js ***!
  \***************************************/
/***/ ((module) => {

eval("\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/foreach/index.js?");

/***/ }),

/***/ "./node_modules/function-bind/implementation.js":
/*!******************************************************!*\
  !*** ./node_modules/function-bind/implementation.js ***!
  \******************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/function-bind/implementation.js?");

/***/ }),

/***/ "./node_modules/function-bind/index.js":
/*!*********************************************!*\
  !*** ./node_modules/function-bind/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar implementation = __webpack_require__(/*! ./implementation */ \"./node_modules/function-bind/implementation.js\");\n\nmodule.exports = Function.prototype.bind || implementation;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/function-bind/index.js?");

/***/ }),

/***/ "./node_modules/get-intrinsic/index.js":
/*!*********************************************!*\
  !*** ./node_modules/get-intrinsic/index.js ***!
  \*********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\n/* globals\n\tAggregateError,\n\tSharedArrayBuffer,\n*/\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = __webpack_require__(/*! has-symbols */ \"./node_modules/has-symbols/index.js\")();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\nvar hasOwn = __webpack_require__(/*! has */ \"./node_modules/has/src/index.js\");\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/get-intrinsic/index.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars.js":
/*!********************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars.js ***!
  \********************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _handlebarsRuntime = __webpack_require__(/*! ./handlebars.runtime */ \"./node_modules/handlebars/dist/cjs/handlebars.runtime.js\");\n\nvar _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);\n\n// Compiler imports\n\nvar _handlebarsCompilerAst = __webpack_require__(/*! ./handlebars/compiler/ast */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js\");\n\nvar _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);\n\nvar _handlebarsCompilerBase = __webpack_require__(/*! ./handlebars/compiler/base */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/base.js\");\n\nvar _handlebarsCompilerCompiler = __webpack_require__(/*! ./handlebars/compiler/compiler */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js\");\n\nvar _handlebarsCompilerJavascriptCompiler = __webpack_require__(/*! ./handlebars/compiler/javascript-compiler */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js\");\n\nvar _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);\n\nvar _handlebarsCompilerVisitor = __webpack_require__(/*! ./handlebars/compiler/visitor */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js\");\n\nvar _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);\n\nvar _handlebarsNoConflict = __webpack_require__(/*! ./handlebars/no-conflict */ \"./node_modules/handlebars/dist/cjs/handlebars/no-conflict.js\");\n\nvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\nvar _create = _handlebarsRuntime2['default'].create;\nfunction create() {\n  var hb = _create();\n\n  hb.compile = function (input, options) {\n    return _handlebarsCompilerCompiler.compile(input, options, hb);\n  };\n  hb.precompile = function (input, options) {\n    return _handlebarsCompilerCompiler.precompile(input, options, hb);\n  };\n\n  hb.AST = _handlebarsCompilerAst2['default'];\n  hb.Compiler = _handlebarsCompilerCompiler.Compiler;\n  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];\n  hb.Parser = _handlebarsCompilerBase.parser;\n  hb.parse = _handlebarsCompilerBase.parse;\n  hb.parseWithoutProcessing = _handlebarsCompilerBase.parseWithoutProcessing;\n\n  return hb;\n}\n\nvar inst = create();\ninst.create = create;\n\n_handlebarsNoConflict2['default'](inst);\n\ninst.Visitor = _handlebarsCompilerVisitor2['default'];\n\ninst['default'] = inst;\n\nexports.default = inst;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7aUNBQW9CLHNCQUFzQjs7Ozs7O3FDQUcxQiwyQkFBMkI7Ozs7c0NBS3BDLDRCQUE0Qjs7MENBQ1csZ0NBQWdDOztvREFDL0MsMkNBQTJDOzs7O3lDQUN0RCwrQkFBK0I7Ozs7b0NBRTVCLDBCQUEwQjs7OztBQUVqRCxJQUFJLE9BQU8sR0FBRywrQkFBUSxNQUFNLENBQUM7QUFDN0IsU0FBUyxNQUFNLEdBQUc7QUFDaEIsTUFBSSxFQUFFLEdBQUcsT0FBTyxFQUFFLENBQUM7O0FBRW5CLElBQUUsQ0FBQyxPQUFPLEdBQUcsVUFBUyxLQUFLLEVBQUUsT0FBTyxFQUFFO0FBQ3BDLFdBQU8sb0NBQVEsS0FBSyxFQUFFLE9BQU8sRUFBRSxFQUFFLENBQUMsQ0FBQztHQUNwQyxDQUFDO0FBQ0YsSUFBRSxDQUFDLFVBQVUsR0FBRyxVQUFTLEtBQUssRUFBRSxPQUFPLEVBQUU7QUFDdkMsV0FBTyx1Q0FBVyxLQUFLLEVBQUUsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDO0dBQ3ZDLENBQUM7O0FBRUYsSUFBRSxDQUFDLEdBQUcscUNBQU0sQ0FBQztBQUNiLElBQUUsQ0FBQyxRQUFRLHVDQUFXLENBQUM7QUFDdkIsSUFBRSxDQUFDLGtCQUFrQixvREFBcUIsQ0FBQztBQUMzQyxJQUFFLENBQUMsTUFBTSxpQ0FBUyxDQUFDO0FBQ25CLElBQUUsQ0FBQyxLQUFLLGdDQUFRLENBQUM7QUFDakIsSUFBRSxDQUFDLHNCQUFzQixpREFBeUIsQ0FBQzs7QUFFbkQsU0FBTyxFQUFFLENBQUM7Q0FDWDs7QUFFRCxJQUFJLElBQUksR0FBRyxNQUFNLEVBQUUsQ0FBQztBQUNwQixJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQzs7QUFFckIsa0NBQVcsSUFBSSxDQUFDLENBQUM7O0FBRWpCLElBQUksQ0FBQyxPQUFPLHlDQUFVLENBQUM7O0FBRXZCLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxJQUFJLENBQUM7O3FCQUVSLElBQUkiLCJmaWxlIjoiaGFuZGxlYmFycy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBydW50aW1lIGZyb20gJy4vaGFuZGxlYmFycy5ydW50aW1lJztcblxuLy8gQ29tcGlsZXIgaW1wb3J0c1xuaW1wb3J0IEFTVCBmcm9tICcuL2hhbmRsZWJhcnMvY29tcGlsZXIvYXN0JztcbmltcG9ydCB7XG4gIHBhcnNlciBhcyBQYXJzZXIsXG4gIHBhcnNlLFxuICBwYXJzZVdpdGhvdXRQcm9jZXNzaW5nXG59IGZyb20gJy4vaGFuZGxlYmFycy9jb21waWxlci9iYXNlJztcbmltcG9ydCB7IENvbXBpbGVyLCBjb21waWxlLCBwcmVjb21waWxlIH0gZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2NvbXBpbGVyJztcbmltcG9ydCBKYXZhU2NyaXB0Q29tcGlsZXIgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL2phdmFzY3JpcHQtY29tcGlsZXInO1xuaW1wb3J0IFZpc2l0b3IgZnJvbSAnLi9oYW5kbGViYXJzL2NvbXBpbGVyL3Zpc2l0b3InO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG5sZXQgX2NyZWF0ZSA9IHJ1bnRpbWUuY3JlYXRlO1xuZnVuY3Rpb24gY3JlYXRlKCkge1xuICBsZXQgaGIgPSBfY3JlYXRlKCk7XG5cbiAgaGIuY29tcGlsZSA9IGZ1bmN0aW9uKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIGNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcbiAgaGIucHJlY29tcGlsZSA9IGZ1bmN0aW9uKGlucHV0LCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIHByZWNvbXBpbGUoaW5wdXQsIG9wdGlvbnMsIGhiKTtcbiAgfTtcblxuICBoYi5BU1QgPSBBU1Q7XG4gIGhiLkNvbXBpbGVyID0gQ29tcGlsZXI7XG4gIGhiLkphdmFTY3JpcHRDb21waWxlciA9IEphdmFTY3JpcHRDb21waWxlcjtcbiAgaGIuUGFyc2VyID0gUGFyc2VyO1xuICBoYi5wYXJzZSA9IHBhcnNlO1xuICBoYi5wYXJzZVdpdGhvdXRQcm9jZXNzaW5nID0gcGFyc2VXaXRob3V0UHJvY2Vzc2luZztcblxuICByZXR1cm4gaGI7XG59XG5cbmxldCBpbnN0ID0gY3JlYXRlKCk7XG5pbnN0LmNyZWF0ZSA9IGNyZWF0ZTtcblxubm9Db25mbGljdChpbnN0KTtcblxuaW5zdC5WaXNpdG9yID0gVmlzaXRvcjtcblxuaW5zdFsnZGVmYXVsdCddID0gaW5zdDtcblxuZXhwb3J0IGRlZmF1bHQgaW5zdDtcbiJdfQ==\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars.runtime.js":
/*!****************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars.runtime.js ***!
  \****************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _handlebarsBase = __webpack_require__(/*! ./handlebars/base */ \"./node_modules/handlebars/dist/cjs/handlebars/base.js\");\n\nvar base = _interopRequireWildcard(_handlebarsBase);\n\n// Each of these augment the Handlebars object. No need to setup here.\n// (This is done to easily share code between commonjs and browse envs)\n\nvar _handlebarsSafeString = __webpack_require__(/*! ./handlebars/safe-string */ \"./node_modules/handlebars/dist/cjs/handlebars/safe-string.js\");\n\nvar _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);\n\nvar _handlebarsException = __webpack_require__(/*! ./handlebars/exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _handlebarsException2 = _interopRequireDefault(_handlebarsException);\n\nvar _handlebarsUtils = __webpack_require__(/*! ./handlebars/utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nvar Utils = _interopRequireWildcard(_handlebarsUtils);\n\nvar _handlebarsRuntime = __webpack_require__(/*! ./handlebars/runtime */ \"./node_modules/handlebars/dist/cjs/handlebars/runtime.js\");\n\nvar runtime = _interopRequireWildcard(_handlebarsRuntime);\n\nvar _handlebarsNoConflict = __webpack_require__(/*! ./handlebars/no-conflict */ \"./node_modules/handlebars/dist/cjs/handlebars/no-conflict.js\");\n\nvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\n// For compatibility and usage outside of module systems, make the Handlebars object a namespace\nfunction create() {\n  var hb = new base.HandlebarsEnvironment();\n\n  Utils.extend(hb, base);\n  hb.SafeString = _handlebarsSafeString2['default'];\n  hb.Exception = _handlebarsException2['default'];\n  hb.Utils = Utils;\n  hb.escapeExpression = Utils.escapeExpression;\n\n  hb.VM = runtime;\n  hb.template = function (spec) {\n    return runtime.template(spec, hb);\n  };\n\n  return hb;\n}\n\nvar inst = create();\ninst.create = create;\n\n_handlebarsNoConflict2['default'](inst);\n\ninst['default'] = inst;\n\nexports.default = inst;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2xpYi9oYW5kbGViYXJzLnJ1bnRpbWUuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OEJBQXNCLG1CQUFtQjs7SUFBN0IsSUFBSTs7Ozs7b0NBSU8sMEJBQTBCOzs7O21DQUMzQix3QkFBd0I7Ozs7K0JBQ3ZCLG9CQUFvQjs7SUFBL0IsS0FBSzs7aUNBQ1Esc0JBQXNCOztJQUFuQyxPQUFPOztvQ0FFSSwwQkFBMEI7Ozs7O0FBR2pELFNBQVMsTUFBTSxHQUFHO0FBQ2hCLE1BQUksRUFBRSxHQUFHLElBQUksSUFBSSxDQUFDLHFCQUFxQixFQUFFLENBQUM7O0FBRTFDLE9BQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLElBQUksQ0FBQyxDQUFDO0FBQ3ZCLElBQUUsQ0FBQyxVQUFVLG9DQUFhLENBQUM7QUFDM0IsSUFBRSxDQUFDLFNBQVMsbUNBQVksQ0FBQztBQUN6QixJQUFFLENBQUMsS0FBSyxHQUFHLEtBQUssQ0FBQztBQUNqQixJQUFFLENBQUMsZ0JBQWdCLEdBQUcsS0FBSyxDQUFDLGdCQUFnQixDQUFDOztBQUU3QyxJQUFFLENBQUMsRUFBRSxHQUFHLE9BQU8sQ0FBQztBQUNoQixJQUFFLENBQUMsUUFBUSxHQUFHLFVBQVMsSUFBSSxFQUFFO0FBQzNCLFdBQU8sT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUM7R0FDbkMsQ0FBQzs7QUFFRixTQUFPLEVBQUUsQ0FBQztDQUNYOztBQUVELElBQUksSUFBSSxHQUFHLE1BQU0sRUFBRSxDQUFDO0FBQ3BCLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDOztBQUVyQixrQ0FBVyxJQUFJLENBQUMsQ0FBQzs7QUFFakIsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLElBQUksQ0FBQzs7cUJBRVIsSUFBSSIsImZpbGUiOiJoYW5kbGViYXJzLnJ1bnRpbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBiYXNlIGZyb20gJy4vaGFuZGxlYmFycy9iYXNlJztcblxuLy8gRWFjaCBvZiB0aGVzZSBhdWdtZW50IHRoZSBIYW5kbGViYXJzIG9iamVjdC4gTm8gbmVlZCB0byBzZXR1cCBoZXJlLlxuLy8gKFRoaXMgaXMgZG9uZSB0byBlYXNpbHkgc2hhcmUgY29kZSBiZXR3ZWVuIGNvbW1vbmpzIGFuZCBicm93c2UgZW52cylcbmltcG9ydCBTYWZlU3RyaW5nIGZyb20gJy4vaGFuZGxlYmFycy9zYWZlLXN0cmluZyc7XG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4vaGFuZGxlYmFycy9leGNlcHRpb24nO1xuaW1wb3J0ICogYXMgVXRpbHMgZnJvbSAnLi9oYW5kbGViYXJzL3V0aWxzJztcbmltcG9ydCAqIGFzIHJ1bnRpbWUgZnJvbSAnLi9oYW5kbGViYXJzL3J1bnRpbWUnO1xuXG5pbXBvcnQgbm9Db25mbGljdCBmcm9tICcuL2hhbmRsZWJhcnMvbm8tY29uZmxpY3QnO1xuXG4vLyBGb3IgY29tcGF0aWJpbGl0eSBhbmQgdXNhZ2Ugb3V0c2lkZSBvZiBtb2R1bGUgc3lzdGVtcywgbWFrZSB0aGUgSGFuZGxlYmFycyBvYmplY3QgYSBuYW1lc3BhY2VcbmZ1bmN0aW9uIGNyZWF0ZSgpIHtcbiAgbGV0IGhiID0gbmV3IGJhc2UuSGFuZGxlYmFyc0Vudmlyb25tZW50KCk7XG5cbiAgVXRpbHMuZXh0ZW5kKGhiLCBiYXNlKTtcbiAgaGIuU2FmZVN0cmluZyA9IFNhZmVTdHJpbmc7XG4gIGhiLkV4Y2VwdGlvbiA9IEV4Y2VwdGlvbjtcbiAgaGIuVXRpbHMgPSBVdGlscztcbiAgaGIuZXNjYXBlRXhwcmVzc2lvbiA9IFV0aWxzLmVzY2FwZUV4cHJlc3Npb247XG5cbiAgaGIuVk0gPSBydW50aW1lO1xuICBoYi50ZW1wbGF0ZSA9IGZ1bmN0aW9uKHNwZWMpIHtcbiAgICByZXR1cm4gcnVudGltZS50ZW1wbGF0ZShzcGVjLCBoYik7XG4gIH07XG5cbiAgcmV0dXJuIGhiO1xufVxuXG5sZXQgaW5zdCA9IGNyZWF0ZSgpO1xuaW5zdC5jcmVhdGUgPSBjcmVhdGU7XG5cbm5vQ29uZmxpY3QoaW5zdCk7XG5cbmluc3RbJ2RlZmF1bHQnXSA9IGluc3Q7XG5cbmV4cG9ydCBkZWZhdWx0IGluc3Q7XG4iXX0=\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars.runtime.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/base.js":
/*!*************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/base.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.HandlebarsEnvironment = HandlebarsEnvironment;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nvar _exception = __webpack_require__(/*! ./exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _helpers = __webpack_require__(/*! ./helpers */ \"./node_modules/handlebars/dist/cjs/handlebars/helpers.js\");\n\nvar _decorators = __webpack_require__(/*! ./decorators */ \"./node_modules/handlebars/dist/cjs/handlebars/decorators.js\");\n\nvar _logger = __webpack_require__(/*! ./logger */ \"./node_modules/handlebars/dist/cjs/handlebars/logger.js\");\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _internalProtoAccess = __webpack_require__(/*! ./internal/proto-access */ \"./node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js\");\n\nvar VERSION = '4.7.6';\nexports.VERSION = VERSION;\nvar COMPILER_REVISION = 8;\nexports.COMPILER_REVISION = COMPILER_REVISION;\nvar LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\nexports.LAST_COMPATIBLE_COMPILER_REVISION = LAST_COMPATIBLE_COMPILER_REVISION;\nvar REVISION_CHANGES = {\n  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n  2: '== 1.0.0-rc.3',\n  3: '== 1.0.0-rc.4',\n  4: '== 1.x.x',\n  5: '== 2.0.0-alpha.x',\n  6: '>= 2.0.0-beta.1',\n  7: '>= 4.0.0 <4.3.0',\n  8: '>= 4.3.0'\n};\n\nexports.REVISION_CHANGES = REVISION_CHANGES;\nvar objectType = '[object Object]';\n\nfunction HandlebarsEnvironment(helpers, partials, decorators) {\n  this.helpers = helpers || {};\n  this.partials = partials || {};\n  this.decorators = decorators || {};\n\n  _helpers.registerDefaultHelpers(this);\n  _decorators.registerDefaultDecorators(this);\n}\n\nHandlebarsEnvironment.prototype = {\n  constructor: HandlebarsEnvironment,\n\n  logger: _logger2['default'],\n  log: _logger2['default'].log,\n\n  registerHelper: function registerHelper(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple helpers');\n      }\n      _utils.extend(this.helpers, name);\n    } else {\n      this.helpers[name] = fn;\n    }\n  },\n  unregisterHelper: function unregisterHelper(name) {\n    delete this.helpers[name];\n  },\n\n  registerPartial: function registerPartial(name, partial) {\n    if (_utils.toString.call(name) === objectType) {\n      _utils.extend(this.partials, name);\n    } else {\n      if (typeof partial === 'undefined') {\n        throw new _exception2['default']('Attempting to register a partial called \"' + name + '\" as undefined');\n      }\n      this.partials[name] = partial;\n    }\n  },\n  unregisterPartial: function unregisterPartial(name) {\n    delete this.partials[name];\n  },\n\n  registerDecorator: function registerDecorator(name, fn) {\n    if (_utils.toString.call(name) === objectType) {\n      if (fn) {\n        throw new _exception2['default']('Arg not supported with multiple decorators');\n      }\n      _utils.extend(this.decorators, name);\n    } else {\n      this.decorators[name] = fn;\n    }\n  },\n  unregisterDecorator: function unregisterDecorator(name) {\n    delete this.decorators[name];\n  },\n  /**\n   * Reset the memory of illegal property accesses that have already been logged.\n   * @deprecated should only be used in handlebars test-cases\n   */\n  resetLoggedPropertyAccesses: function resetLoggedPropertyAccesses() {\n    _internalProtoAccess.resetLoggedProperties();\n  }\n};\n\nvar log = _logger2['default'].log;\n\nexports.log = log;\nexports.createFrame = _utils.createFrame;\nexports.logger = _logger2['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7cUJBQThDLFNBQVM7O3lCQUNqQyxhQUFhOzs7O3VCQUNJLFdBQVc7OzBCQUNSLGNBQWM7O3NCQUNyQyxVQUFVOzs7O21DQUNTLHlCQUF5Qjs7QUFFeEQsSUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDOztBQUN4QixJQUFNLGlCQUFpQixHQUFHLENBQUMsQ0FBQzs7QUFDNUIsSUFBTSxpQ0FBaUMsR0FBRyxDQUFDLENBQUM7OztBQUU1QyxJQUFNLGdCQUFnQixHQUFHO0FBQzlCLEdBQUMsRUFBRSxhQUFhO0FBQ2hCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxlQUFlO0FBQ2xCLEdBQUMsRUFBRSxVQUFVO0FBQ2IsR0FBQyxFQUFFLGtCQUFrQjtBQUNyQixHQUFDLEVBQUUsaUJBQWlCO0FBQ3BCLEdBQUMsRUFBRSxpQkFBaUI7QUFDcEIsR0FBQyxFQUFFLFVBQVU7Q0FDZCxDQUFDOzs7QUFFRixJQUFNLFVBQVUsR0FBRyxpQkFBaUIsQ0FBQzs7QUFFOUIsU0FBUyxxQkFBcUIsQ0FBQyxPQUFPLEVBQUUsUUFBUSxFQUFFLFVBQVUsRUFBRTtBQUNuRSxNQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sSUFBSSxFQUFFLENBQUM7QUFDN0IsTUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLElBQUksRUFBRSxDQUFDO0FBQy9CLE1BQUksQ0FBQyxVQUFVLEdBQUcsVUFBVSxJQUFJLEVBQUUsQ0FBQzs7QUFFbkMsa0NBQXVCLElBQUksQ0FBQyxDQUFDO0FBQzdCLHdDQUEwQixJQUFJLENBQUMsQ0FBQztDQUNqQzs7QUFFRCxxQkFBcUIsQ0FBQyxTQUFTLEdBQUc7QUFDaEMsYUFBVyxFQUFFLHFCQUFxQjs7QUFFbEMsUUFBTSxxQkFBUTtBQUNkLEtBQUcsRUFBRSxvQkFBTyxHQUFHOztBQUVmLGdCQUFjLEVBQUUsd0JBQVMsSUFBSSxFQUFFLEVBQUUsRUFBRTtBQUNqQyxRQUFJLGdCQUFTLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxVQUFVLEVBQUU7QUFDdEMsVUFBSSxFQUFFLEVBQUU7QUFDTixjQUFNLDJCQUFjLHlDQUF5QyxDQUFDLENBQUM7T0FDaEU7QUFDRCxvQkFBTyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0tBQzVCLE1BQU07QUFDTCxVQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsQ0FBQztLQUN6QjtHQUNGO0FBQ0Qsa0JBQWdCLEVBQUUsMEJBQVMsSUFBSSxFQUFFO0FBQy9CLFdBQU8sSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztHQUMzQjs7QUFFRCxpQkFBZSxFQUFFLHlCQUFTLElBQUksRUFBRSxPQUFPLEVBQUU7QUFDdkMsUUFBSSxnQkFBUyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFO0FBQ3RDLG9CQUFPLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7S0FDN0IsTUFBTTtBQUNMLFVBQUksT0FBTyxPQUFPLEtBQUssV0FBVyxFQUFFO0FBQ2xDLGNBQU0seUVBQ3dDLElBQUksb0JBQ2pELENBQUM7T0FDSDtBQUNELFVBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDO0tBQy9CO0dBQ0Y7QUFDRCxtQkFBaUIsRUFBRSwyQkFBUyxJQUFJLEVBQUU7QUFDaEMsV0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO0dBQzVCOztBQUVELG1CQUFpQixFQUFFLDJCQUFTLElBQUksRUFBRSxFQUFFLEVBQUU7QUFDcEMsUUFBSSxnQkFBUyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssVUFBVSxFQUFFO0FBQ3RDLFVBQUksRUFBRSxFQUFFO0FBQ04sY0FBTSwyQkFBYyw0Q0FBNEMsQ0FBQyxDQUFDO09BQ25FO0FBQ0Qsb0JBQU8sSUFBSSxDQUFDLFVBQVUsRUFBRSxJQUFJLENBQUMsQ0FBQztLQUMvQixNQUFNO0FBQ0wsVUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFLENBQUM7S0FDNUI7R0FDRjtBQUNELHFCQUFtQixFQUFFLDZCQUFTLElBQUksRUFBRTtBQUNsQyxXQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUM7R0FDOUI7Ozs7O0FBS0QsNkJBQTJCLEVBQUEsdUNBQUc7QUFDNUIsZ0RBQXVCLENBQUM7R0FDekI7Q0FDRixDQUFDOztBQUVLLElBQUksR0FBRyxHQUFHLG9CQUFPLEdBQUcsQ0FBQzs7O1FBRW5CLFdBQVc7UUFBRSxNQUFNIiwiZmlsZSI6ImJhc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVGcmFtZSwgZXh0ZW5kLCB0b1N0cmluZyB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuL2V4Y2VwdGlvbic7XG5pbXBvcnQgeyByZWdpc3RlckRlZmF1bHRIZWxwZXJzIH0gZnJvbSAnLi9oZWxwZXJzJztcbmltcG9ydCB7IHJlZ2lzdGVyRGVmYXVsdERlY29yYXRvcnMgfSBmcm9tICcuL2RlY29yYXRvcnMnO1xuaW1wb3J0IGxvZ2dlciBmcm9tICcuL2xvZ2dlcic7XG5pbXBvcnQgeyByZXNldExvZ2dlZFByb3BlcnRpZXMgfSBmcm9tICcuL2ludGVybmFsL3Byb3RvLWFjY2Vzcyc7XG5cbmV4cG9ydCBjb25zdCBWRVJTSU9OID0gJzQuNy42JztcbmV4cG9ydCBjb25zdCBDT01QSUxFUl9SRVZJU0lPTiA9IDg7XG5leHBvcnQgY29uc3QgTEFTVF9DT01QQVRJQkxFX0NPTVBJTEVSX1JFVklTSU9OID0gNztcblxuZXhwb3J0IGNvbnN0IFJFVklTSU9OX0NIQU5HRVMgPSB7XG4gIDE6ICc8PSAxLjAucmMuMicsIC8vIDEuMC5yYy4yIGlzIGFjdHVhbGx5IHJldjIgYnV0IGRvZXNuJ3QgcmVwb3J0IGl0XG4gIDI6ICc9PSAxLjAuMC1yYy4zJyxcbiAgMzogJz09IDEuMC4wLXJjLjQnLFxuICA0OiAnPT0gMS54LngnLFxuICA1OiAnPT0gMi4wLjAtYWxwaGEueCcsXG4gIDY6ICc+PSAyLjAuMC1iZXRhLjEnLFxuICA3OiAnPj0gNC4wLjAgPDQuMy4wJyxcbiAgODogJz49IDQuMy4wJ1xufTtcblxuY29uc3Qgb2JqZWN0VHlwZSA9ICdbb2JqZWN0IE9iamVjdF0nO1xuXG5leHBvcnQgZnVuY3Rpb24gSGFuZGxlYmFyc0Vudmlyb25tZW50KGhlbHBlcnMsIHBhcnRpYWxzLCBkZWNvcmF0b3JzKSB7XG4gIHRoaXMuaGVscGVycyA9IGhlbHBlcnMgfHwge307XG4gIHRoaXMucGFydGlhbHMgPSBwYXJ0aWFscyB8fCB7fTtcbiAgdGhpcy5kZWNvcmF0b3JzID0gZGVjb3JhdG9ycyB8fCB7fTtcblxuICByZWdpc3RlckRlZmF1bHRIZWxwZXJzKHRoaXMpO1xuICByZWdpc3RlckRlZmF1bHREZWNvcmF0b3JzKHRoaXMpO1xufVxuXG5IYW5kbGViYXJzRW52aXJvbm1lbnQucHJvdG90eXBlID0ge1xuICBjb25zdHJ1Y3RvcjogSGFuZGxlYmFyc0Vudmlyb25tZW50LFxuXG4gIGxvZ2dlcjogbG9nZ2VyLFxuICBsb2c6IGxvZ2dlci5sb2csXG5cbiAgcmVnaXN0ZXJIZWxwZXI6IGZ1bmN0aW9uKG5hbWUsIGZuKSB7XG4gICAgaWYgKHRvU3RyaW5nLmNhbGwobmFtZSkgPT09IG9iamVjdFR5cGUpIHtcbiAgICAgIGlmIChmbikge1xuICAgICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCdBcmcgbm90IHN1cHBvcnRlZCB3aXRoIG11bHRpcGxlIGhlbHBlcnMnKTtcbiAgICAgIH1cbiAgICAgIGV4dGVuZCh0aGlzLmhlbHBlcnMsIG5hbWUpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmhlbHBlcnNbbmFtZV0gPSBmbjtcbiAgICB9XG4gIH0sXG4gIHVucmVnaXN0ZXJIZWxwZXI6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5oZWxwZXJzW25hbWVdO1xuICB9LFxuXG4gIHJlZ2lzdGVyUGFydGlhbDogZnVuY3Rpb24obmFtZSwgcGFydGlhbCkge1xuICAgIGlmICh0b1N0cmluZy5jYWxsKG5hbWUpID09PSBvYmplY3RUeXBlKSB7XG4gICAgICBleHRlbmQodGhpcy5wYXJ0aWFscywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGlmICh0eXBlb2YgcGFydGlhbCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEV4Y2VwdGlvbihcbiAgICAgICAgICBgQXR0ZW1wdGluZyB0byByZWdpc3RlciBhIHBhcnRpYWwgY2FsbGVkIFwiJHtuYW1lfVwiIGFzIHVuZGVmaW5lZGBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICAgIHRoaXMucGFydGlhbHNbbmFtZV0gPSBwYXJ0aWFsO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlclBhcnRpYWw6IGZ1bmN0aW9uKG5hbWUpIHtcbiAgICBkZWxldGUgdGhpcy5wYXJ0aWFsc1tuYW1lXTtcbiAgfSxcblxuICByZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24obmFtZSwgZm4pIHtcbiAgICBpZiAodG9TdHJpbmcuY2FsbChuYW1lKSA9PT0gb2JqZWN0VHlwZSkge1xuICAgICAgaWYgKGZuKSB7XG4gICAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ0FyZyBub3Qgc3VwcG9ydGVkIHdpdGggbXVsdGlwbGUgZGVjb3JhdG9ycycpO1xuICAgICAgfVxuICAgICAgZXh0ZW5kKHRoaXMuZGVjb3JhdG9ycywgbmFtZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuZGVjb3JhdG9yc1tuYW1lXSA9IGZuO1xuICAgIH1cbiAgfSxcbiAgdW5yZWdpc3RlckRlY29yYXRvcjogZnVuY3Rpb24obmFtZSkge1xuICAgIGRlbGV0ZSB0aGlzLmRlY29yYXRvcnNbbmFtZV07XG4gIH0sXG4gIC8qKlxuICAgKiBSZXNldCB0aGUgbWVtb3J5IG9mIGlsbGVnYWwgcHJvcGVydHkgYWNjZXNzZXMgdGhhdCBoYXZlIGFscmVhZHkgYmVlbiBsb2dnZWQuXG4gICAqIEBkZXByZWNhdGVkIHNob3VsZCBvbmx5IGJlIHVzZWQgaW4gaGFuZGxlYmFycyB0ZXN0LWNhc2VzXG4gICAqL1xuICByZXNldExvZ2dlZFByb3BlcnR5QWNjZXNzZXMoKSB7XG4gICAgcmVzZXRMb2dnZWRQcm9wZXJ0aWVzKCk7XG4gIH1cbn07XG5cbmV4cG9ydCBsZXQgbG9nID0gbG9nZ2VyLmxvZztcblxuZXhwb3J0IHsgY3JlYXRlRnJhbWUsIGxvZ2dlciB9O1xuIl19\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/base.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js":
/*!*********************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js ***!
  \*********************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\nexports.__esModule = true;\nvar AST = {\n  // Public API used to evaluate derived attributes regarding AST nodes\n  helpers: {\n    // a mustache is definitely a helper if:\n    // * it is an eligible helper, and\n    // * it has at least one parameter or hash segment\n    helperExpression: function helperExpression(node) {\n      return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);\n    },\n\n    scopedId: function scopedId(path) {\n      return (/^\\.|this\\b/.test(path.original)\n      );\n    },\n\n    // an ID is simple if it only has one part, and that part is not\n    // `..` or `this`.\n    simpleId: function simpleId(path) {\n      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;\n    }\n  }\n};\n\n// Must be exported as an object rather than the root of the module as the jison lexer\n// must modify the object to operate properly.\nexports.default = AST;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2FzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFJLEdBQUcsR0FBRzs7QUFFUixTQUFPLEVBQUU7Ozs7QUFJUCxvQkFBZ0IsRUFBRSwwQkFBUyxJQUFJLEVBQUU7QUFDL0IsYUFDRSxJQUFJLENBQUMsSUFBSSxLQUFLLGVBQWUsSUFDNUIsQ0FBQyxJQUFJLENBQUMsSUFBSSxLQUFLLG1CQUFtQixJQUNqQyxJQUFJLENBQUMsSUFBSSxLQUFLLGdCQUFnQixDQUFBLElBQzlCLENBQUMsRUFBRSxBQUFDLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLElBQUssSUFBSSxDQUFDLElBQUksQ0FBQSxBQUFDLEFBQUMsQ0FDdkQ7S0FDSDs7QUFFRCxZQUFRLEVBQUUsa0JBQVMsSUFBSSxFQUFFO0FBQ3ZCLGFBQU8sYUFBWSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQUM7S0FDekM7Ozs7QUFJRCxZQUFRLEVBQUUsa0JBQVMsSUFBSSxFQUFFO0FBQ3ZCLGFBQ0UsSUFBSSxDQUFDLEtBQUssQ0FBQyxNQUFNLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUNyRTtLQUNIO0dBQ0Y7Q0FDRixDQUFDOzs7O3FCQUlhLEdBQUciLCJmaWxlIjoiYXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IEFTVCA9IHtcbiAgLy8gUHVibGljIEFQSSB1c2VkIHRvIGV2YWx1YXRlIGRlcml2ZWQgYXR0cmlidXRlcyByZWdhcmRpbmcgQVNUIG5vZGVzXG4gIGhlbHBlcnM6IHtcbiAgICAvLyBhIG11c3RhY2hlIGlzIGRlZmluaXRlbHkgYSBoZWxwZXIgaWY6XG4gICAgLy8gKiBpdCBpcyBhbiBlbGlnaWJsZSBoZWxwZXIsIGFuZFxuICAgIC8vICogaXQgaGFzIGF0IGxlYXN0IG9uZSBwYXJhbWV0ZXIgb3IgaGFzaCBzZWdtZW50XG4gICAgaGVscGVyRXhwcmVzc2lvbjogZnVuY3Rpb24obm9kZSkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgbm9kZS50eXBlID09PSAnU3ViRXhwcmVzc2lvbicgfHxcbiAgICAgICAgKChub2RlLnR5cGUgPT09ICdNdXN0YWNoZVN0YXRlbWVudCcgfHxcbiAgICAgICAgICBub2RlLnR5cGUgPT09ICdCbG9ja1N0YXRlbWVudCcpICYmXG4gICAgICAgICAgISEoKG5vZGUucGFyYW1zICYmIG5vZGUucGFyYW1zLmxlbmd0aCkgfHwgbm9kZS5oYXNoKSlcbiAgICAgICk7XG4gICAgfSxcblxuICAgIHNjb3BlZElkOiBmdW5jdGlvbihwYXRoKSB7XG4gICAgICByZXR1cm4gL15cXC58dGhpc1xcYi8udGVzdChwYXRoLm9yaWdpbmFsKTtcbiAgICB9LFxuXG4gICAgLy8gYW4gSUQgaXMgc2ltcGxlIGlmIGl0IG9ubHkgaGFzIG9uZSBwYXJ0LCBhbmQgdGhhdCBwYXJ0IGlzIG5vdFxuICAgIC8vIGAuLmAgb3IgYHRoaXNgLlxuICAgIHNpbXBsZUlkOiBmdW5jdGlvbihwYXRoKSB7XG4gICAgICByZXR1cm4gKFxuICAgICAgICBwYXRoLnBhcnRzLmxlbmd0aCA9PT0gMSAmJiAhQVNULmhlbHBlcnMuc2NvcGVkSWQocGF0aCkgJiYgIXBhdGguZGVwdGhcbiAgICAgICk7XG4gICAgfVxuICB9XG59O1xuXG4vLyBNdXN0IGJlIGV4cG9ydGVkIGFzIGFuIG9iamVjdCByYXRoZXIgdGhhbiB0aGUgcm9vdCBvZiB0aGUgbW9kdWxlIGFzIHRoZSBqaXNvbiBsZXhlclxuLy8gbXVzdCBtb2RpZnkgdGhlIG9iamVjdCB0byBvcGVyYXRlIHByb3Blcmx5LlxuZXhwb3J0IGRlZmF1bHQgQVNUO1xuIl19\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/compiler/base.js":
/*!**********************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/compiler/base.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.parseWithoutProcessing = parseWithoutProcessing;\nexports.parse = parse;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _parser = __webpack_require__(/*! ./parser */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js\");\n\nvar _parser2 = _interopRequireDefault(_parser);\n\nvar _whitespaceControl = __webpack_require__(/*! ./whitespace-control */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js\");\n\nvar _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);\n\nvar _helpers = __webpack_require__(/*! ./helpers */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js\");\n\nvar Helpers = _interopRequireWildcard(_helpers);\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nexports.parser = _parser2['default'];\n\nvar yy = {};\n_utils.extend(yy, Helpers);\n\nfunction parseWithoutProcessing(input, options) {\n  // Just return if an already-compiled AST was passed in.\n  if (input.type === 'Program') {\n    return input;\n  }\n\n  _parser2['default'].yy = yy;\n\n  // Altering the shared object here, but this is ok as parser is a sync operation\n  yy.locInfo = function (locInfo) {\n    return new yy.SourceLocation(options && options.srcName, locInfo);\n  };\n\n  var ast = _parser2['default'].parse(input);\n\n  return ast;\n}\n\nfunction parse(input, options) {\n  var ast = parseWithoutProcessing(input, options);\n  var strip = new _whitespaceControl2['default'](options);\n\n  return strip.accept(ast);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2NvbXBpbGVyL2Jhc2UuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7OztzQkFBbUIsVUFBVTs7OztpQ0FDQyxzQkFBc0I7Ozs7dUJBQzNCLFdBQVc7O0lBQXhCLE9BQU87O3FCQUNJLFVBQVU7O1FBRXhCLE1BQU07O0FBRWYsSUFBSSxFQUFFLEdBQUcsRUFBRSxDQUFDO0FBQ1osY0FBTyxFQUFFLEVBQUUsT0FBTyxDQUFDLENBQUM7O0FBRWIsU0FBUyxzQkFBc0IsQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFOztBQUVyRCxNQUFJLEtBQUssQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO0FBQzVCLFdBQU8sS0FBSyxDQUFDO0dBQ2Q7O0FBRUQsc0JBQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQzs7O0FBR2YsSUFBRSxDQUFDLE9BQU8sR0FBRyxVQUFTLE9BQU8sRUFBRTtBQUM3QixXQUFPLElBQUksRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztHQUNuRSxDQUFDOztBQUVGLE1BQUksR0FBRyxHQUFHLG9CQUFPLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQzs7QUFFOUIsU0FBTyxHQUFHLENBQUM7Q0FDWjs7QUFFTSxTQUFTLEtBQUssQ0FBQyxLQUFLLEVBQUUsT0FBTyxFQUFFO0FBQ3BDLE1BQUksR0FBRyxHQUFHLHNCQUFzQixDQUFDLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztBQUNqRCxNQUFJLEtBQUssR0FBRyxtQ0FBc0IsT0FBTyxDQUFDLENBQUM7O0FBRTNDLFNBQU8sS0FBSyxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUMxQiIsImZpbGUiOiJiYXNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHBhcnNlciBmcm9tICcuL3BhcnNlcic7XG5pbXBvcnQgV2hpdGVzcGFjZUNvbnRyb2wgZnJvbSAnLi93aGl0ZXNwYWNlLWNvbnRyb2wnO1xuaW1wb3J0ICogYXMgSGVscGVycyBmcm9tICcuL2hlbHBlcnMnO1xuaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG5leHBvcnQgeyBwYXJzZXIgfTtcblxubGV0IHl5ID0ge307XG5leHRlbmQoeXksIEhlbHBlcnMpO1xuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VXaXRob3V0UHJvY2Vzc2luZyhpbnB1dCwgb3B0aW9ucykge1xuICAvLyBKdXN0IHJldHVybiBpZiBhbiBhbHJlYWR5LWNvbXBpbGVkIEFTVCB3YXMgcGFzc2VkIGluLlxuICBpZiAoaW5wdXQudHlwZSA9PT0gJ1Byb2dyYW0nKSB7XG4gICAgcmV0dXJuIGlucHV0O1xuICB9XG5cbiAgcGFyc2VyLnl5ID0geXk7XG5cbiAgLy8gQWx0ZXJpbmcgdGhlIHNoYXJlZCBvYmplY3QgaGVyZSwgYnV0IHRoaXMgaXMgb2sgYXMgcGFyc2VyIGlzIGEgc3luYyBvcGVyYXRpb25cbiAgeXkubG9jSW5mbyA9IGZ1bmN0aW9uKGxvY0luZm8pIHtcbiAgICByZXR1cm4gbmV3IHl5LlNvdXJjZUxvY2F0aW9uKG9wdGlvbnMgJiYgb3B0aW9ucy5zcmNOYW1lLCBsb2NJbmZvKTtcbiAgfTtcblxuICBsZXQgYXN0ID0gcGFyc2VyLnBhcnNlKGlucHV0KTtcblxuICByZXR1cm4gYXN0O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcGFyc2UoaW5wdXQsIG9wdGlvbnMpIHtcbiAgbGV0IGFzdCA9IHBhcnNlV2l0aG91dFByb2Nlc3NpbmcoaW5wdXQsIG9wdGlvbnMpO1xuICBsZXQgc3RyaXAgPSBuZXcgV2hpdGVzcGFjZUNvbnRyb2wob3B0aW9ucyk7XG5cbiAgcmV0dXJuIHN0cmlwLmFjY2VwdChhc3QpO1xufVxuIl19\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/compiler/base.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js":
/*!**************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("/* global define */\n\n\nexports.__esModule = true;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nvar SourceNode = undefined;\n\ntry {\n  /* istanbul ignore next */\n  if (false) { var SourceMap; }\n} catch (err) {}\n/* NOP */\n\n/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\nif (!SourceNode) {\n  SourceNode = function (line, column, srcFile, chunks) {\n    this.src = '';\n    if (chunks) {\n      this.add(chunks);\n    }\n  };\n  /* istanbul ignore next */\n  SourceNode.prototype = {\n    add: function add(chunks) {\n      if (_utils.isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src += chunks;\n    },\n    prepend: function prepend(chunks) {\n      if (_utils.isArray(chunks)) {\n        chunks = chunks.join('');\n      }\n      this.src = chunks + this.src;\n    },\n    toStringWithSourceMap: function toStringWithSourceMap() {\n      return { code: this.toString() };\n    },\n    toString: function toString() {\n      return this.src;\n    }\n  };\n}\n\nfunction castChunk(chunk, codeGen, loc) {\n  if (_utils.isArray(chunk)) {\n    var ret = [];\n\n    for (var i = 0, len = chunk.length; i < len; i++) {\n      ret.push(codeGen.wrap(chunk[i], loc));\n    }\n    return ret;\n  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n    // Handle primitives that the SourceNode will throw up on\n    return chunk + '';\n  }\n  return chunk;\n}\n\nfunction CodeGen(srcFile) {\n  this.srcFile = srcFile;\n  this.source = [];\n}\n\nCodeGen.prototype = {\n  isEmpty: function isEmpty() {\n    return !this.source.length;\n  },\n  prepend: function prepend(source, loc) {\n    this.source.unshift(this.wrap(source, loc));\n  },\n  push: function push(source, loc) {\n    this.source.push(this.wrap(source, loc));\n  },\n\n  merge: function merge() {\n    var source = this.empty();\n    this.each(function (line) {\n      source.add(['  ', line, '\\n']);\n    });\n    return source;\n  },\n\n  each: function each(iter) {\n    for (var i = 0, len = this.source.length; i < len; i++) {\n      iter(this.source[i]);\n    }\n  },\n\n  empty: function empty() {\n    var loc = this.currentLocation || { start: {} };\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n  },\n  wrap: function wrap(chunk) {\n    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];\n\n    if (chunk instanceof SourceNode) {\n      return chunk;\n    }\n\n    chunk = castChunk(chunk, this, loc);\n\n    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n  },\n\n  functionCall: function functionCall(fn, type, params) {\n    params = this.generateList(params);\n    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n  },\n\n  quotedString: function quotedString(str) {\n    return '\"' + (str + '').replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n    .replace(/\\u2029/g, '\\\\u2029') + '\"';\n  },\n\n  objectLiteral: function objectLiteral(obj) {\n    // istanbul ignore next\n\n    var _this = this;\n\n    var pairs = [];\n\n    Object.keys(obj).forEach(function (key) {\n      var value = castChunk(obj[key], _this);\n      if (value !== 'undefined') {\n        pairs.push([_this.quotedString(key), ':', value]);\n      }\n    });\n\n    var ret = this.generateList(pairs);\n    ret.prepend('{');\n    ret.add('}');\n    return ret;\n  },\n\n  generateList: function generateList(entries) {\n    var ret = this.empty();\n\n    for (var i = 0, len = entries.length; i < len; i++) {\n      if (i) {\n        ret.add(',');\n      }\n\n      ret.add(castChunk(entries[i], this));\n    }\n\n    return ret;\n  },\n\n  generateArray: function generateArray(entries) {\n    var ret = this.generateList(entries);\n    ret.prepend('[');\n    ret.add(']');\n\n    return ret;\n  }\n};\n\nexports.default = CodeGen;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js":
/*!**************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("/* eslint-disable new-cap */\n\n\n\nexports.__esModule = true;\nexports.Compiler = Compiler;\nexports.precompile = precompile;\nexports.compile = compile;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = __webpack_require__(/*! ../exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nvar _ast = __webpack_require__(/*! ./ast */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/ast.js\");\n\nvar _ast2 = _interopRequireDefault(_ast);\n\nvar slice = [].slice;\n\nfunction Compiler() {}\n\n// the foundHelper register will disambiguate helper lookup from finding a\n// function in a context. This is necessary for mustache compatibility, which\n// requires that context functions in blocks are evaluated by blockHelperMissing,\n// and then proceed as if the resulting value was provided to blockHelperMissing.\n\nCompiler.prototype = {\n  compiler: Compiler,\n\n  equals: function equals(other) {\n    var len = this.opcodes.length;\n    if (other.opcodes.length !== len) {\n      return false;\n    }\n\n    for (var i = 0; i < len; i++) {\n      var opcode = this.opcodes[i],\n          otherOpcode = other.opcodes[i];\n      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {\n        return false;\n      }\n    }\n\n    // We know that length is the same between the two arrays because they are directly tied\n    // to the opcode behavior above.\n    len = this.children.length;\n    for (var i = 0; i < len; i++) {\n      if (!this.children[i].equals(other.children[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  guid: 0,\n\n  compile: function compile(program, options) {\n    this.sourceNode = [];\n    this.opcodes = [];\n    this.children = [];\n    this.options = options;\n    this.stringParams = options.stringParams;\n    this.trackIds = options.trackIds;\n\n    options.blockParams = options.blockParams || [];\n\n    options.knownHelpers = _utils.extend(Object.create(null), {\n      helperMissing: true,\n      blockHelperMissing: true,\n      each: true,\n      'if': true,\n      unless: true,\n      'with': true,\n      log: true,\n      lookup: true\n    }, options.knownHelpers);\n\n    return this.accept(program);\n  },\n\n  compileProgram: function compileProgram(program) {\n    var childCompiler = new this.compiler(),\n        // eslint-disable-line new-cap\n    result = childCompiler.compile(program, this.options),\n        guid = this.guid++;\n\n    this.usePartial = this.usePartial || result.usePartial;\n\n    this.children[guid] = result;\n    this.useDepths = this.useDepths || result.useDepths;\n\n    return guid;\n  },\n\n  accept: function accept(node) {\n    /* istanbul ignore next: Sanity code */\n    if (!this[node.type]) {\n      throw new _exception2['default']('Unknown type: ' + node.type, node);\n    }\n\n    this.sourceNode.unshift(node);\n    var ret = this[node.type](node);\n    this.sourceNode.shift();\n    return ret;\n  },\n\n  Program: function Program(program) {\n    this.options.blockParams.unshift(program.blockParams);\n\n    var body = program.body,\n        bodyLength = body.length;\n    for (var i = 0; i < bodyLength; i++) {\n      this.accept(body[i]);\n    }\n\n    this.options.blockParams.shift();\n\n    this.isSimple = bodyLength === 1;\n    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n    return this;\n  },\n\n  BlockStatement: function BlockStatement(block) {\n    transformLiteralToPath(block);\n\n    var program = block.program,\n        inverse = block.inverse;\n\n    program = program && this.compileProgram(program);\n    inverse = inverse && this.compileProgram(inverse);\n\n    var type = this.classifySexpr(block);\n\n    if (type === 'helper') {\n      this.helperSexpr(block, program, inverse);\n    } else if (type === 'simple') {\n      this.simpleSexpr(block);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('blockValue', block.path.original);\n    } else {\n      this.ambiguousSexpr(block, program, inverse);\n\n      // now that the simple mustache is resolved, we need to\n      // evaluate it by executing `blockHelperMissing`\n      this.opcode('pushProgram', program);\n      this.opcode('pushProgram', inverse);\n      this.opcode('emptyHash');\n      this.opcode('ambiguousBlockValue');\n    }\n\n    this.opcode('append');\n  },\n\n  DecoratorBlock: function DecoratorBlock(decorator) {\n    var program = decorator.program && this.compileProgram(decorator.program);\n    var params = this.setupFullMustacheParams(decorator, program, undefined),\n        path = decorator.path;\n\n    this.useDecorators = true;\n    this.opcode('registerDecorator', params.length, path.original);\n  },\n\n  PartialStatement: function PartialStatement(partial) {\n    this.usePartial = true;\n\n    var program = partial.program;\n    if (program) {\n      program = this.compileProgram(partial.program);\n    }\n\n    var params = partial.params;\n    if (params.length > 1) {\n      throw new _exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);\n    } else if (!params.length) {\n      if (this.options.explicitPartialContext) {\n        this.opcode('pushLiteral', 'undefined');\n      } else {\n        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n      }\n    }\n\n    var partialName = partial.name.original,\n        isDynamic = partial.name.type === 'SubExpression';\n    if (isDynamic) {\n      this.accept(partial.name);\n    }\n\n    this.setupFullMustacheParams(partial, program, undefined, true);\n\n    var indent = partial.indent || '';\n    if (this.options.preventIndent && indent) {\n      this.opcode('appendContent', indent);\n      indent = '';\n    }\n\n    this.opcode('invokePartial', isDynamic, partialName, indent);\n    this.opcode('append');\n  },\n  PartialBlockStatement: function PartialBlockStatement(partialBlock) {\n    this.PartialStatement(partialBlock);\n  },\n\n  MustacheStatement: function MustacheStatement(mustache) {\n    this.SubExpression(mustache);\n\n    if (mustache.escaped && !this.options.noEscape) {\n      this.opcode('appendEscaped');\n    } else {\n      this.opcode('append');\n    }\n  },\n  Decorator: function Decorator(decorator) {\n    this.DecoratorBlock(decorator);\n  },\n\n  ContentStatement: function ContentStatement(content) {\n    if (content.value) {\n      this.opcode('appendContent', content.value);\n    }\n  },\n\n  CommentStatement: function CommentStatement() {},\n\n  SubExpression: function SubExpression(sexpr) {\n    transformLiteralToPath(sexpr);\n    var type = this.classifySexpr(sexpr);\n\n    if (type === 'simple') {\n      this.simpleSexpr(sexpr);\n    } else if (type === 'helper') {\n      this.helperSexpr(sexpr);\n    } else {\n      this.ambiguousSexpr(sexpr);\n    }\n  },\n  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {\n    var path = sexpr.path,\n        name = path.parts[0],\n        isBlock = program != null || inverse != null;\n\n    this.opcode('getContext', path.depth);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    path.strict = true;\n    this.accept(path);\n\n    this.opcode('invokeAmbiguous', name, isBlock);\n  },\n\n  simpleSexpr: function simpleSexpr(sexpr) {\n    var path = sexpr.path;\n    path.strict = true;\n    this.accept(path);\n    this.opcode('resolvePossibleLambda');\n  },\n\n  helperSexpr: function helperSexpr(sexpr, program, inverse) {\n    var params = this.setupFullMustacheParams(sexpr, program, inverse),\n        path = sexpr.path,\n        name = path.parts[0];\n\n    if (this.options.knownHelpers[name]) {\n      this.opcode('invokeKnownHelper', params.length, name);\n    } else if (this.options.knownHelpersOnly) {\n      throw new _exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);\n    } else {\n      path.strict = true;\n      path.falsy = true;\n\n      this.accept(path);\n      this.opcode('invokeHelper', params.length, path.original, _ast2['default'].helpers.simpleId(path));\n    }\n  },\n\n  PathExpression: function PathExpression(path) {\n    this.addDepth(path.depth);\n    this.opcode('getContext', path.depth);\n\n    var name = path.parts[0],\n        scoped = _ast2['default'].helpers.scopedId(path),\n        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n    if (blockParamId) {\n      this.opcode('lookupBlockParam', blockParamId, path.parts);\n    } else if (!name) {\n      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n      this.opcode('pushContext');\n    } else if (path.data) {\n      this.options.data = true;\n      this.opcode('lookupData', path.depth, path.parts, path.strict);\n    } else {\n      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);\n    }\n  },\n\n  StringLiteral: function StringLiteral(string) {\n    this.opcode('pushString', string.value);\n  },\n\n  NumberLiteral: function NumberLiteral(number) {\n    this.opcode('pushLiteral', number.value);\n  },\n\n  BooleanLiteral: function BooleanLiteral(bool) {\n    this.opcode('pushLiteral', bool.value);\n  },\n\n  UndefinedLiteral: function UndefinedLiteral() {\n    this.opcode('pushLiteral', 'undefined');\n  },\n\n  NullLiteral: function NullLiteral() {\n    this.opcode('pushLiteral', 'null');\n  },\n\n  Hash: function Hash(hash) {\n    var pairs = hash.pairs,\n        i = 0,\n        l = pairs.length;\n\n    this.opcode('pushHash');\n\n    for (; i < l; i++) {\n      this.pushParam(pairs[i].value);\n    }\n    while (i--) {\n      this.opcode('assignToHash', pairs[i].key);\n    }\n    this.opcode('popHash');\n  },\n\n  // HELPERS\n  opcode: function opcode(name) {\n    this.opcodes.push({\n      opcode: name,\n      args: slice.call(arguments, 1),\n      loc: this.sourceNode[0].loc\n    });\n  },\n\n  addDepth: function addDepth(depth) {\n    if (!depth) {\n      return;\n    }\n\n    this.useDepths = true;\n  },\n\n  classifySexpr: function classifySexpr(sexpr) {\n    var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);\n\n    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n    // a mustache is an eligible helper if:\n    // * its id is simple (a single part, not `this` or `..`)\n    var isHelper = !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);\n\n    // if a mustache is an eligible helper but not a definite\n    // helper, it is ambiguous, and will be resolved in a later\n    // pass or at runtime.\n    var isEligible = !isBlockParam && (isHelper || isSimple);\n\n    // if ambiguous, we can possibly resolve the ambiguity now\n    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n    if (isEligible && !isHelper) {\n      var _name = sexpr.path.parts[0],\n          options = this.options;\n      if (options.knownHelpers[_name]) {\n        isHelper = true;\n      } else if (options.knownHelpersOnly) {\n        isEligible = false;\n      }\n    }\n\n    if (isHelper) {\n      return 'helper';\n    } else if (isEligible) {\n      return 'ambiguous';\n    } else {\n      return 'simple';\n    }\n  },\n\n  pushParams: function pushParams(params) {\n    for (var i = 0, l = params.length; i < l; i++) {\n      this.pushParam(params[i]);\n    }\n  },\n\n  pushParam: function pushParam(val) {\n    var value = val.value != null ? val.value : val.original || '';\n\n    if (this.stringParams) {\n      if (value.replace) {\n        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n      }\n\n      if (val.depth) {\n        this.addDepth(val.depth);\n      }\n      this.opcode('getContext', val.depth || 0);\n      this.opcode('pushStringParam', value, val.type);\n\n      if (val.type === 'SubExpression') {\n        // SubExpressions get evaluated and passed in\n        // in string params mode.\n        this.accept(val);\n      }\n    } else {\n      if (this.trackIds) {\n        var blockParamIndex = undefined;\n        if (val.parts && !_ast2['default'].helpers.scopedId(val) && !val.depth) {\n          blockParamIndex = this.blockParamIndex(val.parts[0]);\n        }\n        if (blockParamIndex) {\n          var blockParamChild = val.parts.slice(1).join('.');\n          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n        } else {\n          value = val.original || value;\n          if (value.replace) {\n            value = value.replace(/^this(?:\\.|$)/, '').replace(/^\\.\\//, '').replace(/^\\.$/, '');\n          }\n\n          this.opcode('pushId', val.type, value);\n        }\n      }\n      this.accept(val);\n    }\n  },\n\n  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {\n    var params = sexpr.params;\n    this.pushParams(params);\n\n    this.opcode('pushProgram', program);\n    this.opcode('pushProgram', inverse);\n\n    if (sexpr.hash) {\n      this.accept(sexpr.hash);\n    } else {\n      this.opcode('emptyHash', omitEmpty);\n    }\n\n    return params;\n  },\n\n  blockParamIndex: function blockParamIndex(name) {\n    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {\n      var blockParams = this.options.blockParams[depth],\n          param = blockParams && _utils.indexOf(blockParams, name);\n      if (blockParams && param >= 0) {\n        return [depth, param];\n      }\n    }\n  }\n};\n\nfunction precompile(input, options, env) {\n  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);\n  }\n\n  options = options || {};\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  var ast = env.parse(input, options),\n      environment = new env.Compiler().compile(ast, options);\n  return new env.JavaScriptCompiler().compile(environment, options);\n}\n\nfunction compile(input, options, env) {\n  if (options === undefined) options = {};\n\n  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);\n  }\n\n  options = _utils.extend({}, options);\n  if (!('data' in options)) {\n    options.data = true;\n  }\n  if (options.compat) {\n    options.useDepths = true;\n  }\n\n  var compiled = undefined;\n\n  function compileInput() {\n    var ast = env.parse(input, options),\n        environment = new env.Compiler().compile(ast, options),\n        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);\n    return env.template(templateSpec);\n  }\n\n  // Template is only compiled on first use and cached after that point.\n  function ret(context, execOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled.call(this, context, execOptions);\n  }\n  ret._setup = function (setupOptions) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._setup(setupOptions);\n  };\n  ret._child = function (i, data, blockParams, depths) {\n    if (!compiled) {\n      compiled = compileInput();\n    }\n    return compiled._child(i, data, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction argEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {\n    for (var i = 0; i < a.length; i++) {\n      if (!argEquals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nfunction transformLiteralToPath(sexpr) {\n  if (!sexpr.path.parts) {\n    var literal = sexpr.path;\n    // Casting to string here to make false and 0 literal values play nicely with the rest\n    // of the system.\n    sexpr.path = {\n      type: 'PathExpression',\n      data: false,\n      depth: 0,\n      parts: [literal.original + ''],\n      original: literal.original + '',\n      loc: literal.loc\n    };\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/compiler/compiler.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js":
/*!*************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.SourceLocation = SourceLocation;\nexports.id = id;\nexports.stripFlags = stripFlags;\nexports.stripComment = stripComment;\nexports.preparePath = preparePath;\nexports.prepareMustache = prepareMustache;\nexports.prepareRawBlock = prepareRawBlock;\nexports.prepareBlock = prepareBlock;\nexports.prepareProgram = prepareProgram;\nexports.preparePartialBlock = preparePartialBlock;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = __webpack_require__(/*! ../exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nfunction validateClose(open, close) {\n  close = close.path ? close.path.original : close;\n\n  if (open.path.original !== close) {\n    var errorNode = { loc: open.path.loc };\n\n    throw new _exception2['default'](open.path.original + \" doesn't match \" + close, errorNode);\n  }\n}\n\nfunction SourceLocation(source, locInfo) {\n  this.source = source;\n  this.start = {\n    line: locInfo.first_line,\n    column: locInfo.first_column\n  };\n  this.end = {\n    line: locInfo.last_line,\n    column: locInfo.last_column\n  };\n}\n\nfunction id(token) {\n  if (/^\\[.*\\]$/.test(token)) {\n    return token.substring(1, token.length - 1);\n  } else {\n    return token;\n  }\n}\n\nfunction stripFlags(open, close) {\n  return {\n    open: open.charAt(2) === '~',\n    close: close.charAt(close.length - 3) === '~'\n  };\n}\n\nfunction stripComment(comment) {\n  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n}\n\nfunction preparePath(data, parts, loc) {\n  loc = this.locInfo(loc);\n\n  var original = data ? '@' : '',\n      dig = [],\n      depth = 0;\n\n  for (var i = 0, l = parts.length; i < l; i++) {\n    var part = parts[i].part,\n\n    // If we have [] syntax then we do not treat path references as operators,\n    // i.e. foo.[this] resolves to approximately context.foo['this']\n    isLiteral = parts[i].original !== part;\n    original += (parts[i].separator || '') + part;\n\n    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n      if (dig.length > 0) {\n        throw new _exception2['default']('Invalid path: ' + original, { loc: loc });\n      } else if (part === '..') {\n        depth++;\n      }\n    } else {\n      dig.push(part);\n    }\n  }\n\n  return {\n    type: 'PathExpression',\n    data: data,\n    depth: depth,\n    parts: dig,\n    original: original,\n    loc: loc\n  };\n}\n\nfunction prepareMustache(path, params, hash, open, strip, locInfo) {\n  // Must use charAt to support IE pre-10\n  var escapeFlag = open.charAt(3) || open.charAt(2),\n      escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n  var decorator = /\\*/.test(open);\n  return {\n    type: decorator ? 'Decorator' : 'MustacheStatement',\n    path: path,\n    params: params,\n    hash: hash,\n    escaped: escaped,\n    strip: strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nfunction prepareRawBlock(openRawBlock, contents, close, locInfo) {\n  validateClose(openRawBlock, close);\n\n  locInfo = this.locInfo(locInfo);\n  var program = {\n    type: 'Program',\n    body: contents,\n    strip: {},\n    loc: locInfo\n  };\n\n  return {\n    type: 'BlockStatement',\n    path: openRawBlock.path,\n    params: openRawBlock.params,\n    hash: openRawBlock.hash,\n    program: program,\n    openStrip: {},\n    inverseStrip: {},\n    closeStrip: {},\n    loc: locInfo\n  };\n}\n\nfunction prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {\n  if (close && close.path) {\n    validateClose(openBlock, close);\n  }\n\n  var decorator = /\\*/.test(openBlock.open);\n\n  program.blockParams = openBlock.blockParams;\n\n  var inverse = undefined,\n      inverseStrip = undefined;\n\n  if (inverseAndProgram) {\n    if (decorator) {\n      throw new _exception2['default']('Unexpected inverse block on decorator', inverseAndProgram);\n    }\n\n    if (inverseAndProgram.chain) {\n      inverseAndProgram.program.body[0].closeStrip = close.strip;\n    }\n\n    inverseStrip = inverseAndProgram.strip;\n    inverse = inverseAndProgram.program;\n  }\n\n  if (inverted) {\n    inverted = inverse;\n    inverse = program;\n    program = inverted;\n  }\n\n  return {\n    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n    path: openBlock.path,\n    params: openBlock.params,\n    hash: openBlock.hash,\n    program: program,\n    inverse: inverse,\n    openStrip: openBlock.strip,\n    inverseStrip: inverseStrip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n\nfunction prepareProgram(statements, loc) {\n  if (!loc && statements.length) {\n    var firstLoc = statements[0].loc,\n        lastLoc = statements[statements.length - 1].loc;\n\n    /* istanbul ignore else */\n    if (firstLoc && lastLoc) {\n      loc = {\n        source: firstLoc.source,\n        start: {\n          line: firstLoc.start.line,\n          column: firstLoc.start.column\n        },\n        end: {\n          line: lastLoc.end.line,\n          column: lastLoc.end.column\n        }\n      };\n    }\n  }\n\n  return {\n    type: 'Program',\n    body: statements,\n    strip: {},\n    loc: loc\n  };\n}\n\nfunction preparePartialBlock(open, program, close, locInfo) {\n  validateClose(open, close);\n\n  return {\n    type: 'PartialBlockStatement',\n    name: open.path,\n    params: open.params,\n    hash: open.hash,\n    program: program,\n    openStrip: open.strip,\n    closeStrip: close && close.strip,\n    loc: this.locInfo(locInfo)\n  };\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/compiler/helpers.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js ***!
  \*************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _base = __webpack_require__(/*! ../base */ \"./node_modules/handlebars/dist/cjs/handlebars/base.js\");\n\nvar _exception = __webpack_require__(/*! ../exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nvar _codeGen = __webpack_require__(/*! ./code-gen */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/code-gen.js\");\n\nvar _codeGen2 = _interopRequireDefault(_codeGen);\n\nfunction Literal(value) {\n  this.value = value;\n}\n\nfunction JavaScriptCompiler() {}\n\nJavaScriptCompiler.prototype = {\n  // PUBLIC API: You can override these methods in a subclass to provide\n  // alternative compiled forms for name lookup and buffering semantics\n  nameLookup: function nameLookup(parent, name /*,  type */) {\n    return this.internalNameLookup(parent, name);\n  },\n  depthedLookup: function depthedLookup(name) {\n    return [this.aliasable('container.lookup'), '(depths, \"', name, '\")'];\n  },\n\n  compilerInfo: function compilerInfo() {\n    var revision = _base.COMPILER_REVISION,\n        versions = _base.REVISION_CHANGES[revision];\n    return [revision, versions];\n  },\n\n  appendToBuffer: function appendToBuffer(source, location, explicit) {\n    // Force a source as this simplifies the merge logic.\n    if (!_utils.isArray(source)) {\n      source = [source];\n    }\n    source = this.source.wrap(source, location);\n\n    if (this.environment.isSimple) {\n      return ['return ', source, ';'];\n    } else if (explicit) {\n      // This is a case where the buffer operation occurs as a child of another\n      // construct, generally braces. We have to explicitly output these buffer\n      // operations to ensure that the emitted code goes in the correct location.\n      return ['buffer += ', source, ';'];\n    } else {\n      source.appendToBuffer = true;\n      return source;\n    }\n  },\n\n  initializeBuffer: function initializeBuffer() {\n    return this.quotedString('');\n  },\n  // END PUBLIC API\n  internalNameLookup: function internalNameLookup(parent, name) {\n    this.lookupPropertyFunctionIsUsed = true;\n    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];\n  },\n\n  lookupPropertyFunctionIsUsed: false,\n\n  compile: function compile(environment, options, context, asObject) {\n    this.environment = environment;\n    this.options = options;\n    this.stringParams = this.options.stringParams;\n    this.trackIds = this.options.trackIds;\n    this.precompile = !asObject;\n\n    this.name = this.environment.name;\n    this.isChild = !!context;\n    this.context = context || {\n      decorators: [],\n      programs: [],\n      environments: []\n    };\n\n    this.preamble();\n\n    this.stackSlot = 0;\n    this.stackVars = [];\n    this.aliases = {};\n    this.registers = { list: [] };\n    this.hashes = [];\n    this.compileStack = [];\n    this.inlineStack = [];\n    this.blockParams = [];\n\n    this.compileChildren(environment, options);\n\n    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;\n    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n    var opcodes = environment.opcodes,\n        opcode = undefined,\n        firstLoc = undefined,\n        i = undefined,\n        l = undefined;\n\n    for (i = 0, l = opcodes.length; i < l; i++) {\n      opcode = opcodes[i];\n\n      this.source.currentLocation = opcode.loc;\n      firstLoc = firstLoc || opcode.loc;\n      this[opcode.opcode].apply(this, opcode.args);\n    }\n\n    // Flush any trailing content that might be pending.\n    this.source.currentLocation = firstLoc;\n    this.pushSource('');\n\n    /* istanbul ignore next */\n    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n      throw new _exception2['default']('Compile completed with content left on stack');\n    }\n\n    if (!this.decorators.isEmpty()) {\n      this.useDecorators = true;\n\n      this.decorators.prepend(['var decorators = container.decorators, ', this.lookupPropertyFunctionVarDeclaration(), ';\\n']);\n      this.decorators.push('return fn;');\n\n      if (asObject) {\n        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);\n      } else {\n        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\\n');\n        this.decorators.push('}\\n');\n        this.decorators = this.decorators.merge();\n      }\n    } else {\n      this.decorators = undefined;\n    }\n\n    var fn = this.createFunctionContext(asObject);\n    if (!this.isChild) {\n      var ret = {\n        compiler: this.compilerInfo(),\n        main: fn\n      };\n\n      if (this.decorators) {\n        ret.main_d = this.decorators; // eslint-disable-line camelcase\n        ret.useDecorators = true;\n      }\n\n      var _context = this.context;\n      var programs = _context.programs;\n      var decorators = _context.decorators;\n\n      for (i = 0, l = programs.length; i < l; i++) {\n        if (programs[i]) {\n          ret[i] = programs[i];\n          if (decorators[i]) {\n            ret[i + '_d'] = decorators[i];\n            ret.useDecorators = true;\n          }\n        }\n      }\n\n      if (this.environment.usePartial) {\n        ret.usePartial = true;\n      }\n      if (this.options.data) {\n        ret.useData = true;\n      }\n      if (this.useDepths) {\n        ret.useDepths = true;\n      }\n      if (this.useBlockParams) {\n        ret.useBlockParams = true;\n      }\n      if (this.options.compat) {\n        ret.compat = true;\n      }\n\n      if (!asObject) {\n        ret.compiler = JSON.stringify(ret.compiler);\n\n        this.source.currentLocation = { start: { line: 1, column: 0 } };\n        ret = this.objectLiteral(ret);\n\n        if (options.srcName) {\n          ret = ret.toStringWithSourceMap({ file: options.destName });\n          ret.map = ret.map && ret.map.toString();\n        } else {\n          ret = ret.toString();\n        }\n      } else {\n        ret.compilerOptions = this.options;\n      }\n\n      return ret;\n    } else {\n      return fn;\n    }\n  },\n\n  preamble: function preamble() {\n    // track the last context pushed into place to allow skipping the\n    // getContext opcode when it would be a noop\n    this.lastContext = 0;\n    this.source = new _codeGen2['default'](this.options.srcName);\n    this.decorators = new _codeGen2['default'](this.options.srcName);\n  },\n\n  createFunctionContext: function createFunctionContext(asObject) {\n    // istanbul ignore next\n\n    var _this = this;\n\n    var varDeclarations = '';\n\n    var locals = this.stackVars.concat(this.registers.list);\n    if (locals.length > 0) {\n      varDeclarations += ', ' + locals.join(', ');\n    }\n\n    // Generate minimizer alias mappings\n    //\n    // When using true SourceNodes, this will update all references to the given alias\n    // as the source nodes are reused in situ. For the non-source node compilation mode,\n    // aliases will not be used, but this case is already being run on the client and\n    // we aren't concern about minimizing the template size.\n    var aliasCount = 0;\n    Object.keys(this.aliases).forEach(function (alias) {\n      var node = _this.aliases[alias];\n      if (node.children && node.referenceCount > 1) {\n        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n        node.children[0] = 'alias' + aliasCount;\n      }\n    });\n\n    if (this.lookupPropertyFunctionIsUsed) {\n      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();\n    }\n\n    var params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n    if (this.useBlockParams || this.useDepths) {\n      params.push('blockParams');\n    }\n    if (this.useDepths) {\n      params.push('depths');\n    }\n\n    // Perform a second pass over the output to merge content when possible\n    var source = this.mergeSource(varDeclarations);\n\n    if (asObject) {\n      params.push(source);\n\n      return Function.apply(this, params);\n    } else {\n      return this.source.wrap(['function(', params.join(','), ') {\\n  ', source, '}']);\n    }\n  },\n  mergeSource: function mergeSource(varDeclarations) {\n    var isSimple = this.environment.isSimple,\n        appendOnly = !this.forceBuffer,\n        appendFirst = undefined,\n        sourceSeen = undefined,\n        bufferStart = undefined,\n        bufferEnd = undefined;\n    this.source.each(function (line) {\n      if (line.appendToBuffer) {\n        if (bufferStart) {\n          line.prepend('  + ');\n        } else {\n          bufferStart = line;\n        }\n        bufferEnd = line;\n      } else {\n        if (bufferStart) {\n          if (!sourceSeen) {\n            appendFirst = true;\n          } else {\n            bufferStart.prepend('buffer += ');\n          }\n          bufferEnd.add(';');\n          bufferStart = bufferEnd = undefined;\n        }\n\n        sourceSeen = true;\n        if (!isSimple) {\n          appendOnly = false;\n        }\n      }\n    });\n\n    if (appendOnly) {\n      if (bufferStart) {\n        bufferStart.prepend('return ');\n        bufferEnd.add(';');\n      } else if (!sourceSeen) {\n        this.source.push('return \"\";');\n      }\n    } else {\n      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n      if (bufferStart) {\n        bufferStart.prepend('return buffer + ');\n        bufferEnd.add(';');\n      } else {\n        this.source.push('return buffer;');\n      }\n    }\n\n    if (varDeclarations) {\n      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n'));\n    }\n\n    return this.source.merge();\n  },\n\n  lookupPropertyFunctionVarDeclaration: function lookupPropertyFunctionVarDeclaration() {\n    return '\\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\\n          return parent[propertyName];\\n        }\\n        return undefined\\n    }\\n    '.trim();\n  },\n\n  // [blockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // On stack, after: return value of blockHelperMissing\n  //\n  // The purpose of this opcode is to take a block of the form\n  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n  // replace it on the stack with the result of properly\n  // invoking blockHelperMissing.\n  blockValue: function blockValue(name) {\n    var blockHelperMissing = this.aliasable('container.hooks.blockHelperMissing'),\n        params = [this.contextName(0)];\n    this.setupHelperArgs(name, 0, params);\n\n    var blockName = this.popStack();\n    params.splice(1, 0, blockName);\n\n    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n  },\n\n  // [ambiguousBlockValue]\n  //\n  // On stack, before: hash, inverse, program, value\n  // Compiler value, before: lastHelper=value of last found helper, if any\n  // On stack, after, if no lastHelper: same as [blockValue]\n  // On stack, after, if lastHelper: value\n  ambiguousBlockValue: function ambiguousBlockValue() {\n    // We're being a bit cheeky and reusing the options value from the prior exec\n    var blockHelperMissing = this.aliasable('container.hooks.blockHelperMissing'),\n        params = [this.contextName(0)];\n    this.setupHelperArgs('', 0, params, true);\n\n    this.flushInline();\n\n    var current = this.topStack();\n    params.splice(1, 0, current);\n\n    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);\n  },\n\n  // [appendContent]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  //\n  // Appends the string value of `content` to the current buffer\n  appendContent: function appendContent(content) {\n    if (this.pendingContent) {\n      content = this.pendingContent + content;\n    } else {\n      this.pendingLocation = this.source.currentLocation;\n    }\n\n    this.pendingContent = content;\n  },\n\n  // [append]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Coerces `value` to a String and appends it to the current buffer.\n  //\n  // If `value` is truthy, or 0, it is coerced into a string and appended\n  // Otherwise, the empty string is appended\n  append: function append() {\n    if (this.isInline()) {\n      this.replaceStack(function (current) {\n        return [' != null ? ', current, ' : \"\"'];\n      });\n\n      this.pushSource(this.appendToBuffer(this.popStack()));\n    } else {\n      var local = this.popStack();\n      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);\n      if (this.environment.isSimple) {\n        this.pushSource(['else { ', this.appendToBuffer(\"''\", undefined, true), ' }']);\n      }\n    }\n  },\n\n  // [appendEscaped]\n  //\n  // On stack, before: value, ...\n  // On stack, after: ...\n  //\n  // Escape `value` and append it to the buffer\n  appendEscaped: function appendEscaped() {\n    this.pushSource(this.appendToBuffer([this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));\n  },\n\n  // [getContext]\n  //\n  // On stack, before: ...\n  // On stack, after: ...\n  // Compiler value, after: lastContext=depth\n  //\n  // Set the value of the `lastContext` compiler value to the depth\n  getContext: function getContext(depth) {\n    this.lastContext = depth;\n  },\n\n  // [pushContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext, ...\n  //\n  // Pushes the value of the current context onto the stack.\n  pushContext: function pushContext() {\n    this.pushStackLiteral(this.contextName(this.lastContext));\n  },\n\n  // [lookupOnContext]\n  //\n  // On stack, before: ...\n  // On stack, after: currentContext[name], ...\n  //\n  // Looks up the value of `name` on the current context and pushes\n  // it onto the stack.\n  lookupOnContext: function lookupOnContext(parts, falsy, strict, scoped) {\n    var i = 0;\n\n    if (!scoped && this.options.compat && !this.lastContext) {\n      // The depthed query is expected to handle the undefined logic for the root level that\n      // is implemented below, so we evaluate that directly in compat mode\n      this.push(this.depthedLookup(parts[i++]));\n    } else {\n      this.pushContext();\n    }\n\n    this.resolvePath('context', parts, i, falsy, strict);\n  },\n\n  // [lookupBlockParam]\n  //\n  // On stack, before: ...\n  // On stack, after: blockParam[name], ...\n  //\n  // Looks up the value of `parts` on the given block param and pushes\n  // it onto the stack.\n  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {\n    this.useBlockParams = true;\n\n    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n    this.resolvePath('context', parts, 1);\n  },\n\n  // [lookupData]\n  //\n  // On stack, before: ...\n  // On stack, after: data, ...\n  //\n  // Push the data lookup operator\n  lookupData: function lookupData(depth, parts, strict) {\n    if (!depth) {\n      this.pushStackLiteral('data');\n    } else {\n      this.pushStackLiteral('container.data(data, ' + depth + ')');\n    }\n\n    this.resolvePath('data', parts, 0, true, strict);\n  },\n\n  resolvePath: function resolvePath(type, parts, i, falsy, strict) {\n    // istanbul ignore next\n\n    var _this2 = this;\n\n    if (this.options.strict || this.options.assumeObjects) {\n      this.push(strictLookup(this.options.strict && strict, this, parts, type));\n      return;\n    }\n\n    var len = parts.length;\n    for (; i < len; i++) {\n      /* eslint-disable no-loop-func */\n      this.replaceStack(function (current) {\n        var lookup = _this2.nameLookup(current, parts[i], type);\n        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n        // needs to have the special handling for these values.\n        if (!falsy) {\n          return [' != null ? ', lookup, ' : ', current];\n        } else {\n          // Otherwise we can use generic falsy handling\n          return [' && ', lookup];\n        }\n      });\n      /* eslint-enable no-loop-func */\n    }\n  },\n\n  // [resolvePossibleLambda]\n  //\n  // On stack, before: value, ...\n  // On stack, after: resolved value, ...\n  //\n  // If the `value` is a lambda, replace it on the stack by\n  // the return value of the lambda\n  resolvePossibleLambda: function resolvePossibleLambda() {\n    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);\n  },\n\n  // [pushStringParam]\n  //\n  // On stack, before: ...\n  // On stack, after: string, currentContext, ...\n  //\n  // This opcode is designed for use in string mode, which\n  // provides the string value of a parameter along with its\n  // depth rather than resolving it immediately.\n  pushStringParam: function pushStringParam(string, type) {\n    this.pushContext();\n    this.pushString(type);\n\n    // If it's a subexpression, the string result\n    // will be pushed after this opcode.\n    if (type !== 'SubExpression') {\n      if (typeof string === 'string') {\n        this.pushString(string);\n      } else {\n        this.pushStackLiteral(string);\n      }\n    }\n  },\n\n  emptyHash: function emptyHash(omitEmpty) {\n    if (this.trackIds) {\n      this.push('{}'); // hashIds\n    }\n    if (this.stringParams) {\n      this.push('{}'); // hashContexts\n      this.push('{}'); // hashTypes\n    }\n    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n  },\n  pushHash: function pushHash() {\n    if (this.hash) {\n      this.hashes.push(this.hash);\n    }\n    this.hash = { values: {}, types: [], contexts: [], ids: [] };\n  },\n  popHash: function popHash() {\n    var hash = this.hash;\n    this.hash = this.hashes.pop();\n\n    if (this.trackIds) {\n      this.push(this.objectLiteral(hash.ids));\n    }\n    if (this.stringParams) {\n      this.push(this.objectLiteral(hash.contexts));\n      this.push(this.objectLiteral(hash.types));\n    }\n\n    this.push(this.objectLiteral(hash.values));\n  },\n\n  // [pushString]\n  //\n  // On stack, before: ...\n  // On stack, after: quotedString(string), ...\n  //\n  // Push a quoted version of `string` onto the stack\n  pushString: function pushString(string) {\n    this.pushStackLiteral(this.quotedString(string));\n  },\n\n  // [pushLiteral]\n  //\n  // On stack, before: ...\n  // On stack, after: value, ...\n  //\n  // Pushes a value onto the stack. This operation prevents\n  // the compiler from creating a temporary variable to hold\n  // it.\n  pushLiteral: function pushLiteral(value) {\n    this.pushStackLiteral(value);\n  },\n\n  // [pushProgram]\n  //\n  // On stack, before: ...\n  // On stack, after: program(guid), ...\n  //\n  // Push a program expression onto the stack. This takes\n  // a compile-time guid and converts it into a runtime-accessible\n  // expression.\n  pushProgram: function pushProgram(guid) {\n    if (guid != null) {\n      this.pushStackLiteral(this.programExpression(guid));\n    } else {\n      this.pushStackLiteral(null);\n    }\n  },\n\n  // [registerDecorator]\n  //\n  // On stack, before: hash, program, params..., ...\n  // On stack, after: ...\n  //\n  // Pops off the decorator's parameters, invokes the decorator,\n  // and inserts the decorator into the decorators list.\n  registerDecorator: function registerDecorator(paramSize, name) {\n    var foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n        options = this.setupHelperArgs(name, paramSize);\n\n    this.decorators.push(['fn = ', this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]), ' || fn;']);\n  },\n\n  // [invokeHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // Pops off the helper's parameters, invokes the helper,\n  // and pushes the helper's return value onto the stack.\n  //\n  // If the helper is not found, `helperMissing` is called.\n  invokeHelper: function invokeHelper(paramSize, name, isSimple) {\n    var nonHelper = this.popStack(),\n        helper = this.setupHelper(paramSize, name);\n\n    var possibleFunctionCalls = [];\n\n    if (isSimple) {\n      // direct call to helper\n      possibleFunctionCalls.push(helper.name);\n    }\n    // call a function from the input object\n    possibleFunctionCalls.push(nonHelper);\n    if (!this.options.strict) {\n      possibleFunctionCalls.push(this.aliasable('container.hooks.helperMissing'));\n    }\n\n    var functionLookupCode = ['(', this.itemsSeparatedBy(possibleFunctionCalls, '||'), ')'];\n    var functionCall = this.source.functionCall(functionLookupCode, 'call', helper.callParams);\n    this.push(functionCall);\n  },\n\n  itemsSeparatedBy: function itemsSeparatedBy(items, separator) {\n    var result = [];\n    result.push(items[0]);\n    for (var i = 1; i < items.length; i++) {\n      result.push(separator, items[i]);\n    }\n    return result;\n  },\n  // [invokeKnownHelper]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of helper invocation\n  //\n  // This operation is used when the helper is known to exist,\n  // so a `helperMissing` fallback is not required.\n  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {\n    var helper = this.setupHelper(paramSize, name);\n    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n  },\n\n  // [invokeAmbiguous]\n  //\n  // On stack, before: hash, inverse, program, params..., ...\n  // On stack, after: result of disambiguation\n  //\n  // This operation is used when an expression like `{{foo}}`\n  // is provided, but we don't know at compile-time whether it\n  // is a helper or a path.\n  //\n  // This operation emits more code than the other options,\n  // and can be avoided by passing the `knownHelpers` and\n  // `knownHelpersOnly` flags at compile-time.\n  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {\n    this.useRegister('helper');\n\n    var nonHelper = this.popStack();\n\n    this.emptyHash();\n    var helper = this.setupHelper(0, name, helperCall);\n\n    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');\n\n    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n    if (!this.options.strict) {\n      lookup[0] = '(helper = ';\n      lookup.push(' != null ? helper : ', this.aliasable('container.hooks.helperMissing'));\n    }\n\n    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('\"function\"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);\n  },\n\n  // [invokePartial]\n  //\n  // On stack, before: context, ...\n  // On stack after: result of partial invocation\n  //\n  // This operation pops off a context, invokes a partial with that context,\n  // and pushes the result of the invocation back.\n  invokePartial: function invokePartial(isDynamic, name, indent) {\n    var params = [],\n        options = this.setupParams(name, 1, params);\n\n    if (isDynamic) {\n      name = this.popStack();\n      delete options.name;\n    }\n\n    if (indent) {\n      options.indent = JSON.stringify(indent);\n    }\n    options.helpers = 'helpers';\n    options.partials = 'partials';\n    options.decorators = 'container.decorators';\n\n    if (!isDynamic) {\n      params.unshift(this.nameLookup('partials', name, 'partial'));\n    } else {\n      params.unshift(name);\n    }\n\n    if (this.options.compat) {\n      options.depths = 'depths';\n    }\n    options = this.objectLiteral(options);\n    params.push(options);\n\n    this.push(this.source.functionCall('container.invokePartial', '', params));\n  },\n\n  // [assignToHash]\n  //\n  // On stack, before: value, ..., hash, ...\n  // On stack, after: ..., hash, ...\n  //\n  // Pops a value off the stack and assigns it to the current hash\n  assignToHash: function assignToHash(key) {\n    var value = this.popStack(),\n        context = undefined,\n        type = undefined,\n        id = undefined;\n\n    if (this.trackIds) {\n      id = this.popStack();\n    }\n    if (this.stringParams) {\n      type = this.popStack();\n      context = this.popStack();\n    }\n\n    var hash = this.hash;\n    if (context) {\n      hash.contexts[key] = context;\n    }\n    if (type) {\n      hash.types[key] = type;\n    }\n    if (id) {\n      hash.ids[key] = id;\n    }\n    hash.values[key] = value;\n  },\n\n  pushId: function pushId(type, name, child) {\n    if (type === 'BlockParam') {\n      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));\n    } else if (type === 'PathExpression') {\n      this.pushString(name);\n    } else if (type === 'SubExpression') {\n      this.pushStackLiteral('true');\n    } else {\n      this.pushStackLiteral('null');\n    }\n  },\n\n  // HELPERS\n\n  compiler: JavaScriptCompiler,\n\n  compileChildren: function compileChildren(environment, options) {\n    var children = environment.children,\n        child = undefined,\n        compiler = undefined;\n\n    for (var i = 0, l = children.length; i < l; i++) {\n      child = children[i];\n      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n      var existing = this.matchExistingProgram(child);\n\n      if (existing == null) {\n        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n        var index = this.context.programs.length;\n        child.index = index;\n        child.name = 'program' + index;\n        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);\n        this.context.decorators[index] = compiler.decorators;\n        this.context.environments[index] = child;\n\n        this.useDepths = this.useDepths || compiler.useDepths;\n        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n        child.useDepths = this.useDepths;\n        child.useBlockParams = this.useBlockParams;\n      } else {\n        child.index = existing.index;\n        child.name = 'program' + existing.index;\n\n        this.useDepths = this.useDepths || existing.useDepths;\n        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n      }\n    }\n  },\n  matchExistingProgram: function matchExistingProgram(child) {\n    for (var i = 0, len = this.context.environments.length; i < len; i++) {\n      var environment = this.context.environments[i];\n      if (environment && environment.equals(child)) {\n        return environment;\n      }\n    }\n  },\n\n  programExpression: function programExpression(guid) {\n    var child = this.environment.children[guid],\n        programParams = [child.index, 'data', child.blockParams];\n\n    if (this.useBlockParams || this.useDepths) {\n      programParams.push('blockParams');\n    }\n    if (this.useDepths) {\n      programParams.push('depths');\n    }\n\n    return 'container.program(' + programParams.join(', ') + ')';\n  },\n\n  useRegister: function useRegister(name) {\n    if (!this.registers[name]) {\n      this.registers[name] = true;\n      this.registers.list.push(name);\n    }\n  },\n\n  push: function push(expr) {\n    if (!(expr instanceof Literal)) {\n      expr = this.source.wrap(expr);\n    }\n\n    this.inlineStack.push(expr);\n    return expr;\n  },\n\n  pushStackLiteral: function pushStackLiteral(item) {\n    this.push(new Literal(item));\n  },\n\n  pushSource: function pushSource(source) {\n    if (this.pendingContent) {\n      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));\n      this.pendingContent = undefined;\n    }\n\n    if (source) {\n      this.source.push(source);\n    }\n  },\n\n  replaceStack: function replaceStack(callback) {\n    var prefix = ['('],\n        stack = undefined,\n        createdStack = undefined,\n        usedLiteral = undefined;\n\n    /* istanbul ignore next */\n    if (!this.isInline()) {\n      throw new _exception2['default']('replaceStack on non-inline');\n    }\n\n    // We want to merge the inline statement into the replacement statement via ','\n    var top = this.popStack(true);\n\n    if (top instanceof Literal) {\n      // Literals do not need to be inlined\n      stack = [top.value];\n      prefix = ['(', stack];\n      usedLiteral = true;\n    } else {\n      // Get or create the current stack name for use by the inline\n      createdStack = true;\n      var _name = this.incrStack();\n\n      prefix = ['((', this.push(_name), ' = ', top, ')'];\n      stack = this.topStack();\n    }\n\n    var item = callback.call(this, stack);\n\n    if (!usedLiteral) {\n      this.popStack();\n    }\n    if (createdStack) {\n      this.stackSlot--;\n    }\n    this.push(prefix.concat(item, ')'));\n  },\n\n  incrStack: function incrStack() {\n    this.stackSlot++;\n    if (this.stackSlot > this.stackVars.length) {\n      this.stackVars.push('stack' + this.stackSlot);\n    }\n    return this.topStackName();\n  },\n  topStackName: function topStackName() {\n    return 'stack' + this.stackSlot;\n  },\n  flushInline: function flushInline() {\n    var inlineStack = this.inlineStack;\n    this.inlineStack = [];\n    for (var i = 0, len = inlineStack.length; i < len; i++) {\n      var entry = inlineStack[i];\n      /* istanbul ignore if */\n      if (entry instanceof Literal) {\n        this.compileStack.push(entry);\n      } else {\n        var stack = this.incrStack();\n        this.pushSource([stack, ' = ', entry, ';']);\n        this.compileStack.push(stack);\n      }\n    }\n  },\n  isInline: function isInline() {\n    return this.inlineStack.length;\n  },\n\n  popStack: function popStack(wrapped) {\n    var inline = this.isInline(),\n        item = (inline ? this.inlineStack : this.compileStack).pop();\n\n    if (!wrapped && item instanceof Literal) {\n      return item.value;\n    } else {\n      if (!inline) {\n        /* istanbul ignore next */\n        if (!this.stackSlot) {\n          throw new _exception2['default']('Invalid stack pop');\n        }\n        this.stackSlot--;\n      }\n      return item;\n    }\n  },\n\n  topStack: function topStack() {\n    var stack = this.isInline() ? this.inlineStack : this.compileStack,\n        item = stack[stack.length - 1];\n\n    /* istanbul ignore if */\n    if (item instanceof Literal) {\n      return item.value;\n    } else {\n      return item;\n    }\n  },\n\n  contextName: function contextName(context) {\n    if (this.useDepths && context) {\n      return 'depths[' + context + ']';\n    } else {\n      return 'depth' + context;\n    }\n  },\n\n  quotedString: function quotedString(str) {\n    return this.source.quotedString(str);\n  },\n\n  objectLiteral: function objectLiteral(obj) {\n    return this.source.objectLiteral(obj);\n  },\n\n  aliasable: function aliasable(name) {\n    var ret = this.aliases[name];\n    if (ret) {\n      ret.referenceCount++;\n      return ret;\n    }\n\n    ret = this.aliases[name] = this.source.wrap(name);\n    ret.aliasable = true;\n    ret.referenceCount = 1;\n\n    return ret;\n  },\n\n  setupHelper: function setupHelper(paramSize, name, blockHelper) {\n    var params = [],\n        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n    var foundHelper = this.nameLookup('helpers', name, 'helper'),\n        callContext = this.aliasable(this.contextName(0) + ' != null ? ' + this.contextName(0) + ' : (container.nullContext || {})');\n\n    return {\n      params: params,\n      paramsInit: paramsInit,\n      name: foundHelper,\n      callParams: [callContext].concat(params)\n    };\n  },\n\n  setupParams: function setupParams(helper, paramSize, params) {\n    var options = {},\n        contexts = [],\n        types = [],\n        ids = [],\n        objectArgs = !params,\n        param = undefined;\n\n    if (objectArgs) {\n      params = [];\n    }\n\n    options.name = this.quotedString(helper);\n    options.hash = this.popStack();\n\n    if (this.trackIds) {\n      options.hashIds = this.popStack();\n    }\n    if (this.stringParams) {\n      options.hashTypes = this.popStack();\n      options.hashContexts = this.popStack();\n    }\n\n    var inverse = this.popStack(),\n        program = this.popStack();\n\n    // Avoid setting fn and inverse if neither are set. This allows\n    // helpers to do a check for `if (options.fn)`\n    if (program || inverse) {\n      options.fn = program || 'container.noop';\n      options.inverse = inverse || 'container.noop';\n    }\n\n    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n    // so we need to pop them off the stack in reverse order\n    var i = paramSize;\n    while (i--) {\n      param = this.popStack();\n      params[i] = param;\n\n      if (this.trackIds) {\n        ids[i] = this.popStack();\n      }\n      if (this.stringParams) {\n        types[i] = this.popStack();\n        contexts[i] = this.popStack();\n      }\n    }\n\n    if (objectArgs) {\n      options.args = this.source.generateArray(params);\n    }\n\n    if (this.trackIds) {\n      options.ids = this.source.generateArray(ids);\n    }\n    if (this.stringParams) {\n      options.types = this.source.generateArray(types);\n      options.contexts = this.source.generateArray(contexts);\n    }\n\n    if (this.options.data) {\n      options.data = 'data';\n    }\n    if (this.useBlockParams) {\n      options.blockParams = 'blockParams';\n    }\n    return options;\n  },\n\n  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {\n    var options = this.setupParams(helper, paramSize, params);\n    options.loc = JSON.stringify(this.source.currentLocation);\n    options = this.objectLiteral(options);\n    if (useRegister) {\n      this.useRegister('options');\n      params.push('options');\n      return ['options=', options];\n    } else if (params) {\n      params.push(options);\n      return '';\n    } else {\n      return options;\n    }\n  }\n};\n\n(function () {\n  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');\n\n  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};\n\n  for (var i = 0, l = reservedWords.length; i < l; i++) {\n    compilerWords[reservedWords[i]] = true;\n  }\n})();\n\n/**\n * @deprecated May be removed in the next major version\n */\nJavaScriptCompiler.isValidJavaScriptVariableName = function (name) {\n  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);\n};\n\nfunction strictLookup(requireTerminal, compiler, parts, type) {\n  var stack = compiler.popStack(),\n      i = 0,\n      len = parts.length;\n  if (requireTerminal) {\n    len--;\n  }\n\n  for (; i < len; i++) {\n    stack = compiler.nameLookup(stack, parts[i], type);\n  }\n\n  if (requireTerminal) {\n    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ', ', JSON.stringify(compiler.source.currentLocation), ' )'];\n  } else {\n    return stack;\n  }\n}\n\nexports.default = JavaScriptCompiler;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/compiler/javascript-compiler.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js":
/*!************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js ***!
  \************************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("// File ignored in coverage tests via setting in .istanbul.yml\n/* Jison generated parser */\n\n\nexports.__esModule = true;\nvar handlebars = (function () {\n    var parser = { trace: function trace() {},\n        yy: {},\n        symbols_: { \"error\": 2, \"root\": 3, \"program\": 4, \"EOF\": 5, \"program_repetition0\": 6, \"statement\": 7, \"mustache\": 8, \"block\": 9, \"rawBlock\": 10, \"partial\": 11, \"partialBlock\": 12, \"content\": 13, \"COMMENT\": 14, \"CONTENT\": 15, \"openRawBlock\": 16, \"rawBlock_repetition0\": 17, \"END_RAW_BLOCK\": 18, \"OPEN_RAW_BLOCK\": 19, \"helperName\": 20, \"openRawBlock_repetition0\": 21, \"openRawBlock_option0\": 22, \"CLOSE_RAW_BLOCK\": 23, \"openBlock\": 24, \"block_option0\": 25, \"closeBlock\": 26, \"openInverse\": 27, \"block_option1\": 28, \"OPEN_BLOCK\": 29, \"openBlock_repetition0\": 30, \"openBlock_option0\": 31, \"openBlock_option1\": 32, \"CLOSE\": 33, \"OPEN_INVERSE\": 34, \"openInverse_repetition0\": 35, \"openInverse_option0\": 36, \"openInverse_option1\": 37, \"openInverseChain\": 38, \"OPEN_INVERSE_CHAIN\": 39, \"openInverseChain_repetition0\": 40, \"openInverseChain_option0\": 41, \"openInverseChain_option1\": 42, \"inverseAndProgram\": 43, \"INVERSE\": 44, \"inverseChain\": 45, \"inverseChain_option0\": 46, \"OPEN_ENDBLOCK\": 47, \"OPEN\": 48, \"mustache_repetition0\": 49, \"mustache_option0\": 50, \"OPEN_UNESCAPED\": 51, \"mustache_repetition1\": 52, \"mustache_option1\": 53, \"CLOSE_UNESCAPED\": 54, \"OPEN_PARTIAL\": 55, \"partialName\": 56, \"partial_repetition0\": 57, \"partial_option0\": 58, \"openPartialBlock\": 59, \"OPEN_PARTIAL_BLOCK\": 60, \"openPartialBlock_repetition0\": 61, \"openPartialBlock_option0\": 62, \"param\": 63, \"sexpr\": 64, \"OPEN_SEXPR\": 65, \"sexpr_repetition0\": 66, \"sexpr_option0\": 67, \"CLOSE_SEXPR\": 68, \"hash\": 69, \"hash_repetition_plus0\": 70, \"hashSegment\": 71, \"ID\": 72, \"EQUALS\": 73, \"blockParams\": 74, \"OPEN_BLOCK_PARAMS\": 75, \"blockParams_repetition_plus0\": 76, \"CLOSE_BLOCK_PARAMS\": 77, \"path\": 78, \"dataName\": 79, \"STRING\": 80, \"NUMBER\": 81, \"BOOLEAN\": 82, \"UNDEFINED\": 83, \"NULL\": 84, \"DATA\": 85, \"pathSegments\": 86, \"SEP\": 87, \"$accept\": 0, \"$end\": 1 },\n        terminals_: { 2: \"error\", 5: \"EOF\", 14: \"COMMENT\", 15: \"CONTENT\", 18: \"END_RAW_BLOCK\", 19: \"OPEN_RAW_BLOCK\", 23: \"CLOSE_RAW_BLOCK\", 29: \"OPEN_BLOCK\", 33: \"CLOSE\", 34: \"OPEN_INVERSE\", 39: \"OPEN_INVERSE_CHAIN\", 44: \"INVERSE\", 47: \"OPEN_ENDBLOCK\", 48: \"OPEN\", 51: \"OPEN_UNESCAPED\", 54: \"CLOSE_UNESCAPED\", 55: \"OPEN_PARTIAL\", 60: \"OPEN_PARTIAL_BLOCK\", 65: \"OPEN_SEXPR\", 68: \"CLOSE_SEXPR\", 72: \"ID\", 73: \"EQUALS\", 75: \"OPEN_BLOCK_PARAMS\", 77: \"CLOSE_BLOCK_PARAMS\", 80: \"STRING\", 81: \"NUMBER\", 82: \"BOOLEAN\", 83: \"UNDEFINED\", 84: \"NULL\", 85: \"DATA\", 87: \"SEP\" },\n        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 0], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],\n        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n\n            var $0 = $$.length - 1;\n            switch (yystate) {\n                case 1:\n                    return $$[$0 - 1];\n                    break;\n                case 2:\n                    this.$ = yy.prepareProgram($$[$0]);\n                    break;\n                case 3:\n                    this.$ = $$[$0];\n                    break;\n                case 4:\n                    this.$ = $$[$0];\n                    break;\n                case 5:\n                    this.$ = $$[$0];\n                    break;\n                case 6:\n                    this.$ = $$[$0];\n                    break;\n                case 7:\n                    this.$ = $$[$0];\n                    break;\n                case 8:\n                    this.$ = $$[$0];\n                    break;\n                case 9:\n                    this.$ = {\n                        type: 'CommentStatement',\n                        value: yy.stripComment($$[$0]),\n                        strip: yy.stripFlags($$[$0], $$[$0]),\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 10:\n                    this.$ = {\n                        type: 'ContentStatement',\n                        original: $$[$0],\n                        value: $$[$0],\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 11:\n                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n                    break;\n                case 12:\n                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };\n                    break;\n                case 13:\n                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);\n                    break;\n                case 14:\n                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);\n                    break;\n                case 15:\n                    this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n                    break;\n                case 16:\n                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n                    break;\n                case 17:\n                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n                    break;\n                case 18:\n                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };\n                    break;\n                case 19:\n                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),\n                        program = yy.prepareProgram([inverse], $$[$0 - 1].loc);\n                    program.chained = true;\n\n                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };\n\n                    break;\n                case 20:\n                    this.$ = $$[$0];\n                    break;\n                case 21:\n                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };\n                    break;\n                case 22:\n                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n                    break;\n                case 23:\n                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n                    break;\n                case 24:\n                    this.$ = {\n                        type: 'PartialStatement',\n                        name: $$[$0 - 3],\n                        params: $$[$0 - 2],\n                        hash: $$[$0 - 1],\n                        indent: '',\n                        strip: yy.stripFlags($$[$0 - 4], $$[$0]),\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 25:\n                    this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n                    break;\n                case 26:\n                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };\n                    break;\n                case 27:\n                    this.$ = $$[$0];\n                    break;\n                case 28:\n                    this.$ = $$[$0];\n                    break;\n                case 29:\n                    this.$ = {\n                        type: 'SubExpression',\n                        path: $$[$0 - 3],\n                        params: $$[$0 - 2],\n                        hash: $$[$0 - 1],\n                        loc: yy.locInfo(this._$)\n                    };\n\n                    break;\n                case 30:\n                    this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };\n                    break;\n                case 31:\n                    this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };\n                    break;\n                case 32:\n                    this.$ = yy.id($$[$0 - 1]);\n                    break;\n                case 33:\n                    this.$ = $$[$0];\n                    break;\n                case 34:\n                    this.$ = $$[$0];\n                    break;\n                case 35:\n                    this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };\n                    break;\n                case 36:\n                    this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };\n                    break;\n                case 37:\n                    this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };\n                    break;\n                case 38:\n                    this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };\n                    break;\n                case 39:\n                    this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };\n                    break;\n                case 40:\n                    this.$ = $$[$0];\n                    break;\n                case 41:\n                    this.$ = $$[$0];\n                    break;\n                case 42:\n                    this.$ = yy.preparePath(true, $$[$0], this._$);\n                    break;\n                case 43:\n                    this.$ = yy.preparePath(false, $$[$0], this._$);\n                    break;\n                case 44:\n                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];\n                    break;\n                case 45:\n                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];\n                    break;\n                case 46:\n                    this.$ = [];\n                    break;\n                case 47:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 48:\n                    this.$ = [];\n                    break;\n                case 49:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 50:\n                    this.$ = [];\n                    break;\n                case 51:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 58:\n                    this.$ = [];\n                    break;\n                case 59:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 64:\n                    this.$ = [];\n                    break;\n                case 65:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 70:\n                    this.$ = [];\n                    break;\n                case 71:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 78:\n                    this.$ = [];\n                    break;\n                case 79:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 82:\n                    this.$ = [];\n                    break;\n                case 83:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 86:\n                    this.$ = [];\n                    break;\n                case 87:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 90:\n                    this.$ = [];\n                    break;\n                case 91:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 94:\n                    this.$ = [];\n                    break;\n                case 95:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 98:\n                    this.$ = [$$[$0]];\n                    break;\n                case 99:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n                case 100:\n                    this.$ = [$$[$0]];\n                    break;\n                case 101:\n                    $$[$0 - 1].push($$[$0]);\n                    break;\n            }\n        },\n        table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 15: [2, 48], 17: 39, 18: [2, 48] }, { 20: 41, 56: 40, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 44, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 45, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 41, 56: 48, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 49, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 50] }, { 72: [1, 35], 86: 51 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 52, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 53, 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 54, 47: [2, 54] }, { 28: 59, 43: 60, 44: [1, 58], 47: [2, 56] }, { 13: 62, 15: [1, 20], 18: [1, 61] }, { 33: [2, 86], 57: 63, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 64, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 65, 47: [1, 66] }, { 30: 67, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 68, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 69, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 70, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 74, 33: [2, 80], 50: 71, 63: 72, 64: 75, 65: [1, 43], 69: 73, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 79] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 50] }, { 20: 74, 53: 80, 54: [2, 84], 63: 81, 64: 75, 65: [1, 43], 69: 82, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 83, 47: [1, 66] }, { 47: [2, 55] }, { 4: 84, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 85, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 86, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 87, 47: [1, 66] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 74, 33: [2, 88], 58: 88, 63: 89, 64: 75, 65: [1, 43], 69: 90, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 91, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 92, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 31: 93, 33: [2, 60], 63: 94, 64: 75, 65: [1, 43], 69: 95, 70: 76, 71: 77, 72: [1, 78], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 66], 36: 96, 63: 97, 64: 75, 65: [1, 43], 69: 98, 70: 76, 71: 77, 72: [1, 78], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 22: 99, 23: [2, 52], 63: 100, 64: 75, 65: [1, 43], 69: 101, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 92], 62: 102, 63: 103, 64: 75, 65: [1, 43], 69: 104, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 105] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 106, 72: [1, 107], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 108], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 109] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 111, 46: 110, 47: [2, 76] }, { 33: [2, 70], 40: 112, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 113] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 74, 63: 115, 64: 75, 65: [1, 43], 67: 114, 68: [2, 96], 69: 116, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 117] }, { 32: 118, 33: [2, 62], 74: 119, 75: [1, 120] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 121, 74: 122, 75: [1, 120] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 123] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 124] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 108] }, { 20: 74, 63: 125, 64: 75, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 74, 33: [2, 72], 41: 126, 63: 127, 64: 75, 65: [1, 43], 69: 128, 70: 76, 71: 77, 72: [1, 78], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 129] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 130] }, { 33: [2, 63] }, { 72: [1, 132], 76: 131 }, { 33: [1, 133] }, { 33: [2, 69] }, { 15: [2, 12], 18: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 134, 74: 135, 75: [1, 120] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 137], 77: [1, 136] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 138] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],\n        defaultActions: { 4: [2, 1], 54: [2, 55], 56: [2, 20], 60: [2, 57], 73: [2, 81], 82: [2, 85], 86: [2, 18], 90: [2, 89], 101: [2, 53], 104: [2, 93], 110: [2, 19], 111: [2, 77], 116: [2, 97], 119: [2, 63], 122: [2, 69], 135: [2, 75], 136: [2, 32] },\n        parseError: function parseError(str, hash) {\n            throw new Error(str);\n        },\n        parse: function parse(input) {\n            var self = this,\n                stack = [0],\n                vstack = [null],\n                lstack = [],\n                table = this.table,\n                yytext = \"\",\n                yylineno = 0,\n                yyleng = 0,\n                recovering = 0,\n                TERROR = 2,\n                EOF = 1;\n            this.lexer.setInput(input);\n            this.lexer.yy = this.yy;\n            this.yy.lexer = this.lexer;\n            this.yy.parser = this;\n            if (typeof this.lexer.yylloc == \"undefined\") this.lexer.yylloc = {};\n            var yyloc = this.lexer.yylloc;\n            lstack.push(yyloc);\n            var ranges = this.lexer.options && this.lexer.options.ranges;\n            if (typeof this.yy.parseError === \"function\") this.parseError = this.yy.parseError;\n            function popStack(n) {\n                stack.length = stack.length - 2 * n;\n                vstack.length = vstack.length - n;\n                lstack.length = lstack.length - n;\n            }\n            function lex() {\n                var token;\n                token = self.lexer.lex() || 1;\n                if (typeof token !== \"number\") {\n                    token = self.symbols_[token] || token;\n                }\n                return token;\n            }\n            var symbol,\n                preErrorSymbol,\n                state,\n                action,\n                a,\n                r,\n                yyval = {},\n                p,\n                len,\n                newState,\n                expected;\n            while (true) {\n                state = stack[stack.length - 1];\n                if (this.defaultActions[state]) {\n                    action = this.defaultActions[state];\n                } else {\n                    if (symbol === null || typeof symbol == \"undefined\") {\n                        symbol = lex();\n                    }\n                    action = table[state] && table[state][symbol];\n                }\n                if (typeof action === \"undefined\" || !action.length || !action[0]) {\n                    var errStr = \"\";\n                    if (!recovering) {\n                        expected = [];\n                        for (p in table[state]) if (this.terminals_[p] && p > 2) {\n                            expected.push(\"'\" + this.terminals_[p] + \"'\");\n                        }\n                        if (this.lexer.showPosition) {\n                            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                        } else {\n                            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1 ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                        }\n                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });\n                    }\n                }\n                if (action[0] instanceof Array && action.length > 1) {\n                    throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n                }\n                switch (action[0]) {\n                    case 1:\n                        stack.push(symbol);\n                        vstack.push(this.lexer.yytext);\n                        lstack.push(this.lexer.yylloc);\n                        stack.push(action[1]);\n                        symbol = null;\n                        if (!preErrorSymbol) {\n                            yyleng = this.lexer.yyleng;\n                            yytext = this.lexer.yytext;\n                            yylineno = this.lexer.yylineno;\n                            yyloc = this.lexer.yylloc;\n                            if (recovering > 0) recovering--;\n                        } else {\n                            symbol = preErrorSymbol;\n                            preErrorSymbol = null;\n                        }\n                        break;\n                    case 2:\n                        len = this.productions_[action[1]][1];\n                        yyval.$ = vstack[vstack.length - len];\n                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };\n                        if (ranges) {\n                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n                        }\n                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n                        if (typeof r !== \"undefined\") {\n                            return r;\n                        }\n                        if (len) {\n                            stack = stack.slice(0, -1 * len * 2);\n                            vstack = vstack.slice(0, -1 * len);\n                            lstack = lstack.slice(0, -1 * len);\n                        }\n                        stack.push(this.productions_[action[1]][0]);\n                        vstack.push(yyval.$);\n                        lstack.push(yyval._$);\n                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n                        stack.push(newState);\n                        break;\n                    case 3:\n                        return true;\n                }\n            }\n            return true;\n        }\n    };\n    /* Jison generated lexer */\n    var lexer = (function () {\n        var lexer = { EOF: 1,\n            parseError: function parseError(str, hash) {\n                if (this.yy.parser) {\n                    this.yy.parser.parseError(str, hash);\n                } else {\n                    throw new Error(str);\n                }\n            },\n            setInput: function setInput(input) {\n                this._input = input;\n                this._more = this._less = this.done = false;\n                this.yylineno = this.yyleng = 0;\n                this.yytext = this.matched = this.match = '';\n                this.conditionStack = ['INITIAL'];\n                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };\n                if (this.options.ranges) this.yylloc.range = [0, 0];\n                this.offset = 0;\n                return this;\n            },\n            input: function input() {\n                var ch = this._input[0];\n                this.yytext += ch;\n                this.yyleng++;\n                this.offset++;\n                this.match += ch;\n                this.matched += ch;\n                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n                if (lines) {\n                    this.yylineno++;\n                    this.yylloc.last_line++;\n                } else {\n                    this.yylloc.last_column++;\n                }\n                if (this.options.ranges) this.yylloc.range[1]++;\n\n                this._input = this._input.slice(1);\n                return ch;\n            },\n            unput: function unput(ch) {\n                var len = ch.length;\n                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n                this._input = ch + this._input;\n                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n                //this.yyleng -= len;\n                this.offset -= len;\n                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n                this.match = this.match.substr(0, this.match.length - 1);\n                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n                if (lines.length - 1) this.yylineno -= lines.length - 1;\n                var r = this.yylloc.range;\n\n                this.yylloc = { first_line: this.yylloc.first_line,\n                    last_line: this.yylineno + 1,\n                    first_column: this.yylloc.first_column,\n                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n                };\n\n                if (this.options.ranges) {\n                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n                }\n                return this;\n            },\n            more: function more() {\n                this._more = true;\n                return this;\n            },\n            less: function less(n) {\n                this.unput(this.match.slice(n));\n            },\n            pastInput: function pastInput() {\n                var past = this.matched.substr(0, this.matched.length - this.match.length);\n                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n            },\n            upcomingInput: function upcomingInput() {\n                var next = this.match;\n                if (next.length < 20) {\n                    next += this._input.substr(0, 20 - next.length);\n                }\n                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n            },\n            showPosition: function showPosition() {\n                var pre = this.pastInput();\n                var c = new Array(pre.length + 1).join(\"-\");\n                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n            },\n            next: function next() {\n                if (this.done) {\n                    return this.EOF;\n                }\n                if (!this._input) this.done = true;\n\n                var token, match, tempMatch, index, col, lines;\n                if (!this._more) {\n                    this.yytext = '';\n                    this.match = '';\n                }\n                var rules = this._currentRules();\n                for (var i = 0; i < rules.length; i++) {\n                    tempMatch = this._input.match(this.rules[rules[i]]);\n                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                        match = tempMatch;\n                        index = i;\n                        if (!this.options.flex) break;\n                    }\n                }\n                if (match) {\n                    lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n                    if (lines) this.yylineno += lines.length;\n                    this.yylloc = { first_line: this.yylloc.last_line,\n                        last_line: this.yylineno + 1,\n                        first_column: this.yylloc.last_column,\n                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length };\n                    this.yytext += match[0];\n                    this.match += match[0];\n                    this.matches = match;\n                    this.yyleng = this.yytext.length;\n                    if (this.options.ranges) {\n                        this.yylloc.range = [this.offset, this.offset += this.yyleng];\n                    }\n                    this._more = false;\n                    this._input = this._input.slice(match[0].length);\n                    this.matched += match[0];\n                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);\n                    if (this.done && this._input) this.done = false;\n                    if (token) return token;else return;\n                }\n                if (this._input === \"\") {\n                    return this.EOF;\n                } else {\n                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), { text: \"\", token: null, line: this.yylineno });\n                }\n            },\n            lex: function lex() {\n                var r = this.next();\n                if (typeof r !== 'undefined') {\n                    return r;\n                } else {\n                    return this.lex();\n                }\n            },\n            begin: function begin(condition) {\n                this.conditionStack.push(condition);\n            },\n            popState: function popState() {\n                return this.conditionStack.pop();\n            },\n            _currentRules: function _currentRules() {\n                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n            },\n            topState: function topState() {\n                return this.conditionStack[this.conditionStack.length - 2];\n            },\n            pushState: function begin(condition) {\n                this.begin(condition);\n            } };\n        lexer.options = {};\n        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\n            function strip(start, end) {\n                return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n            }\n\n            var YYSTATE = YY_START;\n            switch ($avoiding_name_collisions) {\n                case 0:\n                    if (yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n                        strip(0, 1);\n                        this.begin(\"mu\");\n                    } else if (yy_.yytext.slice(-1) === \"\\\\\") {\n                        strip(0, 1);\n                        this.begin(\"emu\");\n                    } else {\n                        this.begin(\"mu\");\n                    }\n                    if (yy_.yytext) return 15;\n\n                    break;\n                case 1:\n                    return 15;\n                    break;\n                case 2:\n                    this.popState();\n                    return 15;\n\n                    break;\n                case 3:\n                    this.begin('raw');return 15;\n                    break;\n                case 4:\n                    this.popState();\n                    // Should be using `this.topState()` below, but it currently\n                    // returns the second top instead of the first top. Opened an\n                    // issue about it at https://github.com/zaach/jison/issues/291\n                    if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {\n                        return 15;\n                    } else {\n                        strip(5, 9);\n                        return 'END_RAW_BLOCK';\n                    }\n\n                    break;\n                case 5:\n                    return 15;\n                    break;\n                case 6:\n                    this.popState();\n                    return 14;\n\n                    break;\n                case 7:\n                    return 65;\n                    break;\n                case 8:\n                    return 68;\n                    break;\n                case 9:\n                    return 19;\n                    break;\n                case 10:\n                    this.popState();\n                    this.begin('raw');\n                    return 23;\n\n                    break;\n                case 11:\n                    return 55;\n                    break;\n                case 12:\n                    return 60;\n                    break;\n                case 13:\n                    return 29;\n                    break;\n                case 14:\n                    return 47;\n                    break;\n                case 15:\n                    this.popState();return 44;\n                    break;\n                case 16:\n                    this.popState();return 44;\n                    break;\n                case 17:\n                    return 34;\n                    break;\n                case 18:\n                    return 39;\n                    break;\n                case 19:\n                    return 51;\n                    break;\n                case 20:\n                    return 48;\n                    break;\n                case 21:\n                    this.unput(yy_.yytext);\n                    this.popState();\n                    this.begin('com');\n\n                    break;\n                case 22:\n                    this.popState();\n                    return 14;\n\n                    break;\n                case 23:\n                    return 48;\n                    break;\n                case 24:\n                    return 73;\n                    break;\n                case 25:\n                    return 72;\n                    break;\n                case 26:\n                    return 72;\n                    break;\n                case 27:\n                    return 87;\n                    break;\n                case 28:\n                    // ignore whitespace\n                    break;\n                case 29:\n                    this.popState();return 54;\n                    break;\n                case 30:\n                    this.popState();return 33;\n                    break;\n                case 31:\n                    yy_.yytext = strip(1, 2).replace(/\\\\\"/g, '\"');return 80;\n                    break;\n                case 32:\n                    yy_.yytext = strip(1, 2).replace(/\\\\'/g, \"'\");return 80;\n                    break;\n                case 33:\n                    return 85;\n                    break;\n                case 34:\n                    return 82;\n                    break;\n                case 35:\n                    return 82;\n                    break;\n                case 36:\n                    return 83;\n                    break;\n                case 37:\n                    return 84;\n                    break;\n                case 38:\n                    return 81;\n                    break;\n                case 39:\n                    return 75;\n                    break;\n                case 40:\n                    return 77;\n                    break;\n                case 41:\n                    return 72;\n                    break;\n                case 42:\n                    yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g, '$1');return 72;\n                    break;\n                case 43:\n                    return 'INVALID';\n                    break;\n                case 44:\n                    return 5;\n                    break;\n            }\n        };\n        lexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/, /^(?:[^\\x00]+)/, /^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/, /^(?:\\{\\{\\{\\{(?=[^\\/]))/, /^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/, /^(?:[^\\x00]+?(?=(\\{\\{\\{\\{)))/, /^(?:[\\s\\S]*?--(~)?\\}\\})/, /^(?:\\()/, /^(?:\\))/, /^(?:\\{\\{\\{\\{)/, /^(?:\\}\\}\\}\\})/, /^(?:\\{\\{(~)?>)/, /^(?:\\{\\{(~)?#>)/, /^(?:\\{\\{(~)?#\\*?)/, /^(?:\\{\\{(~)?\\/)/, /^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\^)/, /^(?:\\{\\{(~)?\\s*else\\b)/, /^(?:\\{\\{(~)?\\{)/, /^(?:\\{\\{(~)?&)/, /^(?:\\{\\{(~)?!--)/, /^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/, /^(?:\\{\\{(~)?\\*?)/, /^(?:=)/, /^(?:\\.\\.)/, /^(?:\\.(?=([=~}\\s\\/.)|])))/, /^(?:[\\/.])/, /^(?:\\s+)/, /^(?:\\}(~)?\\}\\})/, /^(?:(~)?\\}\\})/, /^(?:\"(\\\\[\"]|[^\"])*\")/, /^(?:'(\\\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\\s)])))/, /^(?:false(?=([~}\\s)])))/, /^(?:undefined(?=([~}\\s)])))/, /^(?:null(?=([~}\\s)])))/, /^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/, /^(?:as\\s+\\|)/, /^(?:\\|)/, /^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/, /^(?:\\[(\\\\\\]|[^\\]])*\\])/, /^(?:.)/, /^(?:$)/];\n        lexer.conditions = { \"mu\": { \"rules\": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], \"inclusive\": false }, \"emu\": { \"rules\": [2], \"inclusive\": false }, \"com\": { \"rules\": [6], \"inclusive\": false }, \"raw\": { \"rules\": [3, 4, 5], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 44], \"inclusive\": true } };\n        return lexer;\n    })();\n    parser.lexer = lexer;\n    function Parser() {\n        this.yy = {};\n    }Parser.prototype = parser;parser.Parser = Parser;\n    return new Parser();\n})();exports.default = handlebars;\nmodule.exports = exports[\"default\"];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/compiler/parser.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js":
/*!*************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js ***!
  \*************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = __webpack_require__(/*! ../exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nfunction Visitor() {\n  this.parents = [];\n}\n\nVisitor.prototype = {\n  constructor: Visitor,\n  mutating: false,\n\n  // Visits a given value. If mutating, will replace the value if necessary.\n  acceptKey: function acceptKey(node, name) {\n    var value = this.accept(node[name]);\n    if (this.mutating) {\n      // Hacky sanity check: This may have a few false positives for type for the helper\n      // methods but will generally do the right thing without a lot of overhead.\n      if (value && !Visitor.prototype[value.type]) {\n        throw new _exception2['default']('Unexpected node type \"' + value.type + '\" found when accepting ' + name + ' on ' + node.type);\n      }\n      node[name] = value;\n    }\n  },\n\n  // Performs an accept operation with added sanity check to ensure\n  // required keys are not removed.\n  acceptRequired: function acceptRequired(node, name) {\n    this.acceptKey(node, name);\n\n    if (!node[name]) {\n      throw new _exception2['default'](node.type + ' requires ' + name);\n    }\n  },\n\n  // Traverses a given array. If mutating, empty respnses will be removed\n  // for child elements.\n  acceptArray: function acceptArray(array) {\n    for (var i = 0, l = array.length; i < l; i++) {\n      this.acceptKey(array, i);\n\n      if (!array[i]) {\n        array.splice(i, 1);\n        i--;\n        l--;\n      }\n    }\n  },\n\n  accept: function accept(object) {\n    if (!object) {\n      return;\n    }\n\n    /* istanbul ignore next: Sanity code */\n    if (!this[object.type]) {\n      throw new _exception2['default']('Unknown type: ' + object.type, object);\n    }\n\n    if (this.current) {\n      this.parents.unshift(this.current);\n    }\n    this.current = object;\n\n    var ret = this[object.type](object);\n\n    this.current = this.parents.shift();\n\n    if (!this.mutating || ret) {\n      return ret;\n    } else if (ret !== false) {\n      return object;\n    }\n  },\n\n  Program: function Program(program) {\n    this.acceptArray(program.body);\n  },\n\n  MustacheStatement: visitSubExpression,\n  Decorator: visitSubExpression,\n\n  BlockStatement: visitBlock,\n  DecoratorBlock: visitBlock,\n\n  PartialStatement: visitPartial,\n  PartialBlockStatement: function PartialBlockStatement(partial) {\n    visitPartial.call(this, partial);\n\n    this.acceptKey(partial, 'program');\n  },\n\n  ContentStatement: function ContentStatement() /* content */{},\n  CommentStatement: function CommentStatement() /* comment */{},\n\n  SubExpression: visitSubExpression,\n\n  PathExpression: function PathExpression() /* path */{},\n\n  StringLiteral: function StringLiteral() /* string */{},\n  NumberLiteral: function NumberLiteral() /* number */{},\n  BooleanLiteral: function BooleanLiteral() /* bool */{},\n  UndefinedLiteral: function UndefinedLiteral() /* literal */{},\n  NullLiteral: function NullLiteral() /* literal */{},\n\n  Hash: function Hash(hash) {\n    this.acceptArray(hash.pairs);\n  },\n  HashPair: function HashPair(pair) {\n    this.acceptRequired(pair, 'value');\n  }\n};\n\nfunction visitSubExpression(mustache) {\n  this.acceptRequired(mustache, 'path');\n  this.acceptArray(mustache.params);\n  this.acceptKey(mustache, 'hash');\n}\nfunction visitBlock(block) {\n  visitSubExpression.call(this, block);\n\n  this.acceptKey(block, 'program');\n  this.acceptKey(block, 'inverse');\n}\nfunction visitPartial(partial) {\n  this.acceptRequired(partial, 'name');\n  this.acceptArray(partial.params);\n  this.acceptKey(partial, 'hash');\n}\n\nexports.default = Visitor;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js":
/*!************************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js ***!
  \************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _visitor = __webpack_require__(/*! ./visitor */ \"./node_modules/handlebars/dist/cjs/handlebars/compiler/visitor.js\");\n\nvar _visitor2 = _interopRequireDefault(_visitor);\n\nfunction WhitespaceControl() {\n  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n  this.options = options;\n}\nWhitespaceControl.prototype = new _visitor2['default']();\n\nWhitespaceControl.prototype.Program = function (program) {\n  var doStandalone = !this.options.ignoreStandalone;\n\n  var isRoot = !this.isRootSeen;\n  this.isRootSeen = true;\n\n  var body = program.body;\n  for (var i = 0, l = body.length; i < l; i++) {\n    var current = body[i],\n        strip = this.accept(current);\n\n    if (!strip) {\n      continue;\n    }\n\n    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n        _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n        openStandalone = strip.openStandalone && _isPrevWhitespace,\n        closeStandalone = strip.closeStandalone && _isNextWhitespace,\n        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n    if (strip.close) {\n      omitRight(body, i, true);\n    }\n    if (strip.open) {\n      omitLeft(body, i, true);\n    }\n\n    if (doStandalone && inlineStandalone) {\n      omitRight(body, i);\n\n      if (omitLeft(body, i)) {\n        // If we are on a standalone node, save the indent info for partials\n        if (current.type === 'PartialStatement') {\n          // Pull out the whitespace from the final line\n          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n        }\n      }\n    }\n    if (doStandalone && openStandalone) {\n      omitRight((current.program || current.inverse).body);\n\n      // Strip out the previous content node if it's whitespace only\n      omitLeft(body, i);\n    }\n    if (doStandalone && closeStandalone) {\n      // Always strip the next node\n      omitRight(body, i);\n\n      omitLeft((current.inverse || current.program).body);\n    }\n  }\n\n  return program;\n};\n\nWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {\n  this.accept(block.program);\n  this.accept(block.inverse);\n\n  // Find the inverse program that is involed with whitespace stripping.\n  var program = block.program || block.inverse,\n      inverse = block.program && block.inverse,\n      firstInverse = inverse,\n      lastInverse = inverse;\n\n  if (inverse && inverse.chained) {\n    firstInverse = inverse.body[0].program;\n\n    // Walk the inverse chain to find the last inverse that is actually in the chain.\n    while (lastInverse.chained) {\n      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n    }\n  }\n\n  var strip = {\n    open: block.openStrip.open,\n    close: block.closeStrip.close,\n\n    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n    // so our parent can determine if we actually are standalone\n    openStandalone: isNextWhitespace(program.body),\n    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n  };\n\n  if (block.openStrip.close) {\n    omitRight(program.body, null, true);\n  }\n\n  if (inverse) {\n    var inverseStrip = block.inverseStrip;\n\n    if (inverseStrip.open) {\n      omitLeft(program.body, null, true);\n    }\n\n    if (inverseStrip.close) {\n      omitRight(firstInverse.body, null, true);\n    }\n    if (block.closeStrip.open) {\n      omitLeft(lastInverse.body, null, true);\n    }\n\n    // Find standalone else statments\n    if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {\n      omitLeft(program.body);\n      omitRight(firstInverse.body);\n    }\n  } else if (block.closeStrip.open) {\n    omitLeft(program.body, null, true);\n  }\n\n  return strip;\n};\n\nWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {\n  return mustache.strip;\n};\n\nWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {\n  /* istanbul ignore next */\n  var strip = node.strip || {};\n  return {\n    inlineStandalone: true,\n    open: strip.open,\n    close: strip.close\n  };\n};\n\nfunction isPrevWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = body.length;\n  }\n\n  // Nodes that end with newlines are considered whitespace (but are special\n  // cased for strip operations)\n  var prev = body[i - 1],\n      sibling = body[i - 2];\n  if (!prev) {\n    return isRoot;\n  }\n\n  if (prev.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(prev.original);\n  }\n}\nfunction isNextWhitespace(body, i, isRoot) {\n  if (i === undefined) {\n    i = -1;\n  }\n\n  var next = body[i + 1],\n      sibling = body[i + 2];\n  if (!next) {\n    return isRoot;\n  }\n\n  if (next.type === 'ContentStatement') {\n    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(next.original);\n  }\n}\n\n// Marks the node to the right of the position as omitted.\n// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n//\n// If i is undefined, then the first child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitRight(body, i, multiple) {\n  var current = body[i == null ? 0 : i + 1];\n  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {\n    return;\n  }\n\n  var original = current.value;\n  current.value = current.value.replace(multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/, '');\n  current.rightStripped = current.value !== original;\n}\n\n// Marks the node to the left of the position as omitted.\n// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n//\n// If i is undefined then the last child will be marked as such.\n//\n// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n// content is met.\nfunction omitLeft(body, i, multiple) {\n  var current = body[i == null ? body.length - 1 : i - 1];\n  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {\n    return;\n  }\n\n  // We omit the last node if it's whitespace only and not preceded by a non-content node.\n  var original = current.value;\n  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n  current.leftStripped = current.value !== original;\n  return current.leftStripped;\n}\n\nexports.default = WhitespaceControl;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/compiler/whitespace-control.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/decorators.js":
/*!*******************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/decorators.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.registerDefaultDecorators = registerDefaultDecorators;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _decoratorsInline = __webpack_require__(/*! ./decorators/inline */ \"./node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js\");\n\nvar _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);\n\nfunction registerDefaultDecorators(instance) {\n  _decoratorsInline2['default'](instance);\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Z0NBQTJCLHFCQUFxQjs7OztBQUV6QyxTQUFTLHlCQUF5QixDQUFDLFFBQVEsRUFBRTtBQUNsRCxnQ0FBZSxRQUFRLENBQUMsQ0FBQztDQUMxQiIsImZpbGUiOiJkZWNvcmF0b3JzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2lzdGVySW5saW5lIGZyb20gJy4vZGVjb3JhdG9ycy9pbmxpbmUnO1xuXG5leHBvcnQgZnVuY3Rpb24gcmVnaXN0ZXJEZWZhdWx0RGVjb3JhdG9ycyhpbnN0YW5jZSkge1xuICByZWdpc3RlcklubGluZShpbnN0YW5jZSk7XG59XG4iXX0=\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/decorators.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js":
/*!**************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js ***!
  \**************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nexports.default = function (instance) {\n  instance.registerDecorator('inline', function (fn, props, container, options) {\n    var ret = fn;\n    if (!props.partials) {\n      props.partials = {};\n      ret = function (context, options) {\n        // Create a new partials stack frame prior to exec.\n        var original = container.partials;\n        container.partials = _utils.extend({}, original, props.partials);\n        var ret = fn(context, options);\n        container.partials = original;\n        return ret;\n      };\n    }\n\n    props.partials[options.args[0]] = options.fn;\n\n    return ret;\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2RlY29yYXRvcnMvaW5saW5lLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQXVCLFVBQVU7O3FCQUVsQixVQUFTLFFBQVEsRUFBRTtBQUNoQyxVQUFRLENBQUMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFVBQVMsRUFBRSxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsT0FBTyxFQUFFO0FBQzNFLFFBQUksR0FBRyxHQUFHLEVBQUUsQ0FBQztBQUNiLFFBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxFQUFFO0FBQ25CLFdBQUssQ0FBQyxRQUFRLEdBQUcsRUFBRSxDQUFDO0FBQ3BCLFNBQUcsR0FBRyxVQUFTLE9BQU8sRUFBRSxPQUFPLEVBQUU7O0FBRS9CLFlBQUksUUFBUSxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUM7QUFDbEMsaUJBQVMsQ0FBQyxRQUFRLEdBQUcsY0FBTyxFQUFFLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUMxRCxZQUFJLEdBQUcsR0FBRyxFQUFFLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0FBQy9CLGlCQUFTLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQztBQUM5QixlQUFPLEdBQUcsQ0FBQztPQUNaLENBQUM7S0FDSDs7QUFFRCxTQUFLLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUU3QyxXQUFPLEdBQUcsQ0FBQztHQUNaLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6ImlubGluZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGV4dGVuZCB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJEZWNvcmF0b3IoJ2lubGluZScsIGZ1bmN0aW9uKGZuLCBwcm9wcywgY29udGFpbmVyLCBvcHRpb25zKSB7XG4gICAgbGV0IHJldCA9IGZuO1xuICAgIGlmICghcHJvcHMucGFydGlhbHMpIHtcbiAgICAgIHByb3BzLnBhcnRpYWxzID0ge307XG4gICAgICByZXQgPSBmdW5jdGlvbihjb250ZXh0LCBvcHRpb25zKSB7XG4gICAgICAgIC8vIENyZWF0ZSBhIG5ldyBwYXJ0aWFscyBzdGFjayBmcmFtZSBwcmlvciB0byBleGVjLlxuICAgICAgICBsZXQgb3JpZ2luYWwgPSBjb250YWluZXIucGFydGlhbHM7XG4gICAgICAgIGNvbnRhaW5lci5wYXJ0aWFscyA9IGV4dGVuZCh7fSwgb3JpZ2luYWwsIHByb3BzLnBhcnRpYWxzKTtcbiAgICAgICAgbGV0IHJldCA9IGZuKGNvbnRleHQsIG9wdGlvbnMpO1xuICAgICAgICBjb250YWluZXIucGFydGlhbHMgPSBvcmlnaW5hbDtcbiAgICAgICAgcmV0dXJuIHJldDtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgcHJvcHMucGFydGlhbHNbb3B0aW9ucy5hcmdzWzBdXSA9IG9wdGlvbnMuZm47XG5cbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cbiJdfQ==\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/decorators/inline.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/exception.js":
/*!******************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/exception.js ***!
  \******************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\nexports.__esModule = true;\nvar errorProps = ['description', 'fileName', 'lineNumber', 'endLineNumber', 'message', 'name', 'number', 'stack'];\n\nfunction Exception(message, node) {\n  var loc = node && node.loc,\n      line = undefined,\n      endLineNumber = undefined,\n      column = undefined,\n      endColumn = undefined;\n\n  if (loc) {\n    line = loc.start.line;\n    endLineNumber = loc.end.line;\n    column = loc.start.column;\n    endColumn = loc.end.column;\n\n    message += ' - ' + line + ':' + column;\n  }\n\n  var tmp = Error.prototype.constructor.call(this, message);\n\n  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n  for (var idx = 0; idx < errorProps.length; idx++) {\n    this[errorProps[idx]] = tmp[errorProps[idx]];\n  }\n\n  /* istanbul ignore else */\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, Exception);\n  }\n\n  try {\n    if (loc) {\n      this.lineNumber = line;\n      this.endLineNumber = endLineNumber;\n\n      // Work around issue under safari where we can't directly set the column value\n      /* istanbul ignore next */\n      if (Object.defineProperty) {\n        Object.defineProperty(this, 'column', {\n          value: column,\n          enumerable: true\n        });\n        Object.defineProperty(this, 'endColumn', {\n          value: endColumn,\n          enumerable: true\n        });\n      } else {\n        this.column = column;\n        this.endColumn = endColumn;\n      }\n    }\n  } catch (nop) {\n    /* Ignore if the browser is very particular */\n  }\n}\n\nException.prototype = new Error();\n\nexports.default = Exception;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2V4Y2VwdGlvbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxJQUFNLFVBQVUsR0FBRyxDQUNqQixhQUFhLEVBQ2IsVUFBVSxFQUNWLFlBQVksRUFDWixlQUFlLEVBQ2YsU0FBUyxFQUNULE1BQU0sRUFDTixRQUFRLEVBQ1IsT0FBTyxDQUNSLENBQUM7O0FBRUYsU0FBUyxTQUFTLENBQUMsT0FBTyxFQUFFLElBQUksRUFBRTtBQUNoQyxNQUFJLEdBQUcsR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLEdBQUc7TUFDeEIsSUFBSSxZQUFBO01BQ0osYUFBYSxZQUFBO01BQ2IsTUFBTSxZQUFBO01BQ04sU0FBUyxZQUFBLENBQUM7O0FBRVosTUFBSSxHQUFHLEVBQUU7QUFDUCxRQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUM7QUFDdEIsaUJBQWEsR0FBRyxHQUFHLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQztBQUM3QixVQUFNLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUM7QUFDMUIsYUFBUyxHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsTUFBTSxDQUFDOztBQUUzQixXQUFPLElBQUksS0FBSyxHQUFHLElBQUksR0FBRyxHQUFHLEdBQUcsTUFBTSxDQUFDO0dBQ3hDOztBQUVELE1BQUksR0FBRyxHQUFHLEtBQUssQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDLENBQUM7OztBQUcxRCxPQUFLLElBQUksR0FBRyxHQUFHLENBQUMsRUFBRSxHQUFHLEdBQUcsVUFBVSxDQUFDLE1BQU0sRUFBRSxHQUFHLEVBQUUsRUFBRTtBQUNoRCxRQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO0dBQzlDOzs7QUFHRCxNQUFJLEtBQUssQ0FBQyxpQkFBaUIsRUFBRTtBQUMzQixTQUFLLENBQUMsaUJBQWlCLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0dBQzFDOztBQUVELE1BQUk7QUFDRixRQUFJLEdBQUcsRUFBRTtBQUNQLFVBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDO0FBQ3ZCLFVBQUksQ0FBQyxhQUFhLEdBQUcsYUFBYSxDQUFDOzs7O0FBSW5DLFVBQUksTUFBTSxDQUFDLGNBQWMsRUFBRTtBQUN6QixjQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxRQUFRLEVBQUU7QUFDcEMsZUFBSyxFQUFFLE1BQU07QUFDYixvQkFBVSxFQUFFLElBQUk7U0FDakIsQ0FBQyxDQUFDO0FBQ0gsY0FBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFO0FBQ3ZDLGVBQUssRUFBRSxTQUFTO0FBQ2hCLG9CQUFVLEVBQUUsSUFBSTtTQUNqQixDQUFDLENBQUM7T0FDSixNQUFNO0FBQ0wsWUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7QUFDckIsWUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7T0FDNUI7S0FDRjtHQUNGLENBQUMsT0FBTyxHQUFHLEVBQUU7O0dBRWI7Q0FDRjs7QUFFRCxTQUFTLENBQUMsU0FBUyxHQUFHLElBQUksS0FBSyxFQUFFLENBQUM7O3FCQUVuQixTQUFTIiwiZmlsZSI6ImV4Y2VwdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGVycm9yUHJvcHMgPSBbXG4gICdkZXNjcmlwdGlvbicsXG4gICdmaWxlTmFtZScsXG4gICdsaW5lTnVtYmVyJyxcbiAgJ2VuZExpbmVOdW1iZXInLFxuICAnbWVzc2FnZScsXG4gICduYW1lJyxcbiAgJ251bWJlcicsXG4gICdzdGFjaydcbl07XG5cbmZ1bmN0aW9uIEV4Y2VwdGlvbihtZXNzYWdlLCBub2RlKSB7XG4gIGxldCBsb2MgPSBub2RlICYmIG5vZGUubG9jLFxuICAgIGxpbmUsXG4gICAgZW5kTGluZU51bWJlcixcbiAgICBjb2x1bW4sXG4gICAgZW5kQ29sdW1uO1xuXG4gIGlmIChsb2MpIHtcbiAgICBsaW5lID0gbG9jLnN0YXJ0LmxpbmU7XG4gICAgZW5kTGluZU51bWJlciA9IGxvYy5lbmQubGluZTtcbiAgICBjb2x1bW4gPSBsb2Muc3RhcnQuY29sdW1uO1xuICAgIGVuZENvbHVtbiA9IGxvYy5lbmQuY29sdW1uO1xuXG4gICAgbWVzc2FnZSArPSAnIC0gJyArIGxpbmUgKyAnOicgKyBjb2x1bW47XG4gIH1cblxuICBsZXQgdG1wID0gRXJyb3IucHJvdG90eXBlLmNvbnN0cnVjdG9yLmNhbGwodGhpcywgbWVzc2FnZSk7XG5cbiAgLy8gVW5mb3J0dW5hdGVseSBlcnJvcnMgYXJlIG5vdCBlbnVtZXJhYmxlIGluIENocm9tZSAoYXQgbGVhc3QpLCBzbyBgZm9yIHByb3AgaW4gdG1wYCBkb2Vzbid0IHdvcmsuXG4gIGZvciAobGV0IGlkeCA9IDA7IGlkeCA8IGVycm9yUHJvcHMubGVuZ3RoOyBpZHgrKykge1xuICAgIHRoaXNbZXJyb3JQcm9wc1tpZHhdXSA9IHRtcFtlcnJvclByb3BzW2lkeF1dO1xuICB9XG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgaWYgKEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKSB7XG4gICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgRXhjZXB0aW9uKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgaWYgKGxvYykge1xuICAgICAgdGhpcy5saW5lTnVtYmVyID0gbGluZTtcbiAgICAgIHRoaXMuZW5kTGluZU51bWJlciA9IGVuZExpbmVOdW1iZXI7XG5cbiAgICAgIC8vIFdvcmsgYXJvdW5kIGlzc3VlIHVuZGVyIHNhZmFyaSB3aGVyZSB3ZSBjYW4ndCBkaXJlY3RseSBzZXQgdGhlIGNvbHVtbiB2YWx1ZVxuICAgICAgLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbiAgICAgIGlmIChPYmplY3QuZGVmaW5lUHJvcGVydHkpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsICdjb2x1bW4nLCB7XG4gICAgICAgICAgdmFsdWU6IGNvbHVtbixcbiAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ2VuZENvbHVtbicsIHtcbiAgICAgICAgICB2YWx1ZTogZW5kQ29sdW1uLFxuICAgICAgICAgIGVudW1lcmFibGU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmNvbHVtbiA9IGNvbHVtbjtcbiAgICAgICAgdGhpcy5lbmRDb2x1bW4gPSBlbmRDb2x1bW47XG4gICAgICB9XG4gICAgfVxuICB9IGNhdGNoIChub3ApIHtcbiAgICAvKiBJZ25vcmUgaWYgdGhlIGJyb3dzZXIgaXMgdmVyeSBwYXJ0aWN1bGFyICovXG4gIH1cbn1cblxuRXhjZXB0aW9uLnByb3RvdHlwZSA9IG5ldyBFcnJvcigpO1xuXG5leHBvcnQgZGVmYXVsdCBFeGNlcHRpb247XG4iXX0=\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/exception.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/helpers.js":
/*!****************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/helpers.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.registerDefaultHelpers = registerDefaultHelpers;\nexports.moveHelperToHooks = moveHelperToHooks;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _helpersBlockHelperMissing = __webpack_require__(/*! ./helpers/block-helper-missing */ \"./node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js\");\n\nvar _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);\n\nvar _helpersEach = __webpack_require__(/*! ./helpers/each */ \"./node_modules/handlebars/dist/cjs/handlebars/helpers/each.js\");\n\nvar _helpersEach2 = _interopRequireDefault(_helpersEach);\n\nvar _helpersHelperMissing = __webpack_require__(/*! ./helpers/helper-missing */ \"./node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js\");\n\nvar _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);\n\nvar _helpersIf = __webpack_require__(/*! ./helpers/if */ \"./node_modules/handlebars/dist/cjs/handlebars/helpers/if.js\");\n\nvar _helpersIf2 = _interopRequireDefault(_helpersIf);\n\nvar _helpersLog = __webpack_require__(/*! ./helpers/log */ \"./node_modules/handlebars/dist/cjs/handlebars/helpers/log.js\");\n\nvar _helpersLog2 = _interopRequireDefault(_helpersLog);\n\nvar _helpersLookup = __webpack_require__(/*! ./helpers/lookup */ \"./node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js\");\n\nvar _helpersLookup2 = _interopRequireDefault(_helpersLookup);\n\nvar _helpersWith = __webpack_require__(/*! ./helpers/with */ \"./node_modules/handlebars/dist/cjs/handlebars/helpers/with.js\");\n\nvar _helpersWith2 = _interopRequireDefault(_helpersWith);\n\nfunction registerDefaultHelpers(instance) {\n  _helpersBlockHelperMissing2['default'](instance);\n  _helpersEach2['default'](instance);\n  _helpersHelperMissing2['default'](instance);\n  _helpersIf2['default'](instance);\n  _helpersLog2['default'](instance);\n  _helpersLookup2['default'](instance);\n  _helpersWith2['default'](instance);\n}\n\nfunction moveHelperToHooks(instance, helperName, keepHelper) {\n  if (instance.helpers[helperName]) {\n    instance.hooks[helperName] = instance.helpers[helperName];\n    if (!keepHelper) {\n      delete instance.helpers[helperName];\n    }\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O3lDQUF1QyxnQ0FBZ0M7Ozs7MkJBQzlDLGdCQUFnQjs7OztvQ0FDUCwwQkFBMEI7Ozs7eUJBQ3JDLGNBQWM7Ozs7MEJBQ2IsZUFBZTs7Ozs2QkFDWixrQkFBa0I7Ozs7MkJBQ3BCLGdCQUFnQjs7OztBQUVsQyxTQUFTLHNCQUFzQixDQUFDLFFBQVEsRUFBRTtBQUMvQyx5Q0FBMkIsUUFBUSxDQUFDLENBQUM7QUFDckMsMkJBQWEsUUFBUSxDQUFDLENBQUM7QUFDdkIsb0NBQXNCLFFBQVEsQ0FBQyxDQUFDO0FBQ2hDLHlCQUFXLFFBQVEsQ0FBQyxDQUFDO0FBQ3JCLDBCQUFZLFFBQVEsQ0FBQyxDQUFDO0FBQ3RCLDZCQUFlLFFBQVEsQ0FBQyxDQUFDO0FBQ3pCLDJCQUFhLFFBQVEsQ0FBQyxDQUFDO0NBQ3hCOztBQUVNLFNBQVMsaUJBQWlCLENBQUMsUUFBUSxFQUFFLFVBQVUsRUFBRSxVQUFVLEVBQUU7QUFDbEUsTUFBSSxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxFQUFFO0FBQ2hDLFlBQVEsQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQztBQUMxRCxRQUFJLENBQUMsVUFBVSxFQUFFO0FBQ2YsYUFBTyxRQUFRLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0tBQ3JDO0dBQ0Y7Q0FDRiIsImZpbGUiOiJoZWxwZXJzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHJlZ2lzdGVyQmxvY2tIZWxwZXJNaXNzaW5nIGZyb20gJy4vaGVscGVycy9ibG9jay1oZWxwZXItbWlzc2luZyc7XG5pbXBvcnQgcmVnaXN0ZXJFYWNoIGZyb20gJy4vaGVscGVycy9lYWNoJztcbmltcG9ydCByZWdpc3RlckhlbHBlck1pc3NpbmcgZnJvbSAnLi9oZWxwZXJzL2hlbHBlci1taXNzaW5nJztcbmltcG9ydCByZWdpc3RlcklmIGZyb20gJy4vaGVscGVycy9pZic7XG5pbXBvcnQgcmVnaXN0ZXJMb2cgZnJvbSAnLi9oZWxwZXJzL2xvZyc7XG5pbXBvcnQgcmVnaXN0ZXJMb29rdXAgZnJvbSAnLi9oZWxwZXJzL2xvb2t1cCc7XG5pbXBvcnQgcmVnaXN0ZXJXaXRoIGZyb20gJy4vaGVscGVycy93aXRoJztcblxuZXhwb3J0IGZ1bmN0aW9uIHJlZ2lzdGVyRGVmYXVsdEhlbHBlcnMoaW5zdGFuY2UpIHtcbiAgcmVnaXN0ZXJCbG9ja0hlbHBlck1pc3NpbmcoaW5zdGFuY2UpO1xuICByZWdpc3RlckVhY2goaW5zdGFuY2UpO1xuICByZWdpc3RlckhlbHBlck1pc3NpbmcoaW5zdGFuY2UpO1xuICByZWdpc3RlcklmKGluc3RhbmNlKTtcbiAgcmVnaXN0ZXJMb2coaW5zdGFuY2UpO1xuICByZWdpc3Rlckxvb2t1cChpbnN0YW5jZSk7XG4gIHJlZ2lzdGVyV2l0aChpbnN0YW5jZSk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtb3ZlSGVscGVyVG9Ib29rcyhpbnN0YW5jZSwgaGVscGVyTmFtZSwga2VlcEhlbHBlcikge1xuICBpZiAoaW5zdGFuY2UuaGVscGVyc1toZWxwZXJOYW1lXSkge1xuICAgIGluc3RhbmNlLmhvb2tzW2hlbHBlck5hbWVdID0gaW5zdGFuY2UuaGVscGVyc1toZWxwZXJOYW1lXTtcbiAgICBpZiAoIWtlZXBIZWxwZXIpIHtcbiAgICAgIGRlbGV0ZSBpbnN0YW5jZS5oZWxwZXJzW2hlbHBlck5hbWVdO1xuICAgIH1cbiAgfVxufVxuIl19\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/helpers.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js ***!
  \*************************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nexports.default = function (instance) {\n  instance.registerHelper('blockHelperMissing', function (context, options) {\n    var inverse = options.inverse,\n        fn = options.fn;\n\n    if (context === true) {\n      return fn(this);\n    } else if (context === false || context == null) {\n      return inverse(this);\n    } else if (_utils.isArray(context)) {\n      if (context.length > 0) {\n        if (options.ids) {\n          options.ids = [options.name];\n        }\n\n        return instance.helpers.each(context, options);\n      } else {\n        return inverse(this);\n      }\n    } else {\n      if (options.data && options.ids) {\n        var data = _utils.createFrame(options.data);\n        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);\n        options = { data: data };\n      }\n\n      return fn(context, options);\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvYmxvY2staGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztxQkFBd0QsVUFBVTs7cUJBRW5ELFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsb0JBQW9CLEVBQUUsVUFBUyxPQUFPLEVBQUUsT0FBTyxFQUFFO0FBQ3ZFLFFBQUksT0FBTyxHQUFHLE9BQU8sQ0FBQyxPQUFPO1FBQzNCLEVBQUUsR0FBRyxPQUFPLENBQUMsRUFBRSxDQUFDOztBQUVsQixRQUFJLE9BQU8sS0FBSyxJQUFJLEVBQUU7QUFDcEIsYUFBTyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDakIsTUFBTSxJQUFJLE9BQU8sS0FBSyxLQUFLLElBQUksT0FBTyxJQUFJLElBQUksRUFBRTtBQUMvQyxhQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUN0QixNQUFNLElBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUMzQixVQUFJLE9BQU8sQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO0FBQ3RCLFlBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUNmLGlCQUFPLENBQUMsR0FBRyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1NBQzlCOztBQUVELGVBQU8sUUFBUSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO09BQ2hELE1BQU07QUFDTCxlQUFPLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztPQUN0QjtLQUNGLE1BQU07QUFDTCxVQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixZQUFJLElBQUksR0FBRyxtQkFBWSxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7QUFDckMsWUFBSSxDQUFDLFdBQVcsR0FBRyx5QkFDakIsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQ3hCLE9BQU8sQ0FBQyxJQUFJLENBQ2IsQ0FBQztBQUNGLGVBQU8sR0FBRyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsQ0FBQztPQUMxQjs7QUFFRCxhQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDLENBQUM7S0FDN0I7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJibG9jay1oZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGFwcGVuZENvbnRleHRQYXRoLCBjcmVhdGVGcmFtZSwgaXNBcnJheSB9IGZyb20gJy4uL3V0aWxzJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2Jsb2NrSGVscGVyTWlzc2luZycsIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBsZXQgaW52ZXJzZSA9IG9wdGlvbnMuaW52ZXJzZSxcbiAgICAgIGZuID0gb3B0aW9ucy5mbjtcblxuICAgIGlmIChjb250ZXh0ID09PSB0cnVlKSB7XG4gICAgICByZXR1cm4gZm4odGhpcyk7XG4gICAgfSBlbHNlIGlmIChjb250ZXh0ID09PSBmYWxzZSB8fCBjb250ZXh0ID09IG51bGwpIHtcbiAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgIH0gZWxzZSBpZiAoaXNBcnJheShjb250ZXh0KSkge1xuICAgICAgaWYgKGNvbnRleHQubGVuZ3RoID4gMCkge1xuICAgICAgICBpZiAob3B0aW9ucy5pZHMpIHtcbiAgICAgICAgICBvcHRpb25zLmlkcyA9IFtvcHRpb25zLm5hbWVdO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGluc3RhbmNlLmhlbHBlcnMuZWFjaChjb250ZXh0LCBvcHRpb25zKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBpbnZlcnNlKHRoaXMpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAob3B0aW9ucy5kYXRhICYmIG9wdGlvbnMuaWRzKSB7XG4gICAgICAgIGxldCBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKFxuICAgICAgICAgIG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCxcbiAgICAgICAgICBvcHRpb25zLm5hbWVcbiAgICAgICAgKTtcbiAgICAgICAgb3B0aW9ucyA9IHsgZGF0YTogZGF0YSB9O1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZm4oY29udGV4dCwgb3B0aW9ucyk7XG4gICAgfVxuICB9KTtcbn1cbiJdfQ==\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/helpers/block-helper-missing.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/helpers/each.js":
/*!*********************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/helpers/each.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nvar _exception = __webpack_require__(/*! ../exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports.default = function (instance) {\n  instance.registerHelper('each', function (context, options) {\n    if (!options) {\n      throw new _exception2['default']('Must pass iterator to #each');\n    }\n\n    var fn = options.fn,\n        inverse = options.inverse,\n        i = 0,\n        ret = '',\n        data = undefined,\n        contextPath = undefined;\n\n    if (options.data && options.ids) {\n      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n    }\n\n    if (_utils.isFunction(context)) {\n      context = context.call(this);\n    }\n\n    if (options.data) {\n      data = _utils.createFrame(options.data);\n    }\n\n    function execIteration(field, index, last) {\n      if (data) {\n        data.key = field;\n        data.index = index;\n        data.first = index === 0;\n        data.last = !!last;\n\n        if (contextPath) {\n          data.contextPath = contextPath + field;\n        }\n      }\n\n      ret = ret + fn(context[field], {\n        data: data,\n        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])\n      });\n    }\n\n    if (context && typeof context === 'object') {\n      if (_utils.isArray(context)) {\n        for (var j = context.length; i < j; i++) {\n          if (i in context) {\n            execIteration(i, i, i === context.length - 1);\n          }\n        }\n      } else if (__webpack_require__.g.Symbol && context[__webpack_require__.g.Symbol.iterator]) {\n        var newContext = [];\n        var iterator = context[__webpack_require__.g.Symbol.iterator]();\n        for (var it = iterator.next(); !it.done; it = iterator.next()) {\n          newContext.push(it.value);\n        }\n        context = newContext;\n        for (var j = context.length; i < j; i++) {\n          execIteration(i, i, i === context.length - 1);\n        }\n      } else {\n        (function () {\n          var priorKey = undefined;\n\n          Object.keys(context).forEach(function (key) {\n            // We're running the iterations one step out of sync so we can detect\n            // the last iteration without have to scan the object twice and create\n            // an itermediate keys array.\n            if (priorKey !== undefined) {\n              execIteration(priorKey, i - 1);\n            }\n            priorKey = key;\n            i++;\n          });\n          if (priorKey !== undefined) {\n            execIteration(priorKey, i - 1, true);\n          }\n        })();\n      }\n    }\n\n    if (i === 0) {\n      ret = inverse(this);\n    }\n\n    return ret;\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvZWFjaC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQU1PLFVBQVU7O3lCQUNLLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFVBQVMsT0FBTyxFQUFFLE9BQU8sRUFBRTtBQUN6RCxRQUFJLENBQUMsT0FBTyxFQUFFO0FBQ1osWUFBTSwyQkFBYyw2QkFBNkIsQ0FBQyxDQUFDO0tBQ3BEOztBQUVELFFBQUksRUFBRSxHQUFHLE9BQU8sQ0FBQyxFQUFFO1FBQ2pCLE9BQU8sR0FBRyxPQUFPLENBQUMsT0FBTztRQUN6QixDQUFDLEdBQUcsQ0FBQztRQUNMLEdBQUcsR0FBRyxFQUFFO1FBQ1IsSUFBSSxZQUFBO1FBQ0osV0FBVyxZQUFBLENBQUM7O0FBRWQsUUFBSSxPQUFPLENBQUMsSUFBSSxJQUFJLE9BQU8sQ0FBQyxHQUFHLEVBQUU7QUFDL0IsaUJBQVcsR0FDVCx5QkFBa0IsT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFXLEVBQUUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsQ0FBQztLQUNyRTs7QUFFRCxRQUFJLGtCQUFXLE9BQU8sQ0FBQyxFQUFFO0FBQ3ZCLGFBQU8sR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCOztBQUVELFFBQUksT0FBTyxDQUFDLElBQUksRUFBRTtBQUNoQixVQUFJLEdBQUcsbUJBQVksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ2xDOztBQUVELGFBQVMsYUFBYSxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUUsSUFBSSxFQUFFO0FBQ3pDLFVBQUksSUFBSSxFQUFFO0FBQ1IsWUFBSSxDQUFDLEdBQUcsR0FBRyxLQUFLLENBQUM7QUFDakIsWUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUM7QUFDbkIsWUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLEtBQUssQ0FBQyxDQUFDO0FBQ3pCLFlBQUksQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQzs7QUFFbkIsWUFBSSxXQUFXLEVBQUU7QUFDZixjQUFJLENBQUMsV0FBVyxHQUFHLFdBQVcsR0FBRyxLQUFLLENBQUM7U0FDeEM7T0FDRjs7QUFFRCxTQUFHLEdBQ0QsR0FBRyxHQUNILEVBQUUsQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDakIsWUFBSSxFQUFFLElBQUk7QUFDVixtQkFBVyxFQUFFLG1CQUNYLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFLEtBQUssQ0FBQyxFQUN2QixDQUFDLFdBQVcsR0FBRyxLQUFLLEVBQUUsSUFBSSxDQUFDLENBQzVCO09BQ0YsQ0FBQyxDQUFDO0tBQ047O0FBRUQsUUFBSSxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO0FBQzFDLFVBQUksZUFBUSxPQUFPLENBQUMsRUFBRTtBQUNwQixhQUFLLElBQUksQ0FBQyxHQUFHLE9BQU8sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN2QyxjQUFJLENBQUMsSUFBSSxPQUFPLEVBQUU7QUFDaEIseUJBQWEsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsS0FBSyxPQUFPLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDO1dBQy9DO1NBQ0Y7T0FDRixNQUFNLElBQUksTUFBTSxDQUFDLE1BQU0sSUFBSSxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsRUFBRTtBQUMzRCxZQUFNLFVBQVUsR0FBRyxFQUFFLENBQUM7QUFDdEIsWUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQztBQUNuRCxhQUFLLElBQUksRUFBRSxHQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRSxHQUFHLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRTtBQUM3RCxvQkFBVSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUM7U0FDM0I7QUFDRCxlQUFPLEdBQUcsVUFBVSxDQUFDO0FBQ3JCLGFBQUssSUFBSSxDQUFDLEdBQUcsT0FBTyxDQUFDLE1BQU0sRUFBRSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO0FBQ3ZDLHVCQUFhLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEtBQUssT0FBTyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMvQztPQUNGLE1BQU07O0FBQ0wsY0FBSSxRQUFRLFlBQUEsQ0FBQzs7QUFFYixnQkFBTSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHLEVBQUk7Ozs7QUFJbEMsZ0JBQUksUUFBUSxLQUFLLFNBQVMsRUFBRTtBQUMxQiwyQkFBYSxDQUFDLFFBQVEsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7YUFDaEM7QUFDRCxvQkFBUSxHQUFHLEdBQUcsQ0FBQztBQUNmLGFBQUMsRUFBRSxDQUFDO1dBQ0wsQ0FBQyxDQUFDO0FBQ0gsY0FBSSxRQUFRLEtBQUssU0FBUyxFQUFFO0FBQzFCLHlCQUFhLENBQUMsUUFBUSxFQUFFLENBQUMsR0FBRyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUM7V0FDdEM7O09BQ0Y7S0FDRjs7QUFFRCxRQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7QUFDWCxTQUFHLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3JCOztBQUVELFdBQU8sR0FBRyxDQUFDO0dBQ1osQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoiZWFjaC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIGFwcGVuZENvbnRleHRQYXRoLFxuICBibG9ja1BhcmFtcyxcbiAgY3JlYXRlRnJhbWUsXG4gIGlzQXJyYXksXG4gIGlzRnVuY3Rpb25cbn0gZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IEV4Y2VwdGlvbiBmcm9tICcuLi9leGNlcHRpb24nO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbihpbnN0YW5jZSkge1xuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcignZWFjaCcsIGZ1bmN0aW9uKGNvbnRleHQsIG9wdGlvbnMpIHtcbiAgICBpZiAoIW9wdGlvbnMpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJ011c3QgcGFzcyBpdGVyYXRvciB0byAjZWFjaCcpO1xuICAgIH1cblxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm4sXG4gICAgICBpbnZlcnNlID0gb3B0aW9ucy5pbnZlcnNlLFxuICAgICAgaSA9IDAsXG4gICAgICByZXQgPSAnJyxcbiAgICAgIGRhdGEsXG4gICAgICBjb250ZXh0UGF0aDtcblxuICAgIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5pZHMpIHtcbiAgICAgIGNvbnRleHRQYXRoID1cbiAgICAgICAgYXBwZW5kQ29udGV4dFBhdGgob3B0aW9ucy5kYXRhLmNvbnRleHRQYXRoLCBvcHRpb25zLmlkc1swXSkgKyAnLic7XG4gICAgfVxuXG4gICAgaWYgKGlzRnVuY3Rpb24oY29udGV4dCkpIHtcbiAgICAgIGNvbnRleHQgPSBjb250ZXh0LmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgaWYgKG9wdGlvbnMuZGF0YSkge1xuICAgICAgZGF0YSA9IGNyZWF0ZUZyYW1lKG9wdGlvbnMuZGF0YSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZXhlY0l0ZXJhdGlvbihmaWVsZCwgaW5kZXgsIGxhc3QpIHtcbiAgICAgIGlmIChkYXRhKSB7XG4gICAgICAgIGRhdGEua2V5ID0gZmllbGQ7XG4gICAgICAgIGRhdGEuaW5kZXggPSBpbmRleDtcbiAgICAgICAgZGF0YS5maXJzdCA9IGluZGV4ID09PSAwO1xuICAgICAgICBkYXRhLmxhc3QgPSAhIWxhc3Q7XG5cbiAgICAgICAgaWYgKGNvbnRleHRQYXRoKSB7XG4gICAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGNvbnRleHRQYXRoICsgZmllbGQ7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0ID1cbiAgICAgICAgcmV0ICtcbiAgICAgICAgZm4oY29udGV4dFtmaWVsZF0sIHtcbiAgICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICAgIGJsb2NrUGFyYW1zOiBibG9ja1BhcmFtcyhcbiAgICAgICAgICAgIFtjb250ZXh0W2ZpZWxkXSwgZmllbGRdLFxuICAgICAgICAgICAgW2NvbnRleHRQYXRoICsgZmllbGQsIG51bGxdXG4gICAgICAgICAgKVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoY29udGV4dCAmJiB0eXBlb2YgY29udGV4dCA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGlmIChpc0FycmF5KGNvbnRleHQpKSB7XG4gICAgICAgIGZvciAobGV0IGogPSBjb250ZXh0Lmxlbmd0aDsgaSA8IGo7IGkrKykge1xuICAgICAgICAgIGlmIChpIGluIGNvbnRleHQpIHtcbiAgICAgICAgICAgIGV4ZWNJdGVyYXRpb24oaSwgaSwgaSA9PT0gY29udGV4dC5sZW5ndGggLSAxKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSBpZiAoZ2xvYmFsLlN5bWJvbCAmJiBjb250ZXh0W2dsb2JhbC5TeW1ib2wuaXRlcmF0b3JdKSB7XG4gICAgICAgIGNvbnN0IG5ld0NvbnRleHQgPSBbXTtcbiAgICAgICAgY29uc3QgaXRlcmF0b3IgPSBjb250ZXh0W2dsb2JhbC5TeW1ib2wuaXRlcmF0b3JdKCk7XG4gICAgICAgIGZvciAobGV0IGl0ID0gaXRlcmF0b3IubmV4dCgpOyAhaXQuZG9uZTsgaXQgPSBpdGVyYXRvci5uZXh0KCkpIHtcbiAgICAgICAgICBuZXdDb250ZXh0LnB1c2goaXQudmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnRleHQgPSBuZXdDb250ZXh0O1xuICAgICAgICBmb3IgKGxldCBqID0gY29udGV4dC5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgICBleGVjSXRlcmF0aW9uKGksIGksIGkgPT09IGNvbnRleHQubGVuZ3RoIC0gMSk7XG4gICAgICAgIH1cbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldCBwcmlvcktleTtcblxuICAgICAgICBPYmplY3Qua2V5cyhjb250ZXh0KS5mb3JFYWNoKGtleSA9PiB7XG4gICAgICAgICAgLy8gV2UncmUgcnVubmluZyB0aGUgaXRlcmF0aW9ucyBvbmUgc3RlcCBvdXQgb2Ygc3luYyBzbyB3ZSBjYW4gZGV0ZWN0XG4gICAgICAgICAgLy8gdGhlIGxhc3QgaXRlcmF0aW9uIHdpdGhvdXQgaGF2ZSB0byBzY2FuIHRoZSBvYmplY3QgdHdpY2UgYW5kIGNyZWF0ZVxuICAgICAgICAgIC8vIGFuIGl0ZXJtZWRpYXRlIGtleXMgYXJyYXkuXG4gICAgICAgICAgaWYgKHByaW9yS2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGV4ZWNJdGVyYXRpb24ocHJpb3JLZXksIGkgLSAxKTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcHJpb3JLZXkgPSBrZXk7XG4gICAgICAgICAgaSsrO1xuICAgICAgICB9KTtcbiAgICAgICAgaWYgKHByaW9yS2V5ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICBleGVjSXRlcmF0aW9uKHByaW9yS2V5LCBpIC0gMSwgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgcmV0ID0gaW52ZXJzZSh0aGlzKTtcbiAgICB9XG5cbiAgICByZXR1cm4gcmV0O1xuICB9KTtcbn1cbiJdfQ==\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/helpers/each.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js ***!
  \*******************************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _exception = __webpack_require__(/*! ../exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports.default = function (instance) {\n  instance.registerHelper('helperMissing', function () /* [args, ]options */{\n    if (arguments.length === 1) {\n      // A missing field in a {{foo}} construct.\n      return undefined;\n    } else {\n      // Someone is actually trying to call something, blow up.\n      throw new _exception2['default']('Missing helper: \"' + arguments[arguments.length - 1].name + '\"');\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaGVscGVyLW1pc3NpbmcuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozt5QkFBc0IsY0FBYzs7OztxQkFFckIsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxlQUFlLEVBQUUsaUNBQWdDO0FBQ3ZFLFFBQUksU0FBUyxDQUFDLE1BQU0sS0FBSyxDQUFDLEVBQUU7O0FBRTFCLGFBQU8sU0FBUyxDQUFDO0tBQ2xCLE1BQU07O0FBRUwsWUFBTSwyQkFDSixtQkFBbUIsR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUNqRSxDQUFDO0tBQ0g7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJoZWxwZXItbWlzc2luZy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi4vZXhjZXB0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2hlbHBlck1pc3NpbmcnLCBmdW5jdGlvbigvKiBbYXJncywgXW9wdGlvbnMgKi8pIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCA9PT0gMSkge1xuICAgICAgLy8gQSBtaXNzaW5nIGZpZWxkIGluIGEge3tmb299fSBjb25zdHJ1Y3QuXG4gICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBTb21lb25lIGlzIGFjdHVhbGx5IHRyeWluZyB0byBjYWxsIHNvbWV0aGluZywgYmxvdyB1cC5cbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oXG4gICAgICAgICdNaXNzaW5nIGhlbHBlcjogXCInICsgYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXS5uYW1lICsgJ1wiJ1xuICAgICAgKTtcbiAgICB9XG4gIH0pO1xufVxuIl19\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/helpers/helper-missing.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/helpers/if.js":
/*!*******************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/helpers/if.js ***!
  \*******************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nvar _exception = __webpack_require__(/*! ../exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports.default = function (instance) {\n  instance.registerHelper('if', function (conditional, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#if requires exactly one argument');\n    }\n    if (_utils.isFunction(conditional)) {\n      conditional = conditional.call(this);\n    }\n\n    // Default behavior is to render the positive path if the value is truthy and not empty.\n    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {\n      return options.inverse(this);\n    } else {\n      return options.fn(this);\n    }\n  });\n\n  instance.registerHelper('unless', function (conditional, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#unless requires exactly one argument');\n    }\n    return instance.helpers['if'].call(this, conditional, {\n      fn: options.inverse,\n      inverse: options.fn,\n      hash: options.hash\n    });\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvaWYuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztxQkFBb0MsVUFBVTs7eUJBQ3hCLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsSUFBSSxFQUFFLFVBQVMsV0FBVyxFQUFFLE9BQU8sRUFBRTtBQUMzRCxRQUFJLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO0FBQ3pCLFlBQU0sMkJBQWMsbUNBQW1DLENBQUMsQ0FBQztLQUMxRDtBQUNELFFBQUksa0JBQVcsV0FBVyxDQUFDLEVBQUU7QUFDM0IsaUJBQVcsR0FBRyxXQUFXLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQ3RDOzs7OztBQUtELFFBQUksQUFBQyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxJQUFJLENBQUMsV0FBVyxJQUFLLGVBQVEsV0FBVyxDQUFDLEVBQUU7QUFDdkUsYUFBTyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0tBQzlCLE1BQU07QUFDTCxhQUFPLE9BQU8sQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDekI7R0FDRixDQUFDLENBQUM7O0FBRUgsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxXQUFXLEVBQUUsT0FBTyxFQUFFO0FBQy9ELFFBQUksU0FBUyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7QUFDekIsWUFBTSwyQkFBYyx1Q0FBdUMsQ0FBQyxDQUFDO0tBQzlEO0FBQ0QsV0FBTyxRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsV0FBVyxFQUFFO0FBQ3BELFFBQUUsRUFBRSxPQUFPLENBQUMsT0FBTztBQUNuQixhQUFPLEVBQUUsT0FBTyxDQUFDLEVBQUU7QUFDbkIsVUFBSSxFQUFFLE9BQU8sQ0FBQyxJQUFJO0tBQ25CLENBQUMsQ0FBQztHQUNKLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6ImlmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNFbXB0eSwgaXNGdW5jdGlvbiB9IGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCBFeGNlcHRpb24gZnJvbSAnLi4vZXhjZXB0aW9uJztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2lmJywgZnVuY3Rpb24oY29uZGl0aW9uYWwsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCAhPSAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCcjaWYgcmVxdWlyZXMgZXhhY3RseSBvbmUgYXJndW1lbnQnKTtcbiAgICB9XG4gICAgaWYgKGlzRnVuY3Rpb24oY29uZGl0aW9uYWwpKSB7XG4gICAgICBjb25kaXRpb25hbCA9IGNvbmRpdGlvbmFsLmNhbGwodGhpcyk7XG4gICAgfVxuXG4gICAgLy8gRGVmYXVsdCBiZWhhdmlvciBpcyB0byByZW5kZXIgdGhlIHBvc2l0aXZlIHBhdGggaWYgdGhlIHZhbHVlIGlzIHRydXRoeSBhbmQgbm90IGVtcHR5LlxuICAgIC8vIFRoZSBgaW5jbHVkZVplcm9gIG9wdGlvbiBtYXkgYmUgc2V0IHRvIHRyZWF0IHRoZSBjb25kdGlvbmFsIGFzIHB1cmVseSBub3QgZW1wdHkgYmFzZWQgb24gdGhlXG4gICAgLy8gYmVoYXZpb3Igb2YgaXNFbXB0eS4gRWZmZWN0aXZlbHkgdGhpcyBkZXRlcm1pbmVzIGlmIDAgaXMgaGFuZGxlZCBieSB0aGUgcG9zaXRpdmUgcGF0aCBvciBuZWdhdGl2ZS5cbiAgICBpZiAoKCFvcHRpb25zLmhhc2guaW5jbHVkZVplcm8gJiYgIWNvbmRpdGlvbmFsKSB8fCBpc0VtcHR5KGNvbmRpdGlvbmFsKSkge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuaW52ZXJzZSh0aGlzKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIG9wdGlvbnMuZm4odGhpcyk7XG4gICAgfVxuICB9KTtcblxuICBpbnN0YW5jZS5yZWdpc3RlckhlbHBlcigndW5sZXNzJywgZnVuY3Rpb24oY29uZGl0aW9uYWwsIG9wdGlvbnMpIHtcbiAgICBpZiAoYXJndW1lbnRzLmxlbmd0aCAhPSAyKSB7XG4gICAgICB0aHJvdyBuZXcgRXhjZXB0aW9uKCcjdW5sZXNzIHJlcXVpcmVzIGV4YWN0bHkgb25lIGFyZ3VtZW50Jyk7XG4gICAgfVxuICAgIHJldHVybiBpbnN0YW5jZS5oZWxwZXJzWydpZiddLmNhbGwodGhpcywgY29uZGl0aW9uYWwsIHtcbiAgICAgIGZuOiBvcHRpb25zLmludmVyc2UsXG4gICAgICBpbnZlcnNlOiBvcHRpb25zLmZuLFxuICAgICAgaGFzaDogb3B0aW9ucy5oYXNoXG4gICAgfSk7XG4gIH0pO1xufVxuIl19\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/helpers/if.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/helpers/log.js":
/*!********************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/helpers/log.js ***!
  \********************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\nexports.__esModule = true;\n\nexports.default = function (instance) {\n  instance.registerHelper('log', function () /* message, options */{\n    var args = [undefined],\n        options = arguments[arguments.length - 1];\n    for (var i = 0; i < arguments.length - 1; i++) {\n      args.push(arguments[i]);\n    }\n\n    var level = 1;\n    if (options.hash.level != null) {\n      level = options.hash.level;\n    } else if (options.data && options.data.level != null) {\n      level = options.data.level;\n    }\n    args[0] = level;\n\n    instance.log.apply(instance, args);\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxLQUFLLEVBQUUsa0NBQWlDO0FBQzlELFFBQUksSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDO1FBQ3BCLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUM1QyxTQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDN0MsVUFBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztLQUN6Qjs7QUFFRCxRQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7QUFDZCxRQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxJQUFJLElBQUksRUFBRTtBQUM5QixXQUFLLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7S0FDNUIsTUFBTSxJQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxFQUFFO0FBQ3JELFdBQUssR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQztLQUM1QjtBQUNELFFBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxLQUFLLENBQUM7O0FBRWhCLFlBQVEsQ0FBQyxHQUFHLE1BQUEsQ0FBWixRQUFRLEVBQVEsSUFBSSxDQUFDLENBQUM7R0FDdkIsQ0FBQyxDQUFDO0NBQ0oiLCJmaWxlIjoibG9nLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oaW5zdGFuY2UpIHtcbiAgaW5zdGFuY2UucmVnaXN0ZXJIZWxwZXIoJ2xvZycsIGZ1bmN0aW9uKC8qIG1lc3NhZ2UsIG9wdGlvbnMgKi8pIHtcbiAgICBsZXQgYXJncyA9IFt1bmRlZmluZWRdLFxuICAgICAgb3B0aW9ucyA9IGFyZ3VtZW50c1thcmd1bWVudHMubGVuZ3RoIC0gMV07XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICBhcmdzLnB1c2goYXJndW1lbnRzW2ldKTtcbiAgICB9XG5cbiAgICBsZXQgbGV2ZWwgPSAxO1xuICAgIGlmIChvcHRpb25zLmhhc2gubGV2ZWwgIT0gbnVsbCkge1xuICAgICAgbGV2ZWwgPSBvcHRpb25zLmhhc2gubGV2ZWw7XG4gICAgfSBlbHNlIGlmIChvcHRpb25zLmRhdGEgJiYgb3B0aW9ucy5kYXRhLmxldmVsICE9IG51bGwpIHtcbiAgICAgIGxldmVsID0gb3B0aW9ucy5kYXRhLmxldmVsO1xuICAgIH1cbiAgICBhcmdzWzBdID0gbGV2ZWw7XG5cbiAgICBpbnN0YW5jZS5sb2coLi4uYXJncyk7XG4gIH0pO1xufVxuIl19\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/helpers/log.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js":
/*!***********************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js ***!
  \***********************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("\n\nexports.__esModule = true;\n\nexports.default = function (instance) {\n  instance.registerHelper('lookup', function (obj, field, options) {\n    if (!obj) {\n      // Note for 5.0: Change to \"obj == null\" in 5.0\n      return obj;\n    }\n    return options.lookupProperty(obj, field);\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvbG9va3VwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxRQUFRLEVBQUU7QUFDaEMsVUFBUSxDQUFDLGNBQWMsQ0FBQyxRQUFRLEVBQUUsVUFBUyxHQUFHLEVBQUUsS0FBSyxFQUFFLE9BQU8sRUFBRTtBQUM5RCxRQUFJLENBQUMsR0FBRyxFQUFFOztBQUVSLGFBQU8sR0FBRyxDQUFDO0tBQ1o7QUFDRCxXQUFPLE9BQU8sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDO0dBQzNDLENBQUMsQ0FBQztDQUNKIiwiZmlsZSI6Imxvb2t1cC5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCdsb29rdXAnLCBmdW5jdGlvbihvYmosIGZpZWxkLCBvcHRpb25zKSB7XG4gICAgaWYgKCFvYmopIHtcbiAgICAgIC8vIE5vdGUgZm9yIDUuMDogQ2hhbmdlIHRvIFwib2JqID09IG51bGxcIiBpbiA1LjBcbiAgICAgIHJldHVybiBvYmo7XG4gICAgfVxuICAgIHJldHVybiBvcHRpb25zLmxvb2t1cFByb3BlcnR5KG9iaiwgZmllbGQpO1xuICB9KTtcbn1cbiJdfQ==\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/helpers/lookup.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/helpers/with.js":
/*!*********************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/helpers/with.js ***!
  \*********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nvar _exception = __webpack_require__(/*! ../exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nexports.default = function (instance) {\n  instance.registerHelper('with', function (context, options) {\n    if (arguments.length != 2) {\n      throw new _exception2['default']('#with requires exactly one argument');\n    }\n    if (_utils.isFunction(context)) {\n      context = context.call(this);\n    }\n\n    var fn = options.fn;\n\n    if (!_utils.isEmpty(context)) {\n      var data = options.data;\n      if (options.data && options.ids) {\n        data = _utils.createFrame(options.data);\n        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);\n      }\n\n      return fn(context, {\n        data: data,\n        blockParams: _utils.blockParams([context], [data && data.contextPath])\n      });\n    } else {\n      return options.inverse(this);\n    }\n  });\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2hlbHBlcnMvd2l0aC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O3FCQU1PLFVBQVU7O3lCQUNLLGNBQWM7Ozs7cUJBRXJCLFVBQVMsUUFBUSxFQUFFO0FBQ2hDLFVBQVEsQ0FBQyxjQUFjLENBQUMsTUFBTSxFQUFFLFVBQVMsT0FBTyxFQUFFLE9BQU8sRUFBRTtBQUN6RCxRQUFJLFNBQVMsQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUFFO0FBQ3pCLFlBQU0sMkJBQWMscUNBQXFDLENBQUMsQ0FBQztLQUM1RDtBQUNELFFBQUksa0JBQVcsT0FBTyxDQUFDLEVBQUU7QUFDdkIsYUFBTyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDOUI7O0FBRUQsUUFBSSxFQUFFLEdBQUcsT0FBTyxDQUFDLEVBQUUsQ0FBQzs7QUFFcEIsUUFBSSxDQUFDLGVBQVEsT0FBTyxDQUFDLEVBQUU7QUFDckIsVUFBSSxJQUFJLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQztBQUN4QixVQUFJLE9BQU8sQ0FBQyxJQUFJLElBQUksT0FBTyxDQUFDLEdBQUcsRUFBRTtBQUMvQixZQUFJLEdBQUcsbUJBQVksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0FBQ2pDLFlBQUksQ0FBQyxXQUFXLEdBQUcseUJBQ2pCLE9BQU8sQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUN4QixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUNmLENBQUM7T0FDSDs7QUFFRCxhQUFPLEVBQUUsQ0FBQyxPQUFPLEVBQUU7QUFDakIsWUFBSSxFQUFFLElBQUk7QUFDVixtQkFBVyxFQUFFLG1CQUFZLENBQUMsT0FBTyxDQUFDLEVBQUUsQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO09BQ2hFLENBQUMsQ0FBQztLQUNKLE1BQU07QUFDTCxhQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDOUI7R0FDRixDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJ3aXRoLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgYXBwZW5kQ29udGV4dFBhdGgsXG4gIGJsb2NrUGFyYW1zLFxuICBjcmVhdGVGcmFtZSxcbiAgaXNFbXB0eSxcbiAgaXNGdW5jdGlvblxufSBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgRXhjZXB0aW9uIGZyb20gJy4uL2V4Y2VwdGlvbic7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKGluc3RhbmNlKSB7XG4gIGluc3RhbmNlLnJlZ2lzdGVySGVscGVyKCd3aXRoJywgZnVuY3Rpb24oY29udGV4dCwgb3B0aW9ucykge1xuICAgIGlmIChhcmd1bWVudHMubGVuZ3RoICE9IDIpIHtcbiAgICAgIHRocm93IG5ldyBFeGNlcHRpb24oJyN3aXRoIHJlcXVpcmVzIGV4YWN0bHkgb25lIGFyZ3VtZW50Jyk7XG4gICAgfVxuICAgIGlmIChpc0Z1bmN0aW9uKGNvbnRleHQpKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5jYWxsKHRoaXMpO1xuICAgIH1cblxuICAgIGxldCBmbiA9IG9wdGlvbnMuZm47XG5cbiAgICBpZiAoIWlzRW1wdHkoY29udGV4dCkpIHtcbiAgICAgIGxldCBkYXRhID0gb3B0aW9ucy5kYXRhO1xuICAgICAgaWYgKG9wdGlvbnMuZGF0YSAmJiBvcHRpb25zLmlkcykge1xuICAgICAgICBkYXRhID0gY3JlYXRlRnJhbWUob3B0aW9ucy5kYXRhKTtcbiAgICAgICAgZGF0YS5jb250ZXh0UGF0aCA9IGFwcGVuZENvbnRleHRQYXRoKFxuICAgICAgICAgIG9wdGlvbnMuZGF0YS5jb250ZXh0UGF0aCxcbiAgICAgICAgICBvcHRpb25zLmlkc1swXVxuICAgICAgICApO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZm4oY29udGV4dCwge1xuICAgICAgICBkYXRhOiBkYXRhLFxuICAgICAgICBibG9ja1BhcmFtczogYmxvY2tQYXJhbXMoW2NvbnRleHRdLCBbZGF0YSAmJiBkYXRhLmNvbnRleHRQYXRoXSlcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gb3B0aW9ucy5pbnZlcnNlKHRoaXMpO1xuICAgIH1cbiAgfSk7XG59XG4iXX0=\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/helpers/with.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.createNewLookupObject = createNewLookupObject;\n\nvar _utils = __webpack_require__(/*! ../utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\n/**\n * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n * The resulting object can be used with \"object[property]\" to check if a property exists\n * @param {...object} sources a varargs parameter of source objects that will be merged\n * @returns {object}\n */\n\nfunction createNewLookupObject() {\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  return _utils.extend.apply(undefined, [Object.create(null)].concat(sources));\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL2NyZWF0ZS1uZXctbG9va3VwLW9iamVjdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztxQkFBdUIsVUFBVTs7Ozs7Ozs7O0FBUTFCLFNBQVMscUJBQXFCLEdBQWE7b0NBQVQsT0FBTztBQUFQLFdBQU87OztBQUM5QyxTQUFPLGdDQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQUssT0FBTyxFQUFDLENBQUM7Q0FDaEQiLCJmaWxlIjoiY3JlYXRlLW5ldy1sb29rdXAtb2JqZWN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZXh0ZW5kIH0gZnJvbSAnLi4vdXRpbHMnO1xuXG4vKipcbiAqIENyZWF0ZSBhIG5ldyBvYmplY3Qgd2l0aCBcIm51bGxcIi1wcm90b3R5cGUgdG8gYXZvaWQgdHJ1dGh5IHJlc3VsdHMgb24gcHJvdG90eXBlIHByb3BlcnRpZXMuXG4gKiBUaGUgcmVzdWx0aW5nIG9iamVjdCBjYW4gYmUgdXNlZCB3aXRoIFwib2JqZWN0W3Byb3BlcnR5XVwiIHRvIGNoZWNrIGlmIGEgcHJvcGVydHkgZXhpc3RzXG4gKiBAcGFyYW0gey4uLm9iamVjdH0gc291cmNlcyBhIHZhcmFyZ3MgcGFyYW1ldGVyIG9mIHNvdXJjZSBvYmplY3RzIHRoYXQgd2lsbCBiZSBtZXJnZWRcbiAqIEByZXR1cm5zIHtvYmplY3R9XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVOZXdMb29rdXBPYmplY3QoLi4uc291cmNlcykge1xuICByZXR1cm4gZXh0ZW5kKE9iamVjdC5jcmVhdGUobnVsbCksIC4uLnNvdXJjZXMpO1xufVxuIl19\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js":
/*!******************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.createProtoAccessControl = createProtoAccessControl;\nexports.resultIsAllowed = resultIsAllowed;\nexports.resetLoggedProperties = resetLoggedProperties;\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _createNewLookupObject = __webpack_require__(/*! ./create-new-lookup-object */ \"./node_modules/handlebars/dist/cjs/handlebars/internal/create-new-lookup-object.js\");\n\nvar _logger = __webpack_require__(/*! ../logger */ \"./node_modules/handlebars/dist/cjs/handlebars/logger.js\");\n\nvar logger = _interopRequireWildcard(_logger);\n\nvar loggedProperties = Object.create(null);\n\nfunction createProtoAccessControl(runtimeOptions) {\n  var defaultMethodWhiteList = Object.create(null);\n  defaultMethodWhiteList['constructor'] = false;\n  defaultMethodWhiteList['__defineGetter__'] = false;\n  defaultMethodWhiteList['__defineSetter__'] = false;\n  defaultMethodWhiteList['__lookupGetter__'] = false;\n\n  var defaultPropertyWhiteList = Object.create(null);\n  // eslint-disable-next-line no-proto\n  defaultPropertyWhiteList['__proto__'] = false;\n\n  return {\n    properties: {\n      whitelist: _createNewLookupObject.createNewLookupObject(defaultPropertyWhiteList, runtimeOptions.allowedProtoProperties),\n      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n    },\n    methods: {\n      whitelist: _createNewLookupObject.createNewLookupObject(defaultMethodWhiteList, runtimeOptions.allowedProtoMethods),\n      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n    }\n  };\n}\n\nfunction resultIsAllowed(result, protoAccessControl, propertyName) {\n  if (typeof result === 'function') {\n    return checkWhiteList(protoAccessControl.methods, propertyName);\n  } else {\n    return checkWhiteList(protoAccessControl.properties, propertyName);\n  }\n}\n\nfunction checkWhiteList(protoAccessControlForType, propertyName) {\n  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n    return protoAccessControlForType.whitelist[propertyName] === true;\n  }\n  if (protoAccessControlForType.defaultValue !== undefined) {\n    return protoAccessControlForType.defaultValue;\n  }\n  logUnexpecedPropertyAccessOnce(propertyName);\n  return false;\n}\n\nfunction logUnexpecedPropertyAccessOnce(propertyName) {\n  if (loggedProperties[propertyName] !== true) {\n    loggedProperties[propertyName] = true;\n    logger.log('error', 'Handlebars: Access has been denied to resolve the property \"' + propertyName + '\" because it is not an \"own property\" of its parent.\\n' + 'You can add a runtime option to disable the check or this warning:\\n' + 'See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details');\n  }\n}\n\nfunction resetLoggedProperties() {\n  Object.keys(loggedProperties).forEach(function (propertyName) {\n    delete loggedProperties[propertyName];\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL3Byb3RvLWFjY2Vzcy5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O3FDQUFzQyw0QkFBNEI7O3NCQUMxQyxXQUFXOztJQUF2QixNQUFNOztBQUVsQixJQUFNLGdCQUFnQixHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRXRDLFNBQVMsd0JBQXdCLENBQUMsY0FBYyxFQUFFO0FBQ3ZELE1BQUksc0JBQXNCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUNqRCx3QkFBc0IsQ0FBQyxhQUFhLENBQUMsR0FBRyxLQUFLLENBQUM7QUFDOUMsd0JBQXNCLENBQUMsa0JBQWtCLENBQUMsR0FBRyxLQUFLLENBQUM7QUFDbkQsd0JBQXNCLENBQUMsa0JBQWtCLENBQUMsR0FBRyxLQUFLLENBQUM7QUFDbkQsd0JBQXNCLENBQUMsa0JBQWtCLENBQUMsR0FBRyxLQUFLLENBQUM7O0FBRW5ELE1BQUksd0JBQXdCLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQzs7QUFFbkQsMEJBQXdCLENBQUMsV0FBVyxDQUFDLEdBQUcsS0FBSyxDQUFDOztBQUU5QyxTQUFPO0FBQ0wsY0FBVSxFQUFFO0FBQ1YsZUFBUyxFQUFFLDZDQUNULHdCQUF3QixFQUN4QixjQUFjLENBQUMsc0JBQXNCLENBQ3RDO0FBQ0Qsa0JBQVksRUFBRSxjQUFjLENBQUMsNkJBQTZCO0tBQzNEO0FBQ0QsV0FBTyxFQUFFO0FBQ1AsZUFBUyxFQUFFLDZDQUNULHNCQUFzQixFQUN0QixjQUFjLENBQUMsbUJBQW1CLENBQ25DO0FBQ0Qsa0JBQVksRUFBRSxjQUFjLENBQUMsMEJBQTBCO0tBQ3hEO0dBQ0YsQ0FBQztDQUNIOztBQUVNLFNBQVMsZUFBZSxDQUFDLE1BQU0sRUFBRSxrQkFBa0IsRUFBRSxZQUFZLEVBQUU7QUFDeEUsTUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLEVBQUU7QUFDaEMsV0FBTyxjQUFjLENBQUMsa0JBQWtCLENBQUMsT0FBTyxFQUFFLFlBQVksQ0FBQyxDQUFDO0dBQ2pFLE1BQU07QUFDTCxXQUFPLGNBQWMsQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLEVBQUUsWUFBWSxDQUFDLENBQUM7R0FDcEU7Q0FDRjs7QUFFRCxTQUFTLGNBQWMsQ0FBQyx5QkFBeUIsRUFBRSxZQUFZLEVBQUU7QUFDL0QsTUFBSSx5QkFBeUIsQ0FBQyxTQUFTLENBQUMsWUFBWSxDQUFDLEtBQUssU0FBUyxFQUFFO0FBQ25FLFdBQU8seUJBQXlCLENBQUMsU0FBUyxDQUFDLFlBQVksQ0FBQyxLQUFLLElBQUksQ0FBQztHQUNuRTtBQUNELE1BQUkseUJBQXlCLENBQUMsWUFBWSxLQUFLLFNBQVMsRUFBRTtBQUN4RCxXQUFPLHlCQUF5QixDQUFDLFlBQVksQ0FBQztHQUMvQztBQUNELGdDQUE4QixDQUFDLFlBQVksQ0FBQyxDQUFDO0FBQzdDLFNBQU8sS0FBSyxDQUFDO0NBQ2Q7O0FBRUQsU0FBUyw4QkFBOEIsQ0FBQyxZQUFZLEVBQUU7QUFDcEQsTUFBSSxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsS0FBSyxJQUFJLEVBQUU7QUFDM0Msb0JBQWdCLENBQUMsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDO0FBQ3RDLFVBQU0sQ0FBQyxHQUFHLENBQ1IsT0FBTyxFQUNQLGlFQUErRCxZQUFZLG9JQUNILG9IQUMyQyxDQUNwSCxDQUFDO0dBQ0g7Q0FDRjs7QUFFTSxTQUFTLHFCQUFxQixHQUFHO0FBQ3RDLFFBQU0sQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxZQUFZLEVBQUk7QUFDcEQsV0FBTyxnQkFBZ0IsQ0FBQyxZQUFZLENBQUMsQ0FBQztHQUN2QyxDQUFDLENBQUM7Q0FDSiIsImZpbGUiOiJwcm90by1hY2Nlc3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVOZXdMb29rdXBPYmplY3QgfSBmcm9tICcuL2NyZWF0ZS1uZXctbG9va3VwLW9iamVjdCc7XG5pbXBvcnQgKiBhcyBsb2dnZXIgZnJvbSAnLi4vbG9nZ2VyJztcblxuY29uc3QgbG9nZ2VkUHJvcGVydGllcyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm90b0FjY2Vzc0NvbnRyb2wocnVudGltZU9wdGlvbnMpIHtcbiAgbGV0IGRlZmF1bHRNZXRob2RXaGl0ZUxpc3QgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuICBkZWZhdWx0TWV0aG9kV2hpdGVMaXN0Wydjb25zdHJ1Y3RvciddID0gZmFsc2U7XG4gIGRlZmF1bHRNZXRob2RXaGl0ZUxpc3RbJ19fZGVmaW5lR2V0dGVyX18nXSA9IGZhbHNlO1xuICBkZWZhdWx0TWV0aG9kV2hpdGVMaXN0WydfX2RlZmluZVNldHRlcl9fJ10gPSBmYWxzZTtcbiAgZGVmYXVsdE1ldGhvZFdoaXRlTGlzdFsnX19sb29rdXBHZXR0ZXJfXyddID0gZmFsc2U7XG5cbiAgbGV0IGRlZmF1bHRQcm9wZXJ0eVdoaXRlTGlzdCA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wcm90b1xuICBkZWZhdWx0UHJvcGVydHlXaGl0ZUxpc3RbJ19fcHJvdG9fXyddID0gZmFsc2U7XG5cbiAgcmV0dXJuIHtcbiAgICBwcm9wZXJ0aWVzOiB7XG4gICAgICB3aGl0ZWxpc3Q6IGNyZWF0ZU5ld0xvb2t1cE9iamVjdChcbiAgICAgICAgZGVmYXVsdFByb3BlcnR5V2hpdGVMaXN0LFxuICAgICAgICBydW50aW1lT3B0aW9ucy5hbGxvd2VkUHJvdG9Qcm9wZXJ0aWVzXG4gICAgICApLFxuICAgICAgZGVmYXVsdFZhbHVlOiBydW50aW1lT3B0aW9ucy5hbGxvd1Byb3RvUHJvcGVydGllc0J5RGVmYXVsdFxuICAgIH0sXG4gICAgbWV0aG9kczoge1xuICAgICAgd2hpdGVsaXN0OiBjcmVhdGVOZXdMb29rdXBPYmplY3QoXG4gICAgICAgIGRlZmF1bHRNZXRob2RXaGl0ZUxpc3QsXG4gICAgICAgIHJ1bnRpbWVPcHRpb25zLmFsbG93ZWRQcm90b01ldGhvZHNcbiAgICAgICksXG4gICAgICBkZWZhdWx0VmFsdWU6IHJ1bnRpbWVPcHRpb25zLmFsbG93UHJvdG9NZXRob2RzQnlEZWZhdWx0XG4gICAgfVxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzdWx0SXNBbGxvd2VkKHJlc3VsdCwgcHJvdG9BY2Nlc3NDb250cm9sLCBwcm9wZXJ0eU5hbWUpIHtcbiAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdmdW5jdGlvbicpIHtcbiAgICByZXR1cm4gY2hlY2tXaGl0ZUxpc3QocHJvdG9BY2Nlc3NDb250cm9sLm1ldGhvZHMsIHByb3BlcnR5TmFtZSk7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIGNoZWNrV2hpdGVMaXN0KHByb3RvQWNjZXNzQ29udHJvbC5wcm9wZXJ0aWVzLCBwcm9wZXJ0eU5hbWUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGNoZWNrV2hpdGVMaXN0KHByb3RvQWNjZXNzQ29udHJvbEZvclR5cGUsIHByb3BlcnR5TmFtZSkge1xuICBpZiAocHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZS53aGl0ZWxpc3RbcHJvcGVydHlOYW1lXSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIHByb3RvQWNjZXNzQ29udHJvbEZvclR5cGUud2hpdGVsaXN0W3Byb3BlcnR5TmFtZV0gPT09IHRydWU7XG4gIH1cbiAgaWYgKHByb3RvQWNjZXNzQ29udHJvbEZvclR5cGUuZGVmYXVsdFZhbHVlICE9PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gcHJvdG9BY2Nlc3NDb250cm9sRm9yVHlwZS5kZWZhdWx0VmFsdWU7XG4gIH1cbiAgbG9nVW5leHBlY2VkUHJvcGVydHlBY2Nlc3NPbmNlKHByb3BlcnR5TmFtZSk7XG4gIHJldHVybiBmYWxzZTtcbn1cblxuZnVuY3Rpb24gbG9nVW5leHBlY2VkUHJvcGVydHlBY2Nlc3NPbmNlKHByb3BlcnR5TmFtZSkge1xuICBpZiAobG9nZ2VkUHJvcGVydGllc1twcm9wZXJ0eU5hbWVdICE9PSB0cnVlKSB7XG4gICAgbG9nZ2VkUHJvcGVydGllc1twcm9wZXJ0eU5hbWVdID0gdHJ1ZTtcbiAgICBsb2dnZXIubG9nKFxuICAgICAgJ2Vycm9yJyxcbiAgICAgIGBIYW5kbGViYXJzOiBBY2Nlc3MgaGFzIGJlZW4gZGVuaWVkIHRvIHJlc29sdmUgdGhlIHByb3BlcnR5IFwiJHtwcm9wZXJ0eU5hbWV9XCIgYmVjYXVzZSBpdCBpcyBub3QgYW4gXCJvd24gcHJvcGVydHlcIiBvZiBpdHMgcGFyZW50LlxcbmAgK1xuICAgICAgICBgWW91IGNhbiBhZGQgYSBydW50aW1lIG9wdGlvbiB0byBkaXNhYmxlIHRoZSBjaGVjayBvciB0aGlzIHdhcm5pbmc6XFxuYCArXG4gICAgICAgIGBTZWUgaHR0cHM6Ly9oYW5kbGViYXJzanMuY29tL2FwaS1yZWZlcmVuY2UvcnVudGltZS1vcHRpb25zLmh0bWwjb3B0aW9ucy10by1jb250cm9sLXByb3RvdHlwZS1hY2Nlc3MgZm9yIGRldGFpbHNgXG4gICAgKTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gcmVzZXRMb2dnZWRQcm9wZXJ0aWVzKCkge1xuICBPYmplY3Qua2V5cyhsb2dnZWRQcm9wZXJ0aWVzKS5mb3JFYWNoKHByb3BlcnR5TmFtZSA9PiB7XG4gICAgZGVsZXRlIGxvZ2dlZFByb3BlcnRpZXNbcHJvcGVydHlOYW1lXTtcbiAgfSk7XG59XG4iXX0=\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js":
/*!****************************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.wrapHelper = wrapHelper;\n\nfunction wrapHelper(helper, transformOptionsFn) {\n  if (typeof helper !== 'function') {\n    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n    return helper;\n  }\n  var wrapper = function wrapper() /* dynamic arguments */{\n    var options = arguments[arguments.length - 1];\n    arguments[arguments.length - 1] = transformOptionsFn(options);\n    return helper.apply(this, arguments);\n  };\n  return wrapper;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2ludGVybmFsL3dyYXBIZWxwZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBTyxTQUFTLFVBQVUsQ0FBQyxNQUFNLEVBQUUsa0JBQWtCLEVBQUU7QUFDckQsTUFBSSxPQUFPLE1BQU0sS0FBSyxVQUFVLEVBQUU7OztBQUdoQyxXQUFPLE1BQU0sQ0FBQztHQUNmO0FBQ0QsTUFBSSxPQUFPLEdBQUcsU0FBVixPQUFPLDBCQUFxQztBQUM5QyxRQUFNLE9BQU8sR0FBRyxTQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQztBQUNoRCxhQUFTLENBQUMsU0FBUyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsR0FBRyxrQkFBa0IsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUM5RCxXQUFPLE1BQU0sQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLFNBQVMsQ0FBQyxDQUFDO0dBQ3RDLENBQUM7QUFDRixTQUFPLE9BQU8sQ0FBQztDQUNoQiIsImZpbGUiOiJ3cmFwSGVscGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIHdyYXBIZWxwZXIoaGVscGVyLCB0cmFuc2Zvcm1PcHRpb25zRm4pIHtcbiAgaWYgKHR5cGVvZiBoZWxwZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAvLyBUaGlzIHNob3VsZCBub3QgaGFwcGVuLCBidXQgYXBwYXJlbnRseSBpdCBkb2VzIGluIGh0dHBzOi8vZ2l0aHViLmNvbS93eWNhdHMvaGFuZGxlYmFycy5qcy9pc3N1ZXMvMTYzOVxuICAgIC8vIFdlIHRyeSB0byBtYWtlIHRoZSB3cmFwcGVyIGxlYXN0LWludmFzaXZlIGJ5IG5vdCB3cmFwcGluZyBpdCwgaWYgdGhlIGhlbHBlciBpcyBub3QgYSBmdW5jdGlvbi5cbiAgICByZXR1cm4gaGVscGVyO1xuICB9XG4gIGxldCB3cmFwcGVyID0gZnVuY3Rpb24oLyogZHluYW1pYyBhcmd1bWVudHMgKi8pIHtcbiAgICBjb25zdCBvcHRpb25zID0gYXJndW1lbnRzW2FyZ3VtZW50cy5sZW5ndGggLSAxXTtcbiAgICBhcmd1bWVudHNbYXJndW1lbnRzLmxlbmd0aCAtIDFdID0gdHJhbnNmb3JtT3B0aW9uc0ZuKG9wdGlvbnMpO1xuICAgIHJldHVybiBoZWxwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfTtcbiAgcmV0dXJuIHdyYXBwZXI7XG59XG4iXX0=\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/logger.js":
/*!***************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/logger.js ***!
  \***************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nvar logger = {\n  methodMap: ['debug', 'info', 'warn', 'error'],\n  level: 'info',\n\n  // Maps a given level value to the `methodMap` indexes above.\n  lookupLevel: function lookupLevel(level) {\n    if (typeof level === 'string') {\n      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());\n      if (levelMap >= 0) {\n        level = levelMap;\n      } else {\n        level = parseInt(level, 10);\n      }\n    }\n\n    return level;\n  },\n\n  // Can be overridden in the host environment\n  log: function log(level) {\n    level = logger.lookupLevel(level);\n\n    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {\n      var method = logger.methodMap[level];\n      // eslint-disable-next-line no-console\n      if (!console[method]) {\n        method = 'log';\n      }\n\n      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        message[_key - 1] = arguments[_key];\n      }\n\n      console[method].apply(console, message); // eslint-disable-line no-console\n    }\n  }\n};\n\nexports.default = logger;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL2xvZ2dlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O3FCQUF3QixTQUFTOztBQUVqQyxJQUFJLE1BQU0sR0FBRztBQUNYLFdBQVMsRUFBRSxDQUFDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQztBQUM3QyxPQUFLLEVBQUUsTUFBTTs7O0FBR2IsYUFBVyxFQUFFLHFCQUFTLEtBQUssRUFBRTtBQUMzQixRQUFJLE9BQU8sS0FBSyxLQUFLLFFBQVEsRUFBRTtBQUM3QixVQUFJLFFBQVEsR0FBRyxlQUFRLE1BQU0sQ0FBQyxTQUFTLEVBQUUsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDLENBQUM7QUFDOUQsVUFBSSxRQUFRLElBQUksQ0FBQyxFQUFFO0FBQ2pCLGFBQUssR0FBRyxRQUFRLENBQUM7T0FDbEIsTUFBTTtBQUNMLGFBQUssR0FBRyxRQUFRLENBQUMsS0FBSyxFQUFFLEVBQUUsQ0FBQyxDQUFDO09BQzdCO0tBQ0Y7O0FBRUQsV0FBTyxLQUFLLENBQUM7R0FDZDs7O0FBR0QsS0FBRyxFQUFFLGFBQVMsS0FBSyxFQUFjO0FBQy9CLFNBQUssR0FBRyxNQUFNLENBQUMsV0FBVyxDQUFDLEtBQUssQ0FBQyxDQUFDOztBQUVsQyxRQUNFLE9BQU8sT0FBTyxLQUFLLFdBQVcsSUFDOUIsTUFBTSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLElBQUksS0FBSyxFQUN6QztBQUNBLFVBQUksTUFBTSxHQUFHLE1BQU0sQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7O0FBRXJDLFVBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7QUFDcEIsY0FBTSxHQUFHLEtBQUssQ0FBQztPQUNoQjs7d0NBWG1CLE9BQU87QUFBUCxlQUFPOzs7QUFZM0IsYUFBTyxDQUFDLE1BQU0sT0FBQyxDQUFmLE9BQU8sRUFBWSxPQUFPLENBQUMsQ0FBQztLQUM3QjtHQUNGO0NBQ0YsQ0FBQzs7cUJBRWEsTUFBTSIsImZpbGUiOiJsb2dnZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpbmRleE9mIH0gZnJvbSAnLi91dGlscyc7XG5cbmxldCBsb2dnZXIgPSB7XG4gIG1ldGhvZE1hcDogWydkZWJ1ZycsICdpbmZvJywgJ3dhcm4nLCAnZXJyb3InXSxcbiAgbGV2ZWw6ICdpbmZvJyxcblxuICAvLyBNYXBzIGEgZ2l2ZW4gbGV2ZWwgdmFsdWUgdG8gdGhlIGBtZXRob2RNYXBgIGluZGV4ZXMgYWJvdmUuXG4gIGxvb2t1cExldmVsOiBmdW5jdGlvbihsZXZlbCkge1xuICAgIGlmICh0eXBlb2YgbGV2ZWwgPT09ICdzdHJpbmcnKSB7XG4gICAgICBsZXQgbGV2ZWxNYXAgPSBpbmRleE9mKGxvZ2dlci5tZXRob2RNYXAsIGxldmVsLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgaWYgKGxldmVsTWFwID49IDApIHtcbiAgICAgICAgbGV2ZWwgPSBsZXZlbE1hcDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGxldmVsID0gcGFyc2VJbnQobGV2ZWwsIDEwKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gbGV2ZWw7XG4gIH0sXG5cbiAgLy8gQ2FuIGJlIG92ZXJyaWRkZW4gaW4gdGhlIGhvc3QgZW52aXJvbm1lbnRcbiAgbG9nOiBmdW5jdGlvbihsZXZlbCwgLi4ubWVzc2FnZSkge1xuICAgIGxldmVsID0gbG9nZ2VyLmxvb2t1cExldmVsKGxldmVsKTtcblxuICAgIGlmIChcbiAgICAgIHR5cGVvZiBjb25zb2xlICE9PSAndW5kZWZpbmVkJyAmJlxuICAgICAgbG9nZ2VyLmxvb2t1cExldmVsKGxvZ2dlci5sZXZlbCkgPD0gbGV2ZWxcbiAgICApIHtcbiAgICAgIGxldCBtZXRob2QgPSBsb2dnZXIubWV0aG9kTWFwW2xldmVsXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBpZiAoIWNvbnNvbGVbbWV0aG9kXSkge1xuICAgICAgICBtZXRob2QgPSAnbG9nJztcbiAgICAgIH1cbiAgICAgIGNvbnNvbGVbbWV0aG9kXSguLi5tZXNzYWdlKTsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1jb25zb2xlXG4gICAgfVxuICB9XG59O1xuXG5leHBvcnQgZGVmYXVsdCBsb2dnZXI7XG4iXX0=\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/logger.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/no-conflict.js":
/*!********************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/no-conflict.js ***!
  \********************************************************************/
/***/ ((module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\n\nexports.default = function (Handlebars) {\n  /* istanbul ignore next */\n  var root = typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : window,\n      $Handlebars = root.Handlebars;\n  /* istanbul ignore next */\n  Handlebars.noConflict = function () {\n    if (root.Handlebars === Handlebars) {\n      root.Handlebars = $Handlebars;\n    }\n    return Handlebars;\n  };\n};\n\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL25vLWNvbmZsaWN0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7cUJBQWUsVUFBUyxVQUFVLEVBQUU7O0FBRWxDLE1BQUksSUFBSSxHQUFHLE9BQU8sTUFBTSxLQUFLLFdBQVcsR0FBRyxNQUFNLEdBQUcsTUFBTTtNQUN4RCxXQUFXLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQzs7QUFFaEMsWUFBVSxDQUFDLFVBQVUsR0FBRyxZQUFXO0FBQ2pDLFFBQUksSUFBSSxDQUFDLFVBQVUsS0FBSyxVQUFVLEVBQUU7QUFDbEMsVUFBSSxDQUFDLFVBQVUsR0FBRyxXQUFXLENBQUM7S0FDL0I7QUFDRCxXQUFPLFVBQVUsQ0FBQztHQUNuQixDQUFDO0NBQ0giLCJmaWxlIjoibm8tY29uZmxpY3QuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbihIYW5kbGViYXJzKSB7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIGxldCByb290ID0gdHlwZW9mIGdsb2JhbCAhPT0gJ3VuZGVmaW5lZCcgPyBnbG9iYWwgOiB3aW5kb3csXG4gICAgJEhhbmRsZWJhcnMgPSByb290LkhhbmRsZWJhcnM7XG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG4gIEhhbmRsZWJhcnMubm9Db25mbGljdCA9IGZ1bmN0aW9uKCkge1xuICAgIGlmIChyb290LkhhbmRsZWJhcnMgPT09IEhhbmRsZWJhcnMpIHtcbiAgICAgIHJvb3QuSGFuZGxlYmFycyA9ICRIYW5kbGViYXJzO1xuICAgIH1cbiAgICByZXR1cm4gSGFuZGxlYmFycztcbiAgfTtcbn1cbiJdfQ==\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/no-conflict.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/runtime.js":
/*!****************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/runtime.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.checkRevision = checkRevision;\nexports.template = template;\nexports.wrapProgram = wrapProgram;\nexports.resolvePartial = resolvePartial;\nexports.invokePartial = invokePartial;\nexports.noop = noop;\n// istanbul ignore next\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\n// istanbul ignore next\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj['default'] = obj; return newObj; } }\n\nvar _utils = __webpack_require__(/*! ./utils */ \"./node_modules/handlebars/dist/cjs/handlebars/utils.js\");\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _exception = __webpack_require__(/*! ./exception */ \"./node_modules/handlebars/dist/cjs/handlebars/exception.js\");\n\nvar _exception2 = _interopRequireDefault(_exception);\n\nvar _base = __webpack_require__(/*! ./base */ \"./node_modules/handlebars/dist/cjs/handlebars/base.js\");\n\nvar _helpers = __webpack_require__(/*! ./helpers */ \"./node_modules/handlebars/dist/cjs/handlebars/helpers.js\");\n\nvar _internalWrapHelper = __webpack_require__(/*! ./internal/wrapHelper */ \"./node_modules/handlebars/dist/cjs/handlebars/internal/wrapHelper.js\");\n\nvar _internalProtoAccess = __webpack_require__(/*! ./internal/proto-access */ \"./node_modules/handlebars/dist/cjs/handlebars/internal/proto-access.js\");\n\nfunction checkRevision(compilerInfo) {\n  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n      currentRevision = _base.COMPILER_REVISION;\n\n  if (compilerRevision >= _base.LAST_COMPATIBLE_COMPILER_REVISION && compilerRevision <= _base.COMPILER_REVISION) {\n    return;\n  }\n\n  if (compilerRevision < _base.LAST_COMPATIBLE_COMPILER_REVISION) {\n    var runtimeVersions = _base.REVISION_CHANGES[currentRevision],\n        compilerVersions = _base.REVISION_CHANGES[compilerRevision];\n    throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n  } else {\n    // Use the embedded version info since the runtime doesn't know about this revision yet\n    throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n  }\n}\n\nfunction template(templateSpec, env) {\n  /* istanbul ignore next */\n  if (!env) {\n    throw new _exception2['default']('No environment passed to template');\n  }\n  if (!templateSpec || !templateSpec.main) {\n    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);\n  }\n\n  templateSpec.main.decorator = templateSpec.main_d;\n\n  // Note: Using env.VM references rather than local var references throughout this section to allow\n  // for external users to override these as pseudo-supported APIs.\n  env.VM.checkRevision(templateSpec.compiler);\n\n  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n  var templateWasPrecompiledWithCompilerV7 = templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n  function invokePartialWrapper(partial, context, options) {\n    if (options.hash) {\n      context = Utils.extend({}, context, options.hash);\n      if (options.ids) {\n        options.ids[0] = true;\n      }\n    }\n    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n    var extendedOptions = Utils.extend({}, options, {\n      hooks: this.hooks,\n      protoAccessControl: this.protoAccessControl\n    });\n\n    var result = env.VM.invokePartial.call(this, partial, context, extendedOptions);\n\n    if (result == null && env.compile) {\n      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n      result = options.partials[options.name](context, extendedOptions);\n    }\n    if (result != null) {\n      if (options.indent) {\n        var lines = result.split('\\n');\n        for (var i = 0, l = lines.length; i < l; i++) {\n          if (!lines[i] && i + 1 === l) {\n            break;\n          }\n\n          lines[i] = options.indent + lines[i];\n        }\n        result = lines.join('\\n');\n      }\n      return result;\n    } else {\n      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n    }\n  }\n\n  // Just add water\n  var container = {\n    strict: function strict(obj, name, loc) {\n      if (!obj || !(name in obj)) {\n        throw new _exception2['default']('\"' + name + '\" not defined in ' + obj, {\n          loc: loc\n        });\n      }\n      return obj[name];\n    },\n    lookupProperty: function lookupProperty(parent, propertyName) {\n      var result = parent[propertyName];\n      if (result == null) {\n        return result;\n      }\n      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n        return result;\n      }\n\n      if (_internalProtoAccess.resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n        return result;\n      }\n      return undefined;\n    },\n    lookup: function lookup(depths, name) {\n      var len = depths.length;\n      for (var i = 0; i < len; i++) {\n        var result = depths[i] && container.lookupProperty(depths[i], name);\n        if (result != null) {\n          return depths[i][name];\n        }\n      }\n    },\n    lambda: function lambda(current, context) {\n      return typeof current === 'function' ? current.call(context) : current;\n    },\n\n    escapeExpression: Utils.escapeExpression,\n    invokePartial: invokePartialWrapper,\n\n    fn: function fn(i) {\n      var ret = templateSpec[i];\n      ret.decorator = templateSpec[i + '_d'];\n      return ret;\n    },\n\n    programs: [],\n    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n      var programWrapper = this.programs[i],\n          fn = this.fn(i);\n      if (data || depths || blockParams || declaredBlockParams) {\n        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n      } else if (!programWrapper) {\n        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n      }\n      return programWrapper;\n    },\n\n    data: function data(value, depth) {\n      while (value && depth--) {\n        value = value._parent;\n      }\n      return value;\n    },\n    mergeIfNeeded: function mergeIfNeeded(param, common) {\n      var obj = param || common;\n\n      if (param && common && param !== common) {\n        obj = Utils.extend({}, common, param);\n      }\n\n      return obj;\n    },\n    // An empty object to use as replacement for null-contexts\n    nullContext: Object.seal({}),\n\n    noop: env.VM.noop,\n    compilerInfo: templateSpec.compiler\n  };\n\n  function ret(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var data = options.data;\n\n    ret._setup(options);\n    if (!options.partial && templateSpec.useData) {\n      data = initData(context, data);\n    }\n    var depths = undefined,\n        blockParams = templateSpec.useBlockParams ? [] : undefined;\n    if (templateSpec.useDepths) {\n      if (options.depths) {\n        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n      } else {\n        depths = [context];\n      }\n    }\n\n    function main(context /*, options*/) {\n      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n    }\n\n    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n    return main(context, options);\n  }\n\n  ret.isTop = true;\n\n  ret._setup = function (options) {\n    if (!options.partial) {\n      var mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n      container.helpers = mergedHelpers;\n\n      if (templateSpec.usePartial) {\n        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n        container.partials = container.mergeIfNeeded(options.partials, env.partials);\n      }\n      if (templateSpec.usePartial || templateSpec.useDecorators) {\n        container.decorators = Utils.extend({}, env.decorators, options.decorators);\n      }\n\n      container.hooks = {};\n      container.protoAccessControl = _internalProtoAccess.createProtoAccessControl(options);\n\n      var keepHelperInHelpers = options.allowCallsToHelperMissing || templateWasPrecompiledWithCompilerV7;\n      _helpers.moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n      _helpers.moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n    } else {\n      container.protoAccessControl = options.protoAccessControl; // internal option\n      container.helpers = options.helpers;\n      container.partials = options.partials;\n      container.decorators = options.decorators;\n      container.hooks = options.hooks;\n    }\n  };\n\n  ret._child = function (i, data, blockParams, depths) {\n    if (templateSpec.useBlockParams && !blockParams) {\n      throw new _exception2['default']('must pass block params');\n    }\n    if (templateSpec.useDepths && !depths) {\n      throw new _exception2['default']('must pass parent depths');\n    }\n\n    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n  };\n  return ret;\n}\n\nfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n  function prog(context) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    var currentDepths = depths;\n    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n      currentDepths = [context].concat(depths);\n    }\n\n    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);\n  }\n\n  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n  prog.program = i;\n  prog.depth = depths ? depths.length : 0;\n  prog.blockParams = declaredBlockParams || 0;\n  return prog;\n}\n\n/**\n * This is currently part of the official API, therefore implementation details should not be changed.\n */\n\nfunction resolvePartial(partial, context, options) {\n  if (!partial) {\n    if (options.name === '@partial-block') {\n      partial = options.data['partial-block'];\n    } else {\n      partial = options.partials[options.name];\n    }\n  } else if (!partial.call && !options.name) {\n    // This is a dynamic partial that returned a string\n    options.name = partial;\n    partial = options.partials[partial];\n  }\n  return partial;\n}\n\nfunction invokePartial(partial, context, options) {\n  // Use the current closure context to save the partial-block if this partial\n  var currentPartialBlock = options.data && options.data['partial-block'];\n  options.partial = true;\n  if (options.ids) {\n    options.data.contextPath = options.ids[0] || options.data.contextPath;\n  }\n\n  var partialBlock = undefined;\n  if (options.fn && options.fn !== noop) {\n    (function () {\n      options.data = _base.createFrame(options.data);\n      // Wrapper function to get access to currentPartialBlock from the closure\n      var fn = options.fn;\n      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {\n        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n        // Restore the partial-block from the closure for the execution of the block\n        // i.e. the part inside the block of the partial call.\n        options.data = _base.createFrame(options.data);\n        options.data['partial-block'] = currentPartialBlock;\n        return fn(context, options);\n      };\n      if (fn.partials) {\n        options.partials = Utils.extend({}, options.partials, fn.partials);\n      }\n    })();\n  }\n\n  if (partial === undefined && partialBlock) {\n    partial = partialBlock;\n  }\n\n  if (partial === undefined) {\n    throw new _exception2['default']('The partial ' + options.name + ' could not be found');\n  } else if (partial instanceof Function) {\n    return partial(context, options);\n  }\n}\n\nfunction noop() {\n  return '';\n}\n\nfunction initData(context, data) {\n  if (!data || !('root' in data)) {\n    data = data ? _base.createFrame(data) : {};\n    data.root = context;\n  }\n  return data;\n}\n\nfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n  if (fn.decorator) {\n    var props = {};\n    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n    Utils.extend(prog, props);\n  }\n  return prog;\n}\n\nfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n  Object.keys(mergedHelpers).forEach(function (helperName) {\n    var helper = mergedHelpers[helperName];\n    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n  });\n}\n\nfunction passLookupPropertyOption(helper, container) {\n  var lookupProperty = container.lookupProperty;\n  return _internalWrapHelper.wrapHelper(helper, function (options) {\n    return Utils.extend({ lookupProperty: lookupProperty }, options);\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/runtime.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/safe-string.js":
/*!********************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/safe-string.js ***!
  \********************************************************************/
/***/ ((module, exports) => {

"use strict";
eval("// Build out our basic SafeString type\n\n\nexports.__esModule = true;\nfunction SafeString(string) {\n  this.string = string;\n}\n\nSafeString.prototype.toString = SafeString.prototype.toHTML = function () {\n  return '' + this.string;\n};\n\nexports.default = SafeString;\nmodule.exports = exports['default'];\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3NhZmUtc3RyaW5nLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFDQSxTQUFTLFVBQVUsQ0FBQyxNQUFNLEVBQUU7QUFDMUIsTUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUM7Q0FDdEI7O0FBRUQsVUFBVSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEdBQUcsVUFBVSxDQUFDLFNBQVMsQ0FBQyxNQUFNLEdBQUcsWUFBVztBQUN2RSxTQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0NBQ3pCLENBQUM7O3FCQUVhLFVBQVUiLCJmaWxlIjoic2FmZS1zdHJpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBCdWlsZCBvdXQgb3VyIGJhc2ljIFNhZmVTdHJpbmcgdHlwZVxuZnVuY3Rpb24gU2FmZVN0cmluZyhzdHJpbmcpIHtcbiAgdGhpcy5zdHJpbmcgPSBzdHJpbmc7XG59XG5cblNhZmVTdHJpbmcucHJvdG90eXBlLnRvU3RyaW5nID0gU2FmZVN0cmluZy5wcm90b3R5cGUudG9IVE1MID0gZnVuY3Rpb24oKSB7XG4gIHJldHVybiAnJyArIHRoaXMuc3RyaW5nO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgU2FmZVN0cmluZztcbiJdfQ==\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/safe-string.js?");

/***/ }),

/***/ "./node_modules/handlebars/dist/cjs/handlebars/utils.js":
/*!**************************************************************!*\
  !*** ./node_modules/handlebars/dist/cjs/handlebars/utils.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n\nexports.__esModule = true;\nexports.extend = extend;\nexports.indexOf = indexOf;\nexports.escapeExpression = escapeExpression;\nexports.isEmpty = isEmpty;\nexports.createFrame = createFrame;\nexports.blockParams = blockParams;\nexports.appendContextPath = appendContextPath;\nvar escape = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#x27;',\n  '`': '&#x60;',\n  '=': '&#x3D;'\n};\n\nvar badChars = /[&<>\"'`=]/g,\n    possible = /[&<>\"'`=]/;\n\nfunction escapeChar(chr) {\n  return escape[chr];\n}\n\nfunction extend(obj /* , ...source */) {\n  for (var i = 1; i < arguments.length; i++) {\n    for (var key in arguments[i]) {\n      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nvar toString = Object.prototype.toString;\n\nexports.toString = toString;\n// Sourced from lodash\n// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n/* eslint-disable func-style */\nvar isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\n// fallback for older versions of Chrome and Safari\n/* istanbul ignore next */\nif (isFunction(/x/)) {\n  exports.isFunction = isFunction = function (value) {\n    return typeof value === 'function' && toString.call(value) === '[object Function]';\n  };\n}\nexports.isFunction = isFunction;\n\n/* eslint-enable func-style */\n\n/* istanbul ignore next */\nvar isArray = Array.isArray || function (value) {\n  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;\n};\n\nexports.isArray = isArray;\n// Older IE versions do not directly support indexOf so we must implement our own, sadly.\n\nfunction indexOf(array, value) {\n  for (var i = 0, len = array.length; i < len; i++) {\n    if (array[i] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction escapeExpression(string) {\n  if (typeof string !== 'string') {\n    // don't escape SafeStrings, since they're already safe\n    if (string && string.toHTML) {\n      return string.toHTML();\n    } else if (string == null) {\n      return '';\n    } else if (!string) {\n      return string + '';\n    }\n\n    // Force a string conversion as this will be done by the append regardless and\n    // the regex test will do this transparently behind the scenes, causing issues if\n    // an object's to string has escaped characters in it.\n    string = '' + string;\n  }\n\n  if (!possible.test(string)) {\n    return string;\n  }\n  return string.replace(badChars, escapeChar);\n}\n\nfunction isEmpty(value) {\n  if (!value && value !== 0) {\n    return true;\n  } else if (isArray(value) && value.length === 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction createFrame(object) {\n  var frame = extend({}, object);\n  frame._parent = object;\n  return frame;\n}\n\nfunction blockParams(params, ids) {\n  params.path = ids;\n  return params;\n}\n\nfunction appendContextPath(contextPath, id) {\n  return (contextPath ? contextPath + '.' : '') + id;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL2xpYi9oYW5kbGViYXJzL3V0aWxzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQSxJQUFNLE1BQU0sR0FBRztBQUNiLEtBQUcsRUFBRSxPQUFPO0FBQ1osS0FBRyxFQUFFLE1BQU07QUFDWCxLQUFHLEVBQUUsTUFBTTtBQUNYLEtBQUcsRUFBRSxRQUFRO0FBQ2IsS0FBRyxFQUFFLFFBQVE7QUFDYixLQUFHLEVBQUUsUUFBUTtBQUNiLEtBQUcsRUFBRSxRQUFRO0NBQ2QsQ0FBQzs7QUFFRixJQUFNLFFBQVEsR0FBRyxZQUFZO0lBQzNCLFFBQVEsR0FBRyxXQUFXLENBQUM7O0FBRXpCLFNBQVMsVUFBVSxDQUFDLEdBQUcsRUFBRTtBQUN2QixTQUFPLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQztDQUNwQjs7QUFFTSxTQUFTLE1BQU0sQ0FBQyxHQUFHLG9CQUFvQjtBQUM1QyxPQUFLLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsU0FBUyxDQUFDLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUN6QyxTQUFLLElBQUksR0FBRyxJQUFJLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtBQUM1QixVQUFJLE1BQU0sQ0FBQyxTQUFTLENBQUMsY0FBYyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRyxDQUFDLEVBQUU7QUFDM0QsV0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQztPQUM5QjtLQUNGO0dBQ0Y7O0FBRUQsU0FBTyxHQUFHLENBQUM7Q0FDWjs7QUFFTSxJQUFJLFFBQVEsR0FBRyxNQUFNLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQzs7Ozs7O0FBS2hELElBQUksVUFBVSxHQUFHLG9CQUFTLEtBQUssRUFBRTtBQUMvQixTQUFPLE9BQU8sS0FBSyxLQUFLLFVBQVUsQ0FBQztDQUNwQyxDQUFDOzs7QUFHRixJQUFJLFVBQVUsQ0FBQyxHQUFHLENBQUMsRUFBRTtBQUNuQixVQU9PLFVBQVUsR0FQakIsVUFBVSxHQUFHLFVBQVMsS0FBSyxFQUFFO0FBQzNCLFdBQ0UsT0FBTyxLQUFLLEtBQUssVUFBVSxJQUMzQixRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLG1CQUFtQixDQUM1QztHQUNILENBQUM7Q0FDSDtRQUNRLFVBQVUsR0FBVixVQUFVOzs7OztBQUlaLElBQU0sT0FBTyxHQUNsQixLQUFLLENBQUMsT0FBTyxJQUNiLFVBQVMsS0FBSyxFQUFFO0FBQ2QsU0FBTyxLQUFLLElBQUksT0FBTyxLQUFLLEtBQUssUUFBUSxHQUNyQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLGdCQUFnQixHQUN6QyxLQUFLLENBQUM7Q0FDWCxDQUFDOzs7OztBQUdHLFNBQVMsT0FBTyxDQUFDLEtBQUssRUFBRSxLQUFLLEVBQUU7QUFDcEMsT0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsR0FBRyxHQUFHLEtBQUssQ0FBQyxNQUFNLEVBQUUsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsRUFBRTtBQUNoRCxRQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxLQUFLLEVBQUU7QUFDdEIsYUFBTyxDQUFDLENBQUM7S0FDVjtHQUNGO0FBQ0QsU0FBTyxDQUFDLENBQUMsQ0FBQztDQUNYOztBQUVNLFNBQVMsZ0JBQWdCLENBQUMsTUFBTSxFQUFFO0FBQ3ZDLE1BQUksT0FBTyxNQUFNLEtBQUssUUFBUSxFQUFFOztBQUU5QixRQUFJLE1BQU0sSUFBSSxNQUFNLENBQUMsTUFBTSxFQUFFO0FBQzNCLGFBQU8sTUFBTSxDQUFDLE1BQU0sRUFBRSxDQUFDO0tBQ3hCLE1BQU0sSUFBSSxNQUFNLElBQUksSUFBSSxFQUFFO0FBQ3pCLGFBQU8sRUFBRSxDQUFDO0tBQ1gsTUFBTSxJQUFJLENBQUMsTUFBTSxFQUFFO0FBQ2xCLGFBQU8sTUFBTSxHQUFHLEVBQUUsQ0FBQztLQUNwQjs7Ozs7QUFLRCxVQUFNLEdBQUcsRUFBRSxHQUFHLE1BQU0sQ0FBQztHQUN0Qjs7QUFFRCxNQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRTtBQUMxQixXQUFPLE1BQU0sQ0FBQztHQUNmO0FBQ0QsU0FBTyxNQUFNLENBQUMsT0FBTyxDQUFDLFFBQVEsRUFBRSxVQUFVLENBQUMsQ0FBQztDQUM3Qzs7QUFFTSxTQUFTLE9BQU8sQ0FBQyxLQUFLLEVBQUU7QUFDN0IsTUFBSSxDQUFDLEtBQUssSUFBSSxLQUFLLEtBQUssQ0FBQyxFQUFFO0FBQ3pCLFdBQU8sSUFBSSxDQUFDO0dBQ2IsTUFBTSxJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsSUFBSSxLQUFLLENBQUMsTUFBTSxLQUFLLENBQUMsRUFBRTtBQUMvQyxXQUFPLElBQUksQ0FBQztHQUNiLE1BQU07QUFDTCxXQUFPLEtBQUssQ0FBQztHQUNkO0NBQ0Y7O0FBRU0sU0FBUyxXQUFXLENBQUMsTUFBTSxFQUFFO0FBQ2xDLE1BQUksS0FBSyxHQUFHLE1BQU0sQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDL0IsT0FBSyxDQUFDLE9BQU8sR0FBRyxNQUFNLENBQUM7QUFDdkIsU0FBTyxLQUFLLENBQUM7Q0FDZDs7QUFFTSxTQUFTLFdBQVcsQ0FBQyxNQUFNLEVBQUUsR0FBRyxFQUFFO0FBQ3ZDLFFBQU0sQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDO0FBQ2xCLFNBQU8sTUFBTSxDQUFDO0NBQ2Y7O0FBRU0sU0FBUyxpQkFBaUIsQ0FBQyxXQUFXLEVBQUUsRUFBRSxFQUFFO0FBQ2pELFNBQU8sQ0FBQyxXQUFXLEdBQUcsV0FBVyxHQUFHLEdBQUcsR0FBRyxFQUFFLENBQUEsR0FBSSxFQUFFLENBQUM7Q0FDcEQiLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBlc2NhcGUgPSB7XG4gICcmJzogJyZhbXA7JyxcbiAgJzwnOiAnJmx0OycsXG4gICc+JzogJyZndDsnLFxuICAnXCInOiAnJnF1b3Q7JyxcbiAgXCInXCI6ICcmI3gyNzsnLFxuICAnYCc6ICcmI3g2MDsnLFxuICAnPSc6ICcmI3gzRDsnXG59O1xuXG5jb25zdCBiYWRDaGFycyA9IC9bJjw+XCInYD1dL2csXG4gIHBvc3NpYmxlID0gL1smPD5cIidgPV0vO1xuXG5mdW5jdGlvbiBlc2NhcGVDaGFyKGNocikge1xuICByZXR1cm4gZXNjYXBlW2Nocl07XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBleHRlbmQob2JqIC8qICwgLi4uc291cmNlICovKSB7XG4gIGZvciAobGV0IGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7XG4gICAgZm9yIChsZXQga2V5IGluIGFyZ3VtZW50c1tpXSkge1xuICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChhcmd1bWVudHNbaV0sIGtleSkpIHtcbiAgICAgICAgb2JqW2tleV0gPSBhcmd1bWVudHNbaV1ba2V5XTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gb2JqO1xufVxuXG5leHBvcnQgbGV0IHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcblxuLy8gU291cmNlZCBmcm9tIGxvZGFzaFxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2Jlc3RpZWpzL2xvZGFzaC9ibG9iL21hc3Rlci9MSUNFTlNFLnR4dFxuLyogZXNsaW50LWRpc2FibGUgZnVuYy1zdHlsZSAqL1xubGV0IGlzRnVuY3Rpb24gPSBmdW5jdGlvbih2YWx1ZSkge1xuICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSAnZnVuY3Rpb24nO1xufTtcbi8vIGZhbGxiYWNrIGZvciBvbGRlciB2ZXJzaW9ucyBvZiBDaHJvbWUgYW5kIFNhZmFyaVxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgKi9cbmlmIChpc0Z1bmN0aW9uKC94LykpIHtcbiAgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uKHZhbHVlKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIHR5cGVvZiB2YWx1ZSA9PT0gJ2Z1bmN0aW9uJyAmJlxuICAgICAgdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IEZ1bmN0aW9uXSdcbiAgICApO1xuICB9O1xufVxuZXhwb3J0IHsgaXNGdW5jdGlvbiB9O1xuLyogZXNsaW50LWVuYWJsZSBmdW5jLXN0eWxlICovXG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICovXG5leHBvcnQgY29uc3QgaXNBcnJheSA9XG4gIEFycmF5LmlzQXJyYXkgfHxcbiAgZnVuY3Rpb24odmFsdWUpIHtcbiAgICByZXR1cm4gdmFsdWUgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0J1xuICAgICAgPyB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gJ1tvYmplY3QgQXJyYXldJ1xuICAgICAgOiBmYWxzZTtcbiAgfTtcblxuLy8gT2xkZXIgSUUgdmVyc2lvbnMgZG8gbm90IGRpcmVjdGx5IHN1cHBvcnQgaW5kZXhPZiBzbyB3ZSBtdXN0IGltcGxlbWVudCBvdXIgb3duLCBzYWRseS5cbmV4cG9ydCBmdW5jdGlvbiBpbmRleE9mKGFycmF5LCB2YWx1ZSkge1xuICBmb3IgKGxldCBpID0gMCwgbGVuID0gYXJyYXkubGVuZ3RoOyBpIDwgbGVuOyBpKyspIHtcbiAgICBpZiAoYXJyYXlbaV0gPT09IHZhbHVlKSB7XG4gICAgICByZXR1cm4gaTtcbiAgICB9XG4gIH1cbiAgcmV0dXJuIC0xO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZXNjYXBlRXhwcmVzc2lvbihzdHJpbmcpIHtcbiAgaWYgKHR5cGVvZiBzdHJpbmcgIT09ICdzdHJpbmcnKSB7XG4gICAgLy8gZG9uJ3QgZXNjYXBlIFNhZmVTdHJpbmdzLCBzaW5jZSB0aGV5J3JlIGFscmVhZHkgc2FmZVxuICAgIGlmIChzdHJpbmcgJiYgc3RyaW5nLnRvSFRNTCkge1xuICAgICAgcmV0dXJuIHN0cmluZy50b0hUTUwoKTtcbiAgICB9IGVsc2UgaWYgKHN0cmluZyA9PSBudWxsKSB7XG4gICAgICByZXR1cm4gJyc7XG4gICAgfSBlbHNlIGlmICghc3RyaW5nKSB7XG4gICAgICByZXR1cm4gc3RyaW5nICsgJyc7XG4gICAgfVxuXG4gICAgLy8gRm9yY2UgYSBzdHJpbmcgY29udmVyc2lvbiBhcyB0aGlzIHdpbGwgYmUgZG9uZSBieSB0aGUgYXBwZW5kIHJlZ2FyZGxlc3MgYW5kXG4gICAgLy8gdGhlIHJlZ2V4IHRlc3Qgd2lsbCBkbyB0aGlzIHRyYW5zcGFyZW50bHkgYmVoaW5kIHRoZSBzY2VuZXMsIGNhdXNpbmcgaXNzdWVzIGlmXG4gICAgLy8gYW4gb2JqZWN0J3MgdG8gc3RyaW5nIGhhcyBlc2NhcGVkIGNoYXJhY3RlcnMgaW4gaXQuXG4gICAgc3RyaW5nID0gJycgKyBzdHJpbmc7XG4gIH1cblxuICBpZiAoIXBvc3NpYmxlLnRlc3Qoc3RyaW5nKSkge1xuICAgIHJldHVybiBzdHJpbmc7XG4gIH1cbiAgcmV0dXJuIHN0cmluZy5yZXBsYWNlKGJhZENoYXJzLCBlc2NhcGVDaGFyKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRW1wdHkodmFsdWUpIHtcbiAgaWYgKCF2YWx1ZSAmJiB2YWx1ZSAhPT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2UgaWYgKGlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgIHJldHVybiB0cnVlO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlRnJhbWUob2JqZWN0KSB7XG4gIGxldCBmcmFtZSA9IGV4dGVuZCh7fSwgb2JqZWN0KTtcbiAgZnJhbWUuX3BhcmVudCA9IG9iamVjdDtcbiAgcmV0dXJuIGZyYW1lO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYmxvY2tQYXJhbXMocGFyYW1zLCBpZHMpIHtcbiAgcGFyYW1zLnBhdGggPSBpZHM7XG4gIHJldHVybiBwYXJhbXM7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBhcHBlbmRDb250ZXh0UGF0aChjb250ZXh0UGF0aCwgaWQpIHtcbiAgcmV0dXJuIChjb250ZXh0UGF0aCA/IGNvbnRleHRQYXRoICsgJy4nIDogJycpICsgaWQ7XG59XG4iXX0=\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/handlebars/dist/cjs/handlebars/utils.js?");

/***/ }),

/***/ "./node_modules/has-symbols/index.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/index.js ***!
  \*******************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar origSymbol = __webpack_require__.g.Symbol;\nvar hasSymbolSham = __webpack_require__(/*! ./shams */ \"./node_modules/has-symbols/shams.js\");\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/has-symbols/index.js?");

/***/ }),

/***/ "./node_modules/has-symbols/shams.js":
/*!*******************************************!*\
  !*** ./node_modules/has-symbols/shams.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/has-symbols/shams.js?");

/***/ }),

/***/ "./node_modules/has-tostringtag/node_modules/has-symbols/shams.js":
/*!************************************************************************!*\
  !*** ./node_modules/has-tostringtag/node_modules/has-symbols/shams.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/has-tostringtag/node_modules/has-symbols/shams.js?");

/***/ }),

/***/ "./node_modules/has-tostringtag/shams.js":
/*!***********************************************!*\
  !*** ./node_modules/has-tostringtag/shams.js ***!
  \***********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hasSymbols = __webpack_require__(/*! has-symbols/shams */ \"./node_modules/has-tostringtag/node_modules/has-symbols/shams.js\");\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/has-tostringtag/shams.js?");

/***/ }),

/***/ "./node_modules/has/src/index.js":
/*!***************************************!*\
  !*** ./node_modules/has/src/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar bind = __webpack_require__(/*! function-bind */ \"./node_modules/function-bind/index.js\");\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/has/src/index.js?");

/***/ }),

/***/ "./src/html/filepicker/child-data.html":
/*!*********************************************!*\
  !*** ./src/html/filepicker/child-data.html ***!
  \*********************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div>\\n  {{#each data.response}}\\n  <div class=\\\"mt2 pb2 padding-bottom-10\\\">\\n    <div class=\\\"col12 filesData\\\">\\n      {{#if this.file_type}}\\n      <img width=\\\"15\\\" class=\\\"mr-small\\\" src=\\\"/img/folder.svg\\\" />\\n      {{else}}\\n      <img width=\\\"15\\\" class=\\\"mr-small\\\" src=\\\"/img/document.svg\\\" />\\n      {{/if}}\\n      <span  class=\\\"font-size-base\\\" id=\\\"{{this.id}}\\\" onclick=\\\"window._AppletIO.getFilePicker().getFileId('{{this.id}}','{{this.name}}','{{this.type}}')\\\"\\n        >{{this.name}}</span>\\n        <div id=\\\"selected_folder_{{this.id}}\\\" style=\\\"margin-left:3px;display: none;\\\" class=\\\"spinner-border width-height-15\\\"></div>\\n    </div>\\n    <div class=\\\"col4 text-muted\\\">{{this.updated_date}}</div>\\n  </div>\\n      \\n  {{else}}\\n  <span class=\\\"text-muted\\\">No files Found</span>\\n  {{/each}}\\n</div>\\n\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/filepicker/child-data.html?");

/***/ }),

/***/ "./src/html/filepicker/connected-apps.html":
/*!*************************************************!*\
  !*** ./src/html/filepicker/connected-apps.html ***!
  \*************************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div class=\\\"file-picker\\\">\\n  <h3 class=\\\"border-bottom padding-bottom-10 head-font\\\">Connected Accounts</h3>\\n  <div class=\\\"d-flex mt3\\\">\\n    {{#each data}}\\n\\n    <div class=\\\"card card-stayle w-30 p-1\\\" onclick=\\\"window._AppletIO.getFilePicker().showFiles('{{this.id}}','{{this.app_name}}')\\\">\\n      <img src=\\\"https://infinity.500apps.com/img/flow/{{this.logo}}.svg\\\" height=\\\"40\\\" class=\\\"margin-bottom-10\\\" />\\n      <p class=\\\"small\\\">{{this.app_name}}</p>\\n      <div class=\\\"d-flex margin-auto-nowrap align-items-center\\\">\\n        <p class=\\\"profile-name\\\" v-b-tooltip.hover title=\\\"{{this.profile_name}}\\\">{{this.profile_name}}</p>\\n        <div class=\\\"spinner-border width-height-12\\\" style=\\\"display: none\\\" id=\\\"connected_account_data{{this.id}}\\\"></div>\\n      </div>\\n\\n      <!-- style=\\\"display:none;\\\" id=\\\"connected_account_data{{this.id}}\\\" -->\\n      <!-- <div class=\\\"mt4 mb3\\\" style=\\\"text-align: center; display: none\\\">\\n      <img src=\\\"/img/loader.gif\\\" style=\\\"width: 50px\\\" />\\n    </div> -->\\n    </div>\\n    {{#if this.error}}\\n    <div class=\\\"error d-flex align-items-center\\\" onclick=\\\"window._AppletIO.getFilePicker().authenticate('{{this.app_name}}')\\\">\\n      <div class=\\\"spinner-border width-height-15\\\"></div>\\n      <p class=\\\"error-text\\\">please re-authenticate {{this.app_name}}</p>\\n    </div>\\n    {{/if}} {{else}}\\n    <div>\\n      <span class=\\\"text-muted center\\\" style=\\\"margin-top: 10px\\\">No Accounts Found</span>\\n    </div>\\n    {{/each}}\\n  </div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/filepicker/connected-apps.html?");

/***/ }),

/***/ "./src/html/filepicker/file-path.html":
/*!********************************************!*\
  !*** ./src/html/filepicker/file-path.html ***!
  \********************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"\\n<span class=\\\"file align-items-center d-flex\\\" id=\\\"_500apps_file_picker_{{data.id}}\\\">\\n    {{#if data.flag}}\\n    <img height=\\\"16\\\" class=\\\"mr2\\\" src=\\\"/img/folder.svg\\\"/>\\n    {{else}}\\n    /\\n    {{/if}}\\n   {{data.file_name}}</span>\\n\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/filepicker/file-path.html?");

/***/ }),

/***/ "./src/html/filepicker/files.html":
/*!****************************************!*\
  !*** ./src/html/filepicker/files.html ***!
  \****************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div class=\\\"file_picker file-picker\\\">\\n  {{#if data.sub_type}}\\n  <div class=\\\"row user-select\\\">\\n    <select id=\\\"accounts_dropdown\\\" style=\\\"width: 80%; height: 35px; margin: 10px\\\" onclick=\\\"window._AppletIO.getFilePicker().dropdownData()\\\">\\n      {{#each data.profile}}\\n      <option value=\\\"{{this.id}}\\\"><img style=\\\"width: 15px\\\" src=\\\"https://appletio-js.500apps.com/img/{{this.logo}}.png\\\" />{{this.email}}</option>\\n      {{/each}}\\n      <option value=\\\"Manage Accounts\\\">Manage Accounts</option>\\n    </select>\\n  </div>\\n  <div class=\\\"d-flex align-items-center margin-top-bottom-10\\\">\\n    <span id=\\\"show_folder_name\\\" class=\\\"d-flex\\\"></span>\\n  </div>\\n  <div class=\\\"bordered-box\\\">\\n    <div class=\\\"border-bottom padding-bottom-10\\\">\\n      <div class=\\\"col12\\\">Name</div>\\n      <!-- <div class=\\\"col4\\\">Updated</div> -->\\n    </div>\\n    {{/if}}\\n    <div id=\\\"show_files_data\\\"></div>\\n    <div id=\\\"show_loader\\\" class=\\\"mt4 mb3\\\" style=\\\"text-align: center; display: none\\\">\\n      <img src=\\\"https://appletio-js.500apps.com/img/loader.png\\\" style=\\\"width: 50px\\\" />\\n    </div>\\n  </div>\\n  <div class=\\\"\\\" id=\\\"modalFields\\\" style=\\\"display:none;text-align: right;\\\">\\n    <button class=\\\"btn addbtn\\\" id=\\\"showButton\\\" onclick=\\\"(()=>{window._AppletIO.getFilePicker().sendFileData();this.onclick=null;})()\\\">Select</button>\\n  </div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/filepicker/files.html?");

/***/ }),

/***/ "./src/html/filepicker/home.html":
/*!***************************************!*\
  !*** ./src/html/filepicker/home.html ***!
  \***************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div class=\\\"_500plugins_widget file-picker\\\">\\n  <div class=\\\"modal\\\" id=\\\"appsModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"appsModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content p-4\\\">\\n        <button type=\\\"button\\\" class=\\\"close mlauto\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" onclick=\\\"window._AppletIO.getModal().close('appsModal');document.getElementById('_500apps_file_picker').remove()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n        <div id=\\\"connected-apps\\\"></div>\\n        <div id=\\\"connected_accounts_loader\\\" class=\\\"mt4 mb3\\\" style=\\\"text-align: center; display: none\\\">\\n          <img src=\\\"https://appletio-js.500apps.com/img/loader.png\\\" style=\\\"width: 50px\\\" />\\n        </div>\\n        <div class=\\\"login-apps margin-top-10\\\">\\n          <h3 class=\\\"border-bottom padding-bottom-10 head-font\\\">Please choose a service to connect</h3>\\n          <div class=\\\"row plr-05 mt3\\\">\\n            {{#each data}}\\n            <div class=\\\"col4\\\">\\n              <div class=\\\"card card-stayle p3\\\" onclick=\\\"window._AppletIO.getFilePicker().authenticate('{{this.app}}')\\\">\\n                  <img class=\\\"margin-bottom-10\\\"  height=\\\"40\\\" class=\\\"\\\"src=\\\"https://infinity.500apps.com/img/flow/{{this.logo}}.svg\\\" />\\n                  <p class=\\\"small\\\">{{this.app}}</p>\\n              </div>\\n            </div>\\n            {{/each}}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"modal\\\" id=\\\"filesModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"appsModalLabel\\\" aria-hidden=\\\"true\\\">\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <button type=\\\"button\\\" class=\\\"close mlauto\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" onclick=\\\"window._AppletIO.getModal().close('filesModal');document.getElementById('_500apps_file_picker').remove()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n        <div id=\\\"files\\\"></div>\\n      </div>\\n    </div>\\n  </div>\\n  <div id=\\\"backdrop\\\" style=\\\"display: none\\\">\\n    <div class=\\\"modal-backdrop show\\\"></div>\\n  </div>\\n</div>\\n\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/filepicker/home.html?");

/***/ }),

/***/ "./src/html/sso/sso.html":
/*!*******************************!*\
  !*** ./src/html/sso/sso.html ***!
  \*******************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div class=\\\"_500apps_plugin_login_apps\\\">\\n  {{#each data}} {{#if this.is_google}}\\n  <div onclick=\\\"window._AppletIO.getSSO().authenticate('{{this.app}}-sso')\\\" id=\\\"500apps_plugin_applet_integrations\\\" class=\\\"hover google-sso\\\">\\n    <img data-name=\\\"{{this.app}}\\\" src=\\\"https://appletio-js.500apps.com/img/SSO/google-icon.png\\\" class=\\\"img hover-logo\\\" />\\n    <img data-name=\\\"{{this.app}}\\\" src=\\\"https://appletio-js.500apps.com/img/SSO/google-icon-hover.png\\\" class=\\\"img normal-logo\\\" />\\n  </div>\\n  {{else}}\\n  <span class=\\\"m cursor-pointer sso-app\\\"\\n    ><img\\n      data-name=\\\"{{this.app}}\\\"\\n      id=\\\"500apps_plugin_applet_integrations\\\"\\n      src=\\\"https://appletio-js.500apps.com/img/SSO/{{this.logo}}.svg\\\"\\n      onclick=\\\"window._AppletIO.getSSO().authenticate('{{this.app}}-sso')\\\"\\n      class=\\\"img\\\"\\n  /></span>\\n  {{/if}} {{/each}}\\n</div>\\n\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/sso/sso.html?");

/***/ }),

/***/ "./src/html/widget/apps.html":
/*!***********************************!*\
  !*** ./src/html/widget/apps.html ***!
  \***********************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div class=\\\"mt-10p\\\">\\n  <div class=\\\"pl3 heading-name\\\">\\n    <span id=\\\"name\\\">{{data.name}}</span>\\n  </div>\\n</div>\\n<div class=\\\"appdata\\\" id=\\\"app-data\\\">\\n  {{#if data.exists}}\\n  <nav>\\n    <div class=\\\"nav nav-tabs tgltabs\\\" id=\\\"nav-tab\\\" role=\\\"tablist\\\">\\n      {{#each data.apps}}\\n      <a class=\\\"nav-item nav-link text-capitalize\\\" id=\\\"nav-{{@key}}-tab\\\" data-toggle=\\\"tab\\\" onclick=\\\"window._App.changeTab('nav-{{@key}}')\\\" role=\\\"tab\\\" aria-controls=\\\"nav-{{@key}}\\\" aria-selected=\\\"true\\\"\\n        >{{@key}}</a\\n      >\\n      {{/each}}\\n    </div>\\n  </nav>\\n  <div class=\\\"tab-content custom-modal-tab\\\" id=\\\"nav-tabContent\\\">\\n    {{#each data.apps}}\\n    <div class=\\\"tab-pane fade remtab show\\\" id=\\\"nav-{{@key}}\\\" role=\\\"tabpanel\\\" aria-labelledby=\\\"nav-{{@key}}-tab\\\">\\n      <div class=\\\"row cardrow modalcards plr-05\\\">\\n        {{#each this}}\\n        <div class=\\\"mt4 col4\\\">\\n          <div class=\\\"card p0\\\">\\n            <div class=\\\"cardheader\\\">\\n              {{#if this.custom}}\\n              <img src=\\\"https://infinity.500apps.com/img/flow/custom.png\\\" width=\\\"40px\\\" height=\\\"40px\\\" />\\n              {{else}}\\n              <img src=\\\"https://infinity.500apps.com/img/flow/{{this.id}}.svg\\\" width=\\\"40px\\\" height=\\\"40px\\\" />\\n              {{/if}}\\n            </div>\\n            <div class=\\\"cardbody\\\">\\n              <h5 class=\\\"mb2 text-capitalize texttruncate\\\">{{this.name}}</h5>\\n              <p class=\\\"elipses\\\">{{this.description}}</p>\\n            </div>\\n            <div class=\\\"cardfooter textcenter\\\">\\n              {{#if ../../data.plugins}}\\n              <button class=\\\"btn border-right plugin-btn plugin-btn-delete\\\" onclick=\\\"window._AppConfig.deletePlugin('{{this.id}}','{{this.plugin_id}}','{{this.custom}}')\\\">Delete</button>\\n              <button class=\\\"btn text-primary plugin-btn\\\" onclick=\\\"window._App.configurePlugin('{{this.id}}','{{this.name}}', '{{this.plugin_id}}','{{this.custom}}')\\\">Settings</button>\\n              {{else}}\\n              <button class=\\\"btn text-primary installbtn\\\" onclick=\\\"window._App.configurePlugin('{{this.id}}', '{{this.name}}', '','{{this.custom}}')\\\">Install</button>\\n              {{/if}}\\n            </div>\\n          </div>\\n        </div>\\n        {{/each}}\\n      </div>\\n    </div>\\n    {{/each}}\\n  </div>\\n  {{else}}\\n  <div class=\\\"mlauto mrauto\\\">\\n    <div class=\\\"empty-stats nodata\\\">\\n      <img src=\\\"https://appletio-js.500apps.com/img/empty-state.svg\\\" width=\\\"200px\\\" class=\\\"imgfluid mxauto pt3\\\" />\\n      <p class=\\\"pt3\\\">No {{data.name}} authenticated apps are available</p>\\n    </div>\\n  </div>\\n  {{/if}}\\n</div>\\n\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/apps.html?");

/***/ }),

/***/ "./src/html/widget/custom-card.html":
/*!******************************************!*\
  !*** ./src/html/widget/custom-card.html ***!
  \******************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div id=\\\"accordion_{{data.id}}\\\" class=\\\"checkWidgetData\\\">\\n    <div class=\\\"card content-card\\\">\\n      <div class=\\\"cardheader collapseheader cardlink\\\" data-toggle=\\\"collapse\\\"\\n        onclick=\\\"window._Widget.appWidgets('appcollapse_{{data.id}}')\\\">\\n        <img src=\\\"{{data.logo_url}}\\\"\\n          style=\\\"width: 30px; height: 30px; margin-right: 10px;vertical-align: middle;\\\" />\\n        <span class=\\\"user-appname\\\">{{data.name}}</span>\\n        <span class=\\\"accordian-icon rotate-icon\\\">\\n          <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"20\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\">\\n            <path d=\\\"M18 15L12 9L6 15\\\" stroke=\\\"#25282B\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" />\\n          </svg>\\n        </span>\\n      </div>\\n      <div id=\\\"appcollapse_{{data.id}}\\\" class=\\\"collapse\\\" data-parent=\\\"#accordion_{{data.id}}\\\">\\n        <div class=\\\"cardbody\\\">\\n          <div class=\\\"tab-content px-3 px-sm-0 widbody sidecontent-height\\\" id=\\\"nav-tabContent_{{data.id}}\\\">\\n            <iframe srcdoc=\\\"{{data.widget_content}}\\\" frameBorder=\\\"0\\\" width=\\\"80%\\\" height=\\\"230px\\\"></iframe>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/custom-card.html?");

/***/ }),

/***/ "./src/html/widget/custom.html":
/*!*************************************!*\
  !*** ./src/html/widget/custom.html ***!
  \*************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<!-- To show form for customWidgets-->\\n<div id=\\\"_500plugins_modalid\\\" class=\\\"_500plugins_modal mb2\\\">\\n    <div class=\\\"_500plugins_modal-content\\\">\\n      <div>\\n        <div class=\\\"row form-style-2 textleft formsec\\\">\\n          <form action=\\\"\\\" id=\\\"widgetApp\\\">\\n            <p id=\\\"error_message\\\" class=\\\"error-message\\\"></p>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"text-capitalize\\\">Name</label>\\n                <input type=\\\"text\\\" id=\\\"widget_name\\\" name=\\\"name\\\" value=\\\"{{data.fields.name}}\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Widget Name (Max length 14)\\\" maxlength=\\\"14\\\"><br>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"text-capitalize\\\">Description</label>\\n                <input type=\\\"text\\\" id=\\\"description\\\" name=\\\"description\\\" value=\\\"{{data.fields.description}}\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Description (Max length 110)\\\" maxlength=\\\"110\\\"><br>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"text-capitalize\\\">Entity</label>\\n                <select name=\\\"entity\\\" id=\\\"entity\\\" class=\\\"form-control\\\" value=\\\"{{data.fields.entity}}\\\">\\n                    <option value=\\\"Contact\\\">Contact</option>\\n                    <option value=\\\"Company\\\">Company</option>\\n                </select><br>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"text-capitalize\\\">Type</label>\\n                <select name=\\\"widget_type\\\" id=\\\"widget_type\\\" class=\\\"form-control\\\" onchange=\\\"window._AppConfig.customWidgetType(this,'{{data.fields.id}}')\\\" value=\\\"{{data.fields.widget_type}}\\\">\\n                    <option value=\\\"HTML\\\">HTML</option>\\n                    <option value=\\\"URL\\\">URL</option>\\n                </select><br>\\n            </div>\\n            <div class=\\\"form-group\\\" id=\\\"applet_widget_type\\\">\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"text-capitalize\\\">Logo URL</label>\\n                <input type=\\\"text\\\" id=\\\"logo_url\\\" placeholder=\\\"Enter Logo URL\\\" name=\\\"logo_url\\\" value=\\\"{{data.fields.logo_url}}\\\" class=\\\"form-control\\\"><br>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n                <label class=\\\"text-capitalize\\\">Min Logo</label>\\n                <input type=\\\"text\\\" id=\\\"mini_logo_url\\\" placeholder=\\\"Enter Mini logo URL\\\" name=\\\"mini_logo_url\\\" value=\\\"{{data.fields.mini_logo_url}}\\\" class=\\\"form-control\\\"><br>\\n            </div>\\n            <div class=\\\"instll-btn-sec\\\">\\n                <button type=\\\"button\\\" class=\\\"btn cancelbtn\\\" onclick=\\\"window._AppletIO.getModal().close('formModal')\\\">\\n                  Cancel\\n                </button>\\n                <button class=\\\"btn addbtn spinner-button position-relative\\\" id=\\\"basic-plugin-button\\\"\\n                  onclick=\\\"window._AppConfig.customPlugin('{{data.id}}', '{{data.plugin_id}}', '{{data.button}}')\\\" type=\\\"button\\\">\\n                  {{data.button}}\\n                </button>\\n              </div>\\n          </form> \\n        </div>\\n      </div>\\n    </div>\\n  </div>\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/custom.html?");

/***/ }),

/***/ "./src/html/widget/customInput.html":
/*!******************************************!*\
  !*** ./src/html/widget/customInput.html ***!
  \******************************************/
/***/ ((module) => {

eval("// Module\nvar code = \" <!-- Load textarea or input field as dynamically in CustomWidget form -->\\n<label class=\\\"text-capitalize\\\">{{data.label}}</label>\\n{{#if data.HTML}}\\n<textarea class=\\\"form-control\\\" id=\\\"widget_content\\\" name=\\\"widget_content\\\" aria-describedby=\\\"widgetContent\\\"\\n    rows=\\\"3\\\"\\n    placeholder=\\\"Paste your HTML source of widget. It may contain embedded script that make use of Agile widgets API\\\">{{data.widget_content}}</textarea>\\n{{else}}\\n<input type=\\\"text\\\" id=\\\"webhook_url\\\" placeholder=\\\"Enter Webhook URL\\\" name=\\\"widget_content\\\"\\n    value=\\\"{{data.widget_content}}\\\" class=\\\"form-control\\\"><br>\\n{{/if}}\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/customInput.html?");

/***/ }),

/***/ "./src/html/widget/facebook.html":
/*!***************************************!*\
  !*** ./src/html/widget/facebook.html ***!
  \***************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"{{#each data}}\\n<div style=\\\"display: flex;border: 1px solid #0000000d !important;border-radius: 4px !important;\\\" class=\\\"mt2 mb2 pt2 pb2 pr2 pl2\\\">\\n    <img src=\\\"{{this.Image}}\\\">\\n    <div>\\n      <a class=\\\"ml4\\\" href=\\\"{{this.Profile_Link}}\\\" target=\\\"_blank\\\">{{this.Name}}</a>\\n      <p class=\\\"ml4\\\">{{this.description1}}</p>\\n      <p class=\\\"ml4\\\">{{this.description2}}</p>\\n    </div>\\n    </div>\\n{{/each}}\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/facebook.html?");

/***/ }),

/***/ "./src/html/widget/form.html":
/*!***********************************!*\
  !*** ./src/html/widget/form.html ***!
  \***********************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<!-- To show form for basic authentication -->\\n{{#if data.exists}}\\n<div id=\\\"_500plugins_modalid\\\" class=\\\"_500plugins_modal mb2\\\">\\n  <div class=\\\"_500plugins_modal-content\\\">\\n    <div>\\n      <div class=\\\"text-center\\\">\\n        <span class=\\\"widget-app-text\\\"><img src=\\\"https://infinity.500apps.com/img/flow/{{data.id}}.svg\\\" class=\\\"widget-app-logo\\\" />{{data.name}}</span>\\n        <span class=\\\"text-muted widget-shield\\\"> <i class=\\\"fa-shield-check fas\\\"></i></span>\\n      </div>\\n      {{#if data.token}}\\n      <div class=\\\"tooltip\\\" style=\\\"text-align: right; display: block\\\" onclick=\\\"window._AppConfig.getAPI('{{data.token}}')\\\">\\n        <a href=\\\"javascript:void(0)\\\">+ Get Api key</a>\\n        <h6 class=\\\"tooltiptext\\\">Click here to fill the workspace API key in the below field automatically</h6>\\n      </div>\\n      {{/if}}\\n      <div class=\\\"row form-style-2 textleft formsec\\\">\\n        <form action=\\\"\\\" id=\\\"widgetApp\\\">\\n          <p id=\\\"errMsg\\\" class=\\\"error-message\\\"></p>\\n          {{#each data.fields}}\\n          <div class=\\\"form-group\\\">\\n            <label class=\\\"text-capitalize\\\">{{this.label}}</label>\\n            {{#if this.textArea}}\\n            <textarea class=\\\"form-control\\\" id=\\\"input_{{name}}\\\" name=\\\"{{name}}\\\" value=\\\"{{value}}\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter {{this.label}}\\\" rows=\\\"3\\\"></textarea>\\n            {{else}}\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"input_{{name}}\\\" name=\\\"{{name}}\\\" value=\\\"{{value}}\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Enter {{this.label}}\\\" />\\n            {{/if}}\\n          </div>\\n          {{/each}}\\n          <div class=\\\"instll-btn-sec\\\">\\n            <button type=\\\"button\\\" class=\\\"btn cancelbtn\\\" onclick=\\\"window._AppletIO.getModal().close('formModal')\\\">Cancel</button>\\n            <button\\n              class=\\\"btn addbtn spinner-button position-relative\\\"\\n              id=\\\"basic-plugin-button\\\"\\n              onclick=\\\"window._AppConfig.basicPlugin('{{data.id}}', '{{data.name}}', '{{data.button}}')\\\"\\n              type=\\\"button\\\"\\n            >\\n              {{data.button}}\\n            </button>\\n          </div>\\n        </form>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n{{else}}\\n<p>No form available</p>\\n{{/if}}\\n\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/form.html?");

/***/ }),

/***/ "./src/html/widget/gmail.html":
/*!************************************!*\
  !*** ./src/html/widget/gmail.html ***!
  \************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div class=\\\"gmail\\\">\\n    {{#each data}}\\n    <div class=\\\"card mx\\\">\\n        <div class=\\\"mx4 my4 mb2\\\">\\n            <p class=\\\"gmail-date\\\">{{date}}</p>\\n            <p class=\\\"texttruncate mt-5p gmail-subject\\\">{{subject}}</p>\\n            <p onclick=\\\"window._AppletIO.getWidget().showGmailModal('{{id}}','{{app_name}}')\\\" class=\\\"mt-5p\\\"  style=\\\"float: right; color: dodgerblue !important;cursor: pointer;font-size: 13px;\\\">Read More</p>\\n        </div>\\n    </div>\\n    {{/each}}\\n</div>\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/gmail.html?");

/***/ }),

/***/ "./src/html/widget/linkedin.html":
/*!***************************************!*\
  !*** ./src/html/widget/linkedin.html ***!
  \***************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"{{#each data}}\\n<div style=\\\"display: flex;border: 1px solid #0000000d !important;border-radius: 4px !important;\\\" class=\\\"mt2 mb2 pt2 pb2 pr2 pl2\\\">\\n    <img src=\\\"{{this.Image}}\\\">\\n    <div>\\n      <a class=\\\"ml4\\\" href=\\\"{{this.Profile_Link}}\\\" target=\\\"_blank\\\">{{this.Name}}</a>\\n      <p class=\\\"ml4\\\">{{this.Designation}}</p>\\n      <p class=\\\"ml4\\\">{{this.Location}}</p>\\n    </div>\\n    </div>\\n{{/each}}\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/linkedin.html?");

/***/ }),

/***/ "./src/html/widget/twilio/call.html":
/*!******************************************!*\
  !*** ./src/html/widget/twilio/call.html ***!
  \******************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div class=\\\"row ml1 mr2 pr2\\\" style=\\\"background: powderblue;\\\">\\n    <div class=\\\"mt4 mlauto\\\">\\n        <p>On call {{data.number}}</p>\\n    </div>\\n    <img class=\\\"mt2 mb2\\\" onclick=\\\"window._AppletIO.getTwilio().disconnectCall()\\\"\\n        src=\\\"https://appletio-js.500apps.com\\\\img\\\\hangup.png\\\" style=\\\"width: 50px;margin-left: auto;\\\" />\\n</div>\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/twilio/call.html?");

/***/ }),

/***/ "./src/html/widget/twilio/index.html":
/*!*******************************************!*\
  !*** ./src/html/widget/twilio/index.html ***!
  \*******************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div class=\\\"ml2 mr2 mt3\\\">\\n    <div class=\\\"form-group col12 ml2 mr2\\\" id=\\\"twilio_from_number\\\">\\n        <label class=\\\"text-capitalize\\\">Outbound Number</label>\\n    </div>\\n    <div class=\\\"row ml2 mt4\\\">\\n        <label class=\\\"text-capitalize\\\">Contact Number</label>\\n        <div class=\\\"form-group col12 input-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control form-input-append col8 mt-10p\\\" id=\\\"to_number\\\" value=\\\"{{data.to_number}}\\\"  />\\n            <div class=\\\"input-group-append mt2\\\">\\n                <div class=\\\"input-group-text\\\">\\n                    <img class=\\\"mr2 cursor-pointer\\\" id=\\\"twilio_call\\\" src=\\\"{{data.domain_url}}\\\\img\\\\call.png\\\" style=\\\"width: 20px\\\"\\n                    onclick=\\\"window._AppletIO.getTwilio().call('{{data.to_number}}')\\\" />\\n                <img class=\\\"cursor-pointer ml2\\\" id=\\\"twilio_sms\\\" src=\\\"{{data.domain_url}}\\\\img\\\\sms.png\\\" style=\\\"width: 20px\\\"\\n                    onclick=\\\"window._AppletIO.getTwilio().sms('{{data.app_config_id}}', '{{data.to_number}}')\\\" />\\n                </div>\\n              </div>\\n        </div>\\n    </div>\\n    <div id=\\\"twilio-calling\\\">\\n    </div>\\n    <div id=\\\"twilio-sms-send\\\">\\n    </div>\\n</div>\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/twilio/index.html?");

/***/ }),

/***/ "./src/html/widget/twilio/numbers.html":
/*!*********************************************!*\
  !*** ./src/html/widget/twilio/numbers.html ***!
  \*********************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<select class=\\\"form-control mt-10p\\\" name=\\\"\\\" id=\\\"from_number\\\" width=\\\"5\\\">\\n    {{#each data}}\\n    <option id=\\\"from_number_{{phone_number}}\\\" value=\\\"{{phone_number}}\\\">{{phone_number}}</option>\\n    {{/each}}\\n</select>\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/twilio/numbers.html?");

/***/ }),

/***/ "./src/html/widget/twilio/sms.html":
/*!*****************************************!*\
  !*** ./src/html/widget/twilio/sms.html ***!
  \*****************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div class=\\\"ml1 row mr2\\\">\\n    <textarea id=\\\"twilio-sms-message\\\" class=\\\"form-control 12 ml1\\\"></textarea>\\n    <button class=\\\"btn btnprimary col4 ml1 mt4 mlauto cursor-pointer spinner-button\\\" id=\\\"twilo-sms-button\\\"\\n        onclick=\\\"window._AppletIO.getTwilio().message('{{data.id}}', '{{data.to_number}}')\\\">Send</button>\\n</div>\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/twilio/sms.html?");

/***/ }),

/***/ "./src/html/widget/twitter.html":
/*!**************************************!*\
  !*** ./src/html/widget/twitter.html ***!
  \**************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<!-- For to load Twitter UI -->\\n{{#each data}}\\n<div style=\\\"display: flex; border: 1px solid #0000000d !important; border-radius: 4px !important\\\" class=\\\"mt2 mb2 pt2 pb2 pr2 pl2\\\">\\n  <img src=\\\"{{this.Image}}\\\" />\\n  <div>\\n    <a class=\\\"ml4\\\" href=\\\"https://twitter.com/{{this.Profile_Link}}\\\" target=\\\"_blank\\\">{{this.Name}}</a>\\n    <p class=\\\"ml4\\\">{{this.User_Id}}</p>\\n    <p class=\\\"ml4\\\">{{this.Description}}</p>\\n  </div>\\n</div>\\n{{/each}}\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/twitter.html?");

/***/ }),

/***/ "./src/html/widget/widget-cards.html":
/*!*******************************************!*\
  !*** ./src/html/widget/widget-cards.html ***!
  \*******************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<div id=\\\"accordion_{{data.app_id}}\\\" class=\\\"checkWidgetData\\\">\\n    <div class=\\\"card content-card\\\">\\n      <div class=\\\"cardheader collapseheader cardlink\\\" data-toggle=\\\"collapse\\\"\\n        onclick=\\\"window._Widget.appWidgets('appcollapse_{{data.app_id}}')\\\">\\n        <img src=\\\"https://infinity.500apps.com/img/flow/{{data.app_id}}.svg\\\"\\n          style=\\\"width: 30px; height: 30px; margin-right: 10px;vertical-align: middle;\\\" />\\n        <span class=\\\"user-appname\\\">{{data.app_name}}</span>\\n        <span class=\\\"accordian-icon rotate-icon\\\">\\n          <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"24\\\" height=\\\"20\\\" viewBox=\\\"0 0 24 24\\\" fill=\\\"none\\\">\\n            <path d=\\\"M18 15L12 9L6 15\\\" stroke=\\\"#25282B\\\" stroke-width=\\\"2\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" />\\n          </svg>\\n        </span>\\n      </div>\\n      <div id=\\\"appcollapse_{{data.app_id}}\\\" class=\\\"collapse\\\" data-parent=\\\"#accordion_{{data.app_id}}\\\">\\n        {{#if data.is_twilio}}\\n          <div id=\\\"twilio\\\"></div>\\n        {{/if}}\\n        <div class=\\\"cardbody\\\">\\n          <div class=\\\"nav nav-tabs widtabs\\\" id=\\\"nav-tab_{{data.app_id}}\\\" role=\\\"tablist\\\">\\n            {{#each data.widget}}\\n            <a class=\\\"nav-item nav-link texttruncate nav-item-size\\\" id=\\\"nav-home-tab-{{id}}\\\" data-toggle=\\\"tab\\\"\\n              onclick=\\\"window._Widget.changeWidgetTab('{{id}}','{{../data.app_id}}')\\\" role=\\\"tab\\\"\\n              aria-controls=\\\"nav-home-{{id}}\\\" aria-selected=\\\"true\\\" title=\\\"{{name}}\\\">{{name}}\\n            </a>\\n            {{/each}}\\n          </div>\\n          <div class=\\\"tab-content px-3 px-sm-0 widbody sidecontent-height\\\" id=\\\"nav-tabContent_{{data.app_id}}\\\">\\n            {{#each data.widget}}\\n            <div class=\\\"tab-pane fade custom-card\\\" id=\\\"nav-home-{{id}}\\\" role=\\\"tabpanel\\\"\\n              aria-labelledby=\\\"nav-home-tab-{{id}}\\\">\\n              <div id=\\\"widget_card_loder-{{id}}\\\" class=\\\"mt4 mb3\\\" style=\\\"text-align: center\\\">\\n                <img src=\\\"https://appletio-js.500apps.com/img/loader.png\\\" style=\\\"width: 70px\\\" />\\n              </div>\\n              <div id=\\\"widget_empty_message-{{id}}\\\" class=\\\"mt3 mb3\\\" style=\\\"text-align: center\\\">\\n                <p>Data not available for this widget.</p>\\n              </div>\\n            </div>\\n            {{/each}}\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/widget-cards.html?");

/***/ }),

/***/ "./src/html/widget/widget.html":
/*!*************************************!*\
  !*** ./src/html/widget/widget.html ***!
  \*************************************/
/***/ ((module) => {

eval("// Module\nvar code = \"<!-- To show Widgets to the user when App is authenticated -->\\r\\n\\r\\n<div class=\\\"_500plugins_widget\\\">\\r\\n  <div>\\r\\n    <div class=\\\"label-head\\\">\\r\\n      <div class=\\\"row p1 mr0\\\">\\r\\n        <div class=\\\"col9 textleft pl3\\\">\\r\\n          <h5>Widgets</h5>\\r\\n          <h6 class=\\\"widget-powered-text\\\">Powered by <a class=\\\"powered-bold-text\\\" href=\\\"https://500apps.com/\\\" target=\\\"_blank\\\">500apps</a></h6>\\r\\n        </div>\\r\\n        <div style=\\\"display: flex\\\" class=\\\"col3 pl0 pr0 text-center mt-5p\\\" id=\\\"widget-icons\\\">\\r\\n          <a class=\\\"options-icon mr2\\\" id=\\\"maximize-widget\\\" style=\\\"cursor: pointer; display: none\\\" onclick=\\\"window._Widget.resizeWidget('maximize')\\\">\\r\\n            <span class=\\\"fe fe-maximize-2\\\"></span>\\r\\n          </a>\\r\\n          <a class=\\\"options-icon mr2\\\" id=\\\"minimize-widget\\\" style=\\\"cursor: pointer\\\" onclick=\\\"window._Widget.resizeWidget('minimize')\\\">\\r\\n            <span class=\\\"fe fe-minimize-2\\\"></span>\\r\\n          </a>\\r\\n          <a class=\\\"options-icon mr2\\\" style=\\\"cursor: pointer\\\" onclick=\\\"window._App.showApps('Marketplace')\\\">\\r\\n            <span class=\\\"fe fe-plus\\\"></span>\\r\\n          </a>\\r\\n          <a class=\\\"options-icon\\\" style=\\\"cursor: pointer\\\" onclick=\\\"window._App.showApps('Plugins')\\\">\\r\\n            <span class=\\\"fe fe-settings\\\"></span>\\r\\n          </a>\\r\\n          <a class=\\\"options-icon\\\" style=\\\"margin-left: 10px; cursor: pointer\\\" onclick=\\\"window._App.refreshPage()\\\">\\r\\n            <span class=\\\"fe fe-refresh-ccw\\\"></span>\\r\\n          </a>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"text-muted custom-content\\\" id=\\\"config_widget\\\">\\r\\n      <div id=\\\"card_loder\\\" style=\\\"text-align: center\\\">\\r\\n        <div>\\r\\n          <img src=\\\"https://appletio-js.500apps.com/img/loader.png\\\" style=\\\"width: 35px\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div id=\\\"card_helper\\\" style=\\\"display: none; text-align: center; font-size: 16px\\\">\\r\\n        <div class=\\\"empty-stats\\\">\\r\\n          <img src=\\\"https://appletio-js.500apps.com/img/empty-state.svg\\\" width=\\\"200px\\\" class=\\\"imgfluid mt5 mxauto pt3\\\" />\\r\\n          <p class=\\\"\\\">You have configured no apps. Please configure by clicking on the + icon.</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"widget-footer\\\">\\r\\n      <div class=\\\"widget-footer-inner\\\">Powered by <a href=\\\"https://500apps.com/\\\" target=\\\"_blank\\\">500apps</a></div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal custommodal\\\" id=\\\"appsModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"appsModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close mlauto\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" onclick=\\\"window._AppletIO.getModal().close('appsModal')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n        <div id=\\\"apps\\\"></div>\\r\\n        <div>\\r\\n          <div id=\\\"apps_card_loder\\\" class=\\\"my6\\\" style=\\\"text-align: center\\\">\\r\\n            <div>\\r\\n              <img src=\\\"https://appletio-js.500apps.com/img/loader.png\\\" style=\\\"width: 100px\\\" />\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal\\\" id=\\\"formModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"ModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close mlauto\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" onclick=\\\"window._AppletIO.getModal().close('formModal')\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n        <div id=\\\"modalFields\\\"></div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal\\\" id=\\\"MicrosoftdynamicsModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"ModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close mlauto\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" onclick=\\\"window._AppletIO.getModal().close('MicrosoftdynamicsModal')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"modal-title\\\">Add Organization URL</h5>\\r\\n        </div>\\r\\n        <input type=\\\"text\\\" id=\\\"organization_url\\\" name=\\\"name\\\" value=\\\"\\\" class=\\\"form-control\\\" title=\\\"Organization URL\\\" placeholder=\\\"Enter Organization URL\\\" /><br />\\r\\n        <button type=\\\"button\\\" onclick=\\\"window._App.getURL('Microsoft Dynamics 365 CRM')\\\">Next</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal\\\" id=\\\"ZohoModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"ModalLabel\\\" aria-hidden=\\\"true\\\">\\r\\n    <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-header\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close mlauto\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\" onclick=\\\"window._AppletIO.getModal().close('ZohoModal')\\\">\\r\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n          </button>\\r\\n          <h5 class=\\\"modal-title\\\" id=\\\"modal-title\\\">Select Data Center</h5>\\r\\n        </div>\\r\\n        <select name=\\\"data_center\\\" id=\\\"data_center\\\" class=\\\"form-control\\\" value=\\\"\\\">\\r\\n          <option value=\\\"com\\\">Data center for US region</option>\\r\\n          <option value=\\\"com.au\\\">Data center for Australia region</option>\\r\\n          <option value=\\\"in\\\">Data center for India region</option>\\r\\n          <option value=\\\"eu\\\">Data center for European region</option>\\r\\n        </select>\\r\\n        <br />\\r\\n        <button type=\\\"button\\\" onclick=\\\"window._App.getURL()\\\">Next</button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div id=\\\"backdrop\\\" style=\\\"display: none\\\">\\r\\n    <div class=\\\"modal-backdrop show\\\"></div>\\r\\n  </div>\\r\\n  <iframe id=\\\"gmailFrame\\\" style=\\\"display: none\\\"></iframe>\\r\\n</div>\\r\\n\";\n// Exports\nmodule.exports = code;\n\n//# sourceURL=webpack://unified-sso/./src/html/widget/widget.html?");

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/***/ ((module) => {

eval("if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/inherits/inherits_browser.js?");

/***/ }),

/***/ "./node_modules/is-arguments/index.js":
/*!********************************************!*\
  !*** ./node_modules/is-arguments/index.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/is-arguments/index.js?");

/***/ }),

/***/ "./node_modules/is-generator-function/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/is-generator-function/index.js ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"./node_modules/has-tostringtag/shams.js\")();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/is-generator-function/index.js?");

/***/ }),

/***/ "./node_modules/is-typed-array/index.js":
/*!**********************************************!*\
  !*** ./node_modules/is-typed-array/index.js ***!
  \**********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar forEach = __webpack_require__(/*! foreach */ \"./node_modules/foreach/index.js\");\nvar availableTypedArrays = __webpack_require__(/*! available-typed-arrays */ \"./node_modules/available-typed-arrays/index.js\");\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"./node_modules/has-tostringtag/shams.js\")();\n\nvar g = typeof globalThis === 'undefined' ? __webpack_require__.g : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = __webpack_require__(/*! es-abstract/helpers/getOwnPropertyDescriptor */ \"./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js\");\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/is-typed-array/index.js?");

/***/ }),

/***/ "./node_modules/jwt-decode/build/jwt-decode.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/jwt-decode/build/jwt-decode.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"InvalidTokenError\": () => (/* binding */ n)\n/* harmony export */ });\nfunction e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (o);\n//# sourceMappingURL=jwt-decode.esm.js.map\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/jwt-decode/build/jwt-decode.esm.js?");

/***/ }),

/***/ "./node_modules/precond/index.js":
/*!***************************************!*\
  !*** ./node_modules/precond/index.js ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * Copyright (c) 2012 Mathieu Turcotte\n * Licensed under the MIT license.\n */\n\nmodule.exports = __webpack_require__(/*! ./lib/checks */ \"./node_modules/precond/lib/checks.js\");\n\n//# sourceURL=webpack://unified-sso/./node_modules/precond/index.js?");

/***/ }),

/***/ "./node_modules/precond/lib/checks.js":
/*!********************************************!*\
  !*** ./node_modules/precond/lib/checks.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * Copyright (c) 2012 Mathieu Turcotte\n * Licensed under the MIT license.\n */\n\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nvar errors = module.exports = __webpack_require__(/*! ./errors */ \"./node_modules/precond/lib/errors.js\");\n\nfunction failCheck(ExceptionConstructor, callee, messageFormat, formatArgs) {\n    messageFormat = messageFormat || '';\n    var message = util.format.apply(this, [messageFormat].concat(formatArgs));\n    var error = new ExceptionConstructor(message);\n    Error.captureStackTrace(error, callee);\n    throw error;\n}\n\nfunction failArgumentCheck(callee, message, formatArgs) {\n    failCheck(errors.IllegalArgumentError, callee, message, formatArgs);\n}\n\nfunction failStateCheck(callee, message, formatArgs) {\n    failCheck(errors.IllegalStateError, callee, message, formatArgs);\n}\n\nmodule.exports.checkArgument = function(value, message) {\n    if (!value) {\n        failArgumentCheck(arguments.callee, message,\n            Array.prototype.slice.call(arguments, 2));\n    }\n};\n\nmodule.exports.checkState = function(value, message) {\n    if (!value) {\n        failStateCheck(arguments.callee, message,\n            Array.prototype.slice.call(arguments, 2));\n    }\n};\n\nmodule.exports.checkIsDef = function(value, message) {\n    if (value !== undefined) {\n        return value;\n    }\n\n    failArgumentCheck(arguments.callee, message ||\n        'Expected value to be defined but was undefined.',\n        Array.prototype.slice.call(arguments, 2));\n};\n\nmodule.exports.checkIsDefAndNotNull = function(value, message) {\n    // Note that undefined == null.\n    if (value != null) {\n        return value;\n    }\n\n    failArgumentCheck(arguments.callee, message ||\n        'Expected value to be defined and not null but got \"' +\n        typeOf(value) + '\".', Array.prototype.slice.call(arguments, 2));\n};\n\n// Fixed version of the typeOf operator which returns 'null' for null values\n// and 'array' for arrays.\nfunction typeOf(value) {\n    var s = typeof value;\n    if (s == 'object') {\n        if (!value) {\n            return 'null';\n        } else if (value instanceof Array) {\n            return 'array';\n        }\n    }\n    return s;\n}\n\nfunction typeCheck(expect) {\n    return function(value, message) {\n        var type = typeOf(value);\n\n        if (type == expect) {\n            return value;\n        }\n\n        failArgumentCheck(arguments.callee, message ||\n            'Expected \"' + expect + '\" but got \"' + type + '\".',\n            Array.prototype.slice.call(arguments, 2));\n    };\n}\n\nmodule.exports.checkIsString = typeCheck('string');\nmodule.exports.checkIsArray = typeCheck('array');\nmodule.exports.checkIsNumber = typeCheck('number');\nmodule.exports.checkIsBoolean = typeCheck('boolean');\nmodule.exports.checkIsFunction = typeCheck('function');\nmodule.exports.checkIsObject = typeCheck('object');\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/precond/lib/checks.js?");

/***/ }),

/***/ "./node_modules/precond/lib/errors.js":
/*!********************************************!*\
  !*** ./node_modules/precond/lib/errors.js ***!
  \********************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/*\n * Copyright (c) 2012 Mathieu Turcotte\n * Licensed under the MIT license.\n */\n\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nfunction IllegalArgumentError(message) {\n    Error.call(this, message);\n    this.message = message;\n}\nutil.inherits(IllegalArgumentError, Error);\n\nIllegalArgumentError.prototype.name = 'IllegalArgumentError';\n\nfunction IllegalStateError(message) {\n    Error.call(this, message);\n    this.message = message;\n}\nutil.inherits(IllegalStateError, Error);\n\nIllegalStateError.prototype.name = 'IllegalStateError';\n\nmodule.exports.IllegalStateError = IllegalStateError;\nmodule.exports.IllegalArgumentError = IllegalArgumentError;\n\n//# sourceURL=webpack://unified-sso/./node_modules/precond/lib/errors.js?");

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/***/ ((module) => {

eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/process/browser.js?");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime-module.js":
/*!************************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime-module.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This method of obtaining a reference to the global object needs to be\n// kept identical to the way it is obtained in runtime.js\nvar g = (function() { return this })() || Function(\"return this\")();\n\n// Use `getOwnPropertyNames` because not all browsers support calling\n// `hasOwnProperty` on the global `self` object in a worker. See #183.\nvar hadRuntime = g.regeneratorRuntime &&\n  Object.getOwnPropertyNames(g).indexOf(\"regeneratorRuntime\") >= 0;\n\n// Save the old regeneratorRuntime in case it needs to be restored later.\nvar oldRuntime = hadRuntime && g.regeneratorRuntime;\n\n// Force reevalutation of runtime.js.\ng.regeneratorRuntime = undefined;\n\nmodule.exports = __webpack_require__(/*! ./runtime */ \"./node_modules/regenerator-runtime/runtime.js\");\n\nif (hadRuntime) {\n  // Restore the original runtime.\n  g.regeneratorRuntime = oldRuntime;\n} else {\n  // Remove the global property added by runtime.js.\n  try {\n    delete g.regeneratorRuntime;\n  } catch(e) {\n    g.regeneratorRuntime = undefined;\n  }\n}\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/regenerator-runtime/runtime-module.js?");

/***/ }),

/***/ "./node_modules/regenerator-runtime/runtime.js":
/*!*****************************************************!*\
  !*** ./node_modules/regenerator-runtime/runtime.js ***!
  \*****************************************************/
/***/ ((module) => {

eval("/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n!(function(global) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  var inModule = \"object\" === \"object\";\n  var runtime = global.regeneratorRuntime;\n  if (runtime) {\n    if (inModule) {\n      // If regeneratorRuntime is defined globally and we're in a module,\n      // make the exports object identical to regeneratorRuntime.\n      module.exports = runtime;\n    }\n    // Don't bother evaluating the rest of this file if the runtime was\n    // already defined globally.\n    return;\n  }\n\n  // Define the runtime globally (as expected by generated code) as either\n  // module.exports (if we're in a module) or a new, empty object.\n  runtime = global.regeneratorRuntime = inModule ? module.exports : {};\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  runtime.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  runtime.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  runtime.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  runtime.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration. If the Promise is rejected, however, the\n          // result for this iteration will be rejected with the same\n          // reason. Note that rejections of yielded Promises are not\n          // thrown back into the generator function, as is the case\n          // when an awaited Promise is rejected. This difference in\n          // behavior between yield and await is important, because it\n          // allows the consumer to decide what to do with the yielded\n          // rejection (swallow it and continue, manually .throw it back\n          // into the generator, abandon iteration, whatever). With\n          // await, by contrast, there is no opportunity to examine the\n          // rejection reason outside the generator function, so the\n          // only option is to throw it from the await expression, and\n          // let the generator function handle the exception.\n          result.value = unwrapped;\n          resolve(result);\n        }, reject);\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  runtime.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  runtime.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return runtime.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        if (delegate.iterator.return) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  runtime.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  runtime.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n})(\n  // In sloppy mode, unbound `this` refers to the global object, fallback to\n  // Function constructor if we're in global strict mode. That is sadly a form\n  // of indirect eval which violates Content Security Policy.\n  (function() { return this })() || Function(\"return this\")()\n);\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/regenerator-runtime/runtime.js?");

/***/ }),

/***/ "./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js":
/*!******************************************************************!*\
  !*** ./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js ***!
  \******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n\nvar SDPUtils = __webpack_require__(/*! sdp */ \"./node_modules/sdp/sdp.js\");\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this.localDescription = null;\n    this.remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (whih is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    this.transceivers.push(transceiver);\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n        event.candidate.candidate = serializedCandidate;\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc.localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc.localDescription.sdp =\n          SDPUtils.getDescription(pc.localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.isDatachannel) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc.localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          isDatachannel: true\n        };\n        return;\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc.remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      states[transceiver.iceTransport.state]++;\n      states[transceiver.dtlsTransport.state]++;\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0 || states.checking > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0 || states.completed > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc.remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.isDatachannel) {\n        sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' +\n            'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc.remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].isDatachannel) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc.remoteDescription.sdp =\n              SDPUtils.getDescription(pc.remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.isDatachannel) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc.remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc.remoteDescription.sdp = sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function() {\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    var fixStatsType = function(stat) {\n      return {\n        inboundrtp: 'inbound-rtp',\n        outboundrtp: 'outbound-rtp',\n        candidatepair: 'candidate-pair',\n        localcandidate: 'local-candidate',\n        remotecandidate: 'remote-candidate'\n      }[stat.type] || stat.type;\n    };\n    return new Promise(function(resolve) {\n      // shim getStats with maplike support\n      var results = new Map();\n      Promise.all(promises).then(function(res) {\n        res.forEach(function(result) {\n          Object.keys(result).forEach(function(id) {\n            result[id].type = fixStatsType(result[id]);\n            results.set(id, result[id]);\n          });\n        });\n        resolve(results);\n      });\n    });\n  };\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js?");

/***/ }),

/***/ "./node_modules/sdp/sdp.js":
/*!*********************************!*\
  !*** ./node_modules/sdp/sdp.js ***!
  \*********************************/
/***/ ((module) => {

"use strict";
eval("/* eslint-env node */\n\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (true) {\n  module.exports = SDPUtils;\n}\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/sdp/sdp.js?");

/***/ }),

/***/ "./src/global.css":
/*!************************!*\
  !*** ./src/global.css ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_global_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../node_modules/css-loader/dist/cjs.js!./global.css */ \"./node_modules/css-loader/dist/cjs.js!./src/global.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_global_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_global_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://unified-sso/./src/global.css?");

/***/ }),

/***/ "./src/widget/widget.css":
/*!*******************************!*\
  !*** ./src/widget/widget.css ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_widget_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js!./widget.css */ \"./node_modules/css-loader/dist/cjs.js!./src/widget/widget.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_widget_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_widget_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://unified-sso/./src/widget/widget.css?");

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar isOldIE = function isOldIE() {\n  var memo;\n  return function memorize() {\n    if (typeof memo === 'undefined') {\n      // Test for IE <= 9 as proposed by Browserhacks\n      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n      // Tests for existence of standard globals is to allow style-loader\n      // to operate correctly into non-standard environments\n      // @see https://github.com/webpack-contrib/style-loader/issues/177\n      memo = Boolean(window && document && document.all && !window.atob);\n    }\n\n    return memo;\n  };\n}();\n\nvar getTarget = function getTarget() {\n  var memo = {};\n  return function memorize(target) {\n    if (typeof memo[target] === 'undefined') {\n      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself\n\n      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n        try {\n          // This will throw an exception if access to iframe is blocked\n          // due to cross-origin restrictions\n          styleTarget = styleTarget.contentDocument.head;\n        } catch (e) {\n          // istanbul ignore next\n          styleTarget = null;\n        }\n      }\n\n      memo[target] = styleTarget;\n    }\n\n    return memo[target];\n  };\n}();\n\nvar stylesInDom = [];\n\nfunction getIndexByIdentifier(identifier) {\n  var result = -1;\n\n  for (var i = 0; i < stylesInDom.length; i++) {\n    if (stylesInDom[i].identifier === identifier) {\n      result = i;\n      break;\n    }\n  }\n\n  return result;\n}\n\nfunction modulesToDom(list, options) {\n  var idCountMap = {};\n  var identifiers = [];\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = options.base ? item[0] + options.base : item[0];\n    var count = idCountMap[id] || 0;\n    var identifier = \"\".concat(id, \" \").concat(count);\n    idCountMap[id] = count + 1;\n    var index = getIndexByIdentifier(identifier);\n    var obj = {\n      css: item[1],\n      media: item[2],\n      sourceMap: item[3]\n    };\n\n    if (index !== -1) {\n      stylesInDom[index].references++;\n      stylesInDom[index].updater(obj);\n    } else {\n      stylesInDom.push({\n        identifier: identifier,\n        updater: addStyle(obj, options),\n        references: 1\n      });\n    }\n\n    identifiers.push(identifier);\n  }\n\n  return identifiers;\n}\n\nfunction insertStyleElement(options) {\n  var style = document.createElement('style');\n  var attributes = options.attributes || {};\n\n  if (typeof attributes.nonce === 'undefined') {\n    var nonce =  true ? __webpack_require__.nc : 0;\n\n    if (nonce) {\n      attributes.nonce = nonce;\n    }\n  }\n\n  Object.keys(attributes).forEach(function (key) {\n    style.setAttribute(key, attributes[key]);\n  });\n\n  if (typeof options.insert === 'function') {\n    options.insert(style);\n  } else {\n    var target = getTarget(options.insert || 'head');\n\n    if (!target) {\n      throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\n    }\n\n    target.appendChild(style);\n  }\n\n  return style;\n}\n\nfunction removeStyleElement(style) {\n  // istanbul ignore if\n  if (style.parentNode === null) {\n    return false;\n  }\n\n  style.parentNode.removeChild(style);\n}\n/* istanbul ignore next  */\n\n\nvar replaceText = function replaceText() {\n  var textStore = [];\n  return function replace(index, replacement) {\n    textStore[index] = replacement;\n    return textStore.filter(Boolean).join('\\n');\n  };\n}();\n\nfunction applyToSingletonTag(style, index, remove, obj) {\n  var css = remove ? '' : obj.media ? \"@media \".concat(obj.media, \" {\").concat(obj.css, \"}\") : obj.css; // For old IE\n\n  /* istanbul ignore if  */\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = replaceText(index, css);\n  } else {\n    var cssNode = document.createTextNode(css);\n    var childNodes = style.childNodes;\n\n    if (childNodes[index]) {\n      style.removeChild(childNodes[index]);\n    }\n\n    if (childNodes.length) {\n      style.insertBefore(cssNode, childNodes[index]);\n    } else {\n      style.appendChild(cssNode);\n    }\n  }\n}\n\nfunction applyToTag(style, options, obj) {\n  var css = obj.css;\n  var media = obj.media;\n  var sourceMap = obj.sourceMap;\n\n  if (media) {\n    style.setAttribute('media', media);\n  } else {\n    style.removeAttribute('media');\n  }\n\n  if (sourceMap && typeof btoa !== 'undefined') {\n    css += \"\\n/*# sourceMappingURL=data:application/json;base64,\".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), \" */\");\n  } // For old IE\n\n  /* istanbul ignore if  */\n\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    while (style.firstChild) {\n      style.removeChild(style.firstChild);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar singleton = null;\nvar singletonCounter = 0;\n\nfunction addStyle(obj, options) {\n  var style;\n  var update;\n  var remove;\n\n  if (options.singleton) {\n    var styleIndex = singletonCounter++;\n    style = singleton || (singleton = insertStyleElement(options));\n    update = applyToSingletonTag.bind(null, style, styleIndex, false);\n    remove = applyToSingletonTag.bind(null, style, styleIndex, true);\n  } else {\n    style = insertStyleElement(options);\n    update = applyToTag.bind(null, style, options);\n\n    remove = function remove() {\n      removeStyleElement(style);\n    };\n  }\n\n  update(obj);\n  return function updateStyle(newObj) {\n    if (newObj) {\n      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\n        return;\n      }\n\n      update(obj = newObj);\n    } else {\n      remove();\n    }\n  };\n}\n\nmodule.exports = function (list, options) {\n  options = options || {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n  // tags it will allow on a page\n\n  if (!options.singleton && typeof options.singleton !== 'boolean') {\n    options.singleton = isOldIE();\n  }\n\n  list = list || [];\n  var lastIdentifiers = modulesToDom(list, options);\n  return function update(newList) {\n    newList = newList || [];\n\n    if (Object.prototype.toString.call(newList) !== '[object Array]') {\n      return;\n    }\n\n    for (var i = 0; i < lastIdentifiers.length; i++) {\n      var identifier = lastIdentifiers[i];\n      var index = getIndexByIdentifier(identifier);\n      stylesInDom[index].references--;\n    }\n\n    var newLastIdentifiers = modulesToDom(newList, options);\n\n    for (var _i = 0; _i < lastIdentifiers.length; _i++) {\n      var _identifier = lastIdentifiers[_i];\n\n      var _index = getIndexByIdentifier(_identifier);\n\n      if (stylesInDom[_index].references === 0) {\n        stylesInDom[_index].updater();\n\n        stylesInDom.splice(_index, 1);\n      }\n    }\n\n    lastIdentifiers = newLastIdentifiers;\n  };\n};\n\n//# sourceURL=webpack://unified-sso/./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js?");

/***/ }),

/***/ "./node_modules/twilio-client/browser/ws.js":
/*!**************************************************!*\
  !*** ./node_modules/twilio-client/browser/ws.js ***!
  \**************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = WebSocket;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/browser/ws.js?");

/***/ }),

/***/ "./node_modules/twilio-client/browser/xmlhttprequest.js":
/*!**************************************************************!*\
  !*** ./node_modules/twilio-client/browser/xmlhttprequest.js ***!
  \**************************************************************/
/***/ ((module) => {

"use strict";
eval("\nmodule.exports = { XMLHttpRequest: XMLHttpRequest };\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/browser/xmlhttprequest.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio.js":
/*!**************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @packageDocumentation\n * @internalapi\n */\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar connection_1 = __webpack_require__(/*! ./twilio/connection */ \"./node_modules/twilio-client/es5/twilio/connection.js\");\nexports.Connection = connection_1.default;\nvar device_1 = __webpack_require__(/*! ./twilio/device */ \"./node_modules/twilio-client/es5/twilio/device.js\");\nexports.Device = device_1.default;\nvar preflight_1 = __webpack_require__(/*! ./twilio/preflight/preflight */ \"./node_modules/twilio-client/es5/twilio/preflight/preflight.js\");\nexports.PreflightTest = preflight_1.PreflightTest;\nvar PStream = __webpack_require__(/*! ./twilio/pstream */ \"./node_modules/twilio-client/es5/twilio/pstream.js\");\nexports.PStream = PStream;\nvar instance;\nObject.defineProperty(device_1.default, 'instance', {\n    get: function () { return instance; },\n    set: function (_instance) {\n        if (_instance === null) {\n            instance = null;\n        }\n    },\n});\ndevice_1.default.destroy = function destroySingleton() {\n    if (instance) {\n        instance.destroy();\n    }\n    bindSingleton();\n};\n/**\n * Create a new Device instance and bind its functions to the Device static. This maintains\n * backwards compatibility for the Device singleton behavior and will be removed in the next\n * breaking release.\n */\nfunction bindSingleton() {\n    instance = new device_1.default();\n    Object.getOwnPropertyNames(device_1.default.prototype)\n        .concat(Object.getOwnPropertyNames(events_1.EventEmitter.prototype))\n        .filter(function (prop) {\n        return typeof device_1.default.prototype[prop] === 'function';\n    })\n        .filter(function (prop) { return prop !== 'destroy'; })\n        .forEach(function (prop) {\n        device_1.default[prop] = device_1.default.prototype[prop].bind(instance);\n    });\n}\nbindSingleton();\nObject.getOwnPropertyNames(instance)\n    .filter(function (prop) { return typeof device_1.default.prototype[prop] !== 'function'; })\n    .forEach(function (prop) {\n    Object.defineProperty(device_1.default, prop, {\n        get: function () {\n            if (instance) {\n                return instance[prop];\n            }\n        },\n        set: function (_prop) {\n            if (instance) {\n                instance[prop] = _prop;\n            }\n        },\n    });\n});\n//# sourceMappingURL=twilio.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/asyncQueue.js":
/*!*************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/asyncQueue.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\nvar deferred_1 = __webpack_require__(/*! ./deferred */ \"./node_modules/twilio-client/es5/twilio/deferred.js\");\n/**\n * Queue async operations and executes them synchronously.\n */\nvar AsyncQueue = /** @class */ (function () {\n    function AsyncQueue() {\n        /**\n         * The list of async operations in this queue\n         */\n        this._operations = [];\n    }\n    /**\n     * Adds the async operation to the queue\n     * @param callback An async callback that returns a promise\n     * @returns A promise that will get resolved or rejected after executing the callback\n     */\n    AsyncQueue.prototype.enqueue = function (callback) {\n        var hasPending = !!this._operations.length;\n        var deferred = new deferred_1.default();\n        this._operations.push({ deferred: deferred, callback: callback });\n        if (!hasPending) {\n            this._processQueue();\n        }\n        return deferred.promise;\n    };\n    /**\n     * Start processing the queue. This executes the first item and removes it after.\n     * Then do the same for next items until the queue is emptied.\n     */\n    AsyncQueue.prototype._processQueue = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, deferred, callback, result, error, hasResolved, e_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!this._operations.length) return [3 /*break*/, 5];\n                        _a = this._operations[0], deferred = _a.deferred, callback = _a.callback;\n                        result = void 0;\n                        error = void 0;\n                        hasResolved = void 0;\n                        _b.label = 1;\n                    case 1:\n                        _b.trys.push([1, 3, , 4]);\n                        return [4 /*yield*/, callback()];\n                    case 2:\n                        result = _b.sent();\n                        hasResolved = true;\n                        return [3 /*break*/, 4];\n                    case 3:\n                        e_1 = _b.sent();\n                        error = e_1;\n                        return [3 /*break*/, 4];\n                    case 4:\n                        // Remove the item\n                        this._operations.shift();\n                        if (hasResolved) {\n                            deferred.resolve(result);\n                        }\n                        else {\n                            deferred.reject(error);\n                        }\n                        return [3 /*break*/, 0];\n                    case 5: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    return AsyncQueue;\n}());\nexports.AsyncQueue = AsyncQueue;\n//# sourceMappingURL=asyncQueue.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/asyncQueue.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/audiohelper.js":
/*!**************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/audiohelper.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @packageDocumentation\n * @module Voice\n */\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\");\nvar log_1 = __webpack_require__(/*! ./log */ \"./node_modules/twilio-client/es5/twilio/log.js\");\nvar outputdevicecollection_1 = __webpack_require__(/*! ./outputdevicecollection */ \"./node_modules/twilio-client/es5/twilio/outputdevicecollection.js\");\nvar defaultMediaDevices = __webpack_require__(/*! ./shims/mediadevices */ \"./node_modules/twilio-client/es5/twilio/shims/mediadevices.js\");\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/twilio-client/es5/twilio/util.js\");\nvar MediaDeviceInfoShim = __webpack_require__(/*! ./shims/mediadeviceinfo */ \"./node_modules/twilio-client/es5/twilio/shims/mediadeviceinfo.js\");\n/**\n * Aliases for audio kinds, used for labelling.\n * @private\n */\nvar kindAliases = {\n    audioinput: 'Audio Input',\n    audiooutput: 'Audio Output',\n};\n/**\n * Provides input and output audio-based functionality in one convenient class.\n * @publicapi\n */\nvar AudioHelper = /** @class */ (function (_super) {\n    __extends(AudioHelper, _super);\n    /**\n     * @constructor\n     * @private\n     * @param onActiveOutputsChanged - A callback to be called when the user changes the active output devices.\n     * @param onActiveInputChanged - A callback to be called when the user changes the active input device.\n     * @param getUserMedia - The getUserMedia method to use.\n     * @param [options]\n     */\n    function AudioHelper(onActiveOutputsChanged, onActiveInputChanged, getUserMedia, options) {\n        var _this = _super.call(this) || this;\n        /**\n         * A Map of all audio input devices currently available to the browser by their device ID.\n         */\n        _this.availableInputDevices = new Map();\n        /**\n         * A Map of all audio output devices currently available to the browser by their device ID.\n         */\n        _this.availableOutputDevices = new Map();\n        /**\n         * The currently set audio constraints set by setAudioConstraints().\n         */\n        _this._audioConstraints = null;\n        /**\n         * The current input device.\n         */\n        _this._inputDevice = null;\n        /**\n         * The current input stream.\n         */\n        _this._inputStream = null;\n        /**\n         * Whether the {@link AudioHelper} is currently polling the input stream's volume.\n         */\n        _this._isPollingInputVolume = false;\n        /**\n         * An instance of Logger to use.\n         */\n        _this._log = log_1.default.getInstance();\n        /**\n         * A record of unknown devices (Devices without labels)\n         */\n        _this._unknownDeviceIndexes = {\n            audioinput: {},\n            audiooutput: {},\n        };\n        /**\n         * Remove an input device from inputs\n         * @param lostDevice\n         * @returns Whether the device was active\n         */\n        _this._removeLostInput = function (lostDevice) {\n            if (!_this.inputDevice || _this.inputDevice.deviceId !== lostDevice.deviceId) {\n                return false;\n            }\n            _this._replaceStream(null);\n            _this._inputDevice = null;\n            _this._maybeStopPollingVolume();\n            var defaultDevice = _this.availableInputDevices.get('default')\n                || Array.from(_this.availableInputDevices.values())[0];\n            if (defaultDevice) {\n                _this.setInputDevice(defaultDevice.deviceId);\n            }\n            return true;\n        };\n        /**\n         * Remove an input device from outputs\n         * @param lostDevice\n         * @returns Whether the device was active\n         */\n        _this._removeLostOutput = function (lostDevice) {\n            var wasSpeakerLost = _this.speakerDevices.delete(lostDevice);\n            var wasRingtoneLost = _this.ringtoneDevices.delete(lostDevice);\n            return wasSpeakerLost || wasRingtoneLost;\n        };\n        /**\n         * Update the available input and output devices\n         */\n        _this._updateAvailableDevices = function () {\n            if (!_this._mediaDevices) {\n                return Promise.reject('Enumeration not supported');\n            }\n            return _this._mediaDevices.enumerateDevices().then(function (devices) {\n                _this._updateDevices(devices.filter(function (d) { return d.kind === 'audiooutput'; }), _this.availableOutputDevices, _this._removeLostOutput);\n                _this._updateDevices(devices.filter(function (d) { return d.kind === 'audioinput'; }), _this.availableInputDevices, _this._removeLostInput);\n                var defaultDevice = _this.availableOutputDevices.get('default')\n                    || Array.from(_this.availableOutputDevices.values())[0];\n                [_this.speakerDevices, _this.ringtoneDevices].forEach(function (outputDevices) {\n                    if (!outputDevices.get().size && _this.availableOutputDevices.size && _this.isOutputSelectionSupported) {\n                        outputDevices.set(defaultDevice.deviceId)\n                            .catch(function (reason) {\n                            _this._log.warn(\"Unable to set audio output devices. \" + reason);\n                        });\n                    }\n                });\n            });\n        };\n        options = Object.assign({\n            AudioContext: typeof AudioContext !== 'undefined' && AudioContext,\n            setSinkId: typeof HTMLAudioElement !== 'undefined' && HTMLAudioElement.prototype.setSinkId,\n        }, options);\n        _this._getUserMedia = getUserMedia;\n        _this._mediaDevices = options.mediaDevices || defaultMediaDevices;\n        _this._onActiveInputChanged = onActiveInputChanged;\n        var isAudioContextSupported = !!(options.AudioContext || options.audioContext);\n        var isEnumerationSupported = !!(_this._mediaDevices && _this._mediaDevices.enumerateDevices);\n        var isSetSinkSupported = typeof options.setSinkId === 'function';\n        _this.isOutputSelectionSupported = isEnumerationSupported && isSetSinkSupported;\n        _this.isVolumeSupported = isAudioContextSupported;\n        if (options.enabledSounds) {\n            _this._addEnabledSounds(options.enabledSounds);\n        }\n        if (_this.isVolumeSupported) {\n            _this._audioContext = options.audioContext || options.AudioContext && new options.AudioContext();\n            if (_this._audioContext) {\n                _this._inputVolumeAnalyser = _this._audioContext.createAnalyser();\n                _this._inputVolumeAnalyser.fftSize = 32;\n                _this._inputVolumeAnalyser.smoothingTimeConstant = 0.3;\n            }\n        }\n        _this.ringtoneDevices = new outputdevicecollection_1.default('ringtone', _this.availableOutputDevices, onActiveOutputsChanged, _this.isOutputSelectionSupported);\n        _this.speakerDevices = new outputdevicecollection_1.default('speaker', _this.availableOutputDevices, onActiveOutputsChanged, _this.isOutputSelectionSupported);\n        _this.addListener('newListener', function (eventName) {\n            if (eventName === 'inputVolume') {\n                _this._maybeStartPollingVolume();\n            }\n        });\n        _this.addListener('removeListener', function (eventName) {\n            if (eventName === 'inputVolume') {\n                _this._maybeStopPollingVolume();\n            }\n        });\n        _this.once('newListener', function () {\n            // NOTE (rrowland): Ideally we would only check isEnumerationSupported here, but\n            //   in at least one browser version (Tested in FF48) enumerateDevices actually\n            //   returns bad data for the listed devices. Instead, we check for\n            //   isOutputSelectionSupported to avoid these quirks that may negatively affect customers.\n            if (!_this.isOutputSelectionSupported) {\n                _this._log.warn('Warning: This browser does not support audio output selection.');\n            }\n            if (!_this.isVolumeSupported) {\n                _this._log.warn(\"Warning: This browser does not support Twilio's volume indicator feature.\");\n            }\n        });\n        if (isEnumerationSupported) {\n            _this._initializeEnumeration();\n        }\n        return _this;\n    }\n    Object.defineProperty(AudioHelper.prototype, \"audioConstraints\", {\n        /**\n         * The currently set audio constraints set by setAudioConstraints(). Starts as null.\n         */\n        get: function () { return this._audioConstraints; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AudioHelper.prototype, \"inputDevice\", {\n        /**\n         * The active input device. Having no inputDevice specified by `setInputDevice()`\n         * will disable input selection related functionality.\n         */\n        get: function () { return this._inputDevice; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(AudioHelper.prototype, \"inputStream\", {\n        /**\n         * The current input stream.\n         */\n        get: function () { return this._inputStream; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Start polling volume if it's supported and there's an input stream to poll.\n     * @private\n     */\n    AudioHelper.prototype._maybeStartPollingVolume = function () {\n        var _this = this;\n        if (!this.isVolumeSupported || !this._inputStream) {\n            return;\n        }\n        this._updateVolumeSource();\n        if (this._isPollingInputVolume || !this._inputVolumeAnalyser) {\n            return;\n        }\n        var bufferLength = this._inputVolumeAnalyser.frequencyBinCount;\n        var buffer = new Uint8Array(bufferLength);\n        this._isPollingInputVolume = true;\n        var emitVolume = function () {\n            if (!_this._isPollingInputVolume) {\n                return;\n            }\n            if (_this._inputVolumeAnalyser) {\n                _this._inputVolumeAnalyser.getByteFrequencyData(buffer);\n                var inputVolume = util_1.average(buffer);\n                _this.emit('inputVolume', inputVolume / 255);\n            }\n            requestAnimationFrame(emitVolume);\n        };\n        requestAnimationFrame(emitVolume);\n    };\n    /**\n     * Stop polling volume if it's currently polling and there are no listeners.\n     * @private\n     */\n    AudioHelper.prototype._maybeStopPollingVolume = function () {\n        if (!this.isVolumeSupported) {\n            return;\n        }\n        if (!this._isPollingInputVolume || (this._inputStream && this.listenerCount('inputVolume'))) {\n            return;\n        }\n        if (this._inputVolumeSource) {\n            this._inputVolumeSource.disconnect();\n            delete this._inputVolumeSource;\n        }\n        this._isPollingInputVolume = false;\n    };\n    /**\n     * Unbind the listeners from mediaDevices.\n     * @private\n     */\n    AudioHelper.prototype._unbind = function () {\n        if (!this._mediaDevices) {\n            throw new errors_1.NotSupportedError('Enumeration is not supported');\n        }\n        if (this._mediaDevices.removeEventListener) {\n            this._mediaDevices.removeEventListener('devicechange', this._updateAvailableDevices);\n            this._mediaDevices.removeEventListener('deviceinfochange', this._updateAvailableDevices);\n        }\n    };\n    /**\n     * Set the MediaTrackConstraints to be applied on every getUserMedia call for new input\n     * device audio. Any deviceId specified here will be ignored. Instead, device IDs should\n     * be specified using {@link AudioHelper#setInputDevice}. The returned Promise resolves\n     * when the media is successfully reacquired, or immediately if no input device is set.\n     * @param audioConstraints - The MediaTrackConstraints to apply.\n     */\n    AudioHelper.prototype.setAudioConstraints = function (audioConstraints) {\n        this._audioConstraints = Object.assign({}, audioConstraints);\n        delete this._audioConstraints.deviceId;\n        return this.inputDevice\n            ? this._setInputDevice(this.inputDevice.deviceId, true)\n            : Promise.resolve();\n    };\n    /**\n     * Replace the current input device with a new device by ID.\n     * @param deviceId - An ID of a device to replace the existing\n     *   input device with.\n     */\n    AudioHelper.prototype.setInputDevice = function (deviceId) {\n        return !util_1.isFirefox()\n            ? this._setInputDevice(deviceId, false)\n            : Promise.reject(new errors_1.NotSupportedError('Firefox does not currently support opening multiple ' +\n                'audio input tracks simultaneously, even across different tabs. As a result, ' +\n                'Device.audio.setInputDevice is disabled on Firefox until support is added.\\n' +\n                'Related BugZilla thread: https://bugzilla.mozilla.org/show_bug.cgi?id=1299324'));\n    };\n    /**\n     * Unset the MediaTrackConstraints to be applied on every getUserMedia call for new input\n     * device audio. The returned Promise resolves when the media is successfully reacquired,\n     * or immediately if no input device is set.\n     */\n    AudioHelper.prototype.unsetAudioConstraints = function () {\n        this._audioConstraints = null;\n        return this.inputDevice\n            ? this._setInputDevice(this.inputDevice.deviceId, true)\n            : Promise.resolve();\n    };\n    /**\n     * Unset the input device, stopping the tracks. This should only be called when not in a connection, and\n     *   will not allow removal of the input device during a live call.\n     */\n    AudioHelper.prototype.unsetInputDevice = function () {\n        var _this = this;\n        if (!this.inputDevice) {\n            return Promise.resolve();\n        }\n        return this._onActiveInputChanged(null).then(function () {\n            _this._replaceStream(null);\n            _this._inputDevice = null;\n            _this._maybeStopPollingVolume();\n        });\n    };\n    /**\n     * Merge the passed enabledSounds into {@link AudioHelper}. Currently used to merge the deprecated\n     *   Device.sounds object onto the new {@link AudioHelper} interface. Mutates\n     *   by reference, sharing state between {@link Device} and {@link AudioHelper}.\n     * @param enabledSounds - The initial sound settings to merge.\n     * @private\n     */\n    AudioHelper.prototype._addEnabledSounds = function (enabledSounds) {\n        var _this = this;\n        function setValue(key, value) {\n            if (typeof value !== 'undefined') {\n                enabledSounds[key] = value;\n            }\n            return enabledSounds[key];\n        }\n        Object.keys(enabledSounds).forEach(function (key) {\n            _this[key] = setValue.bind(null, key);\n        });\n    };\n    /**\n     * Get the index of an un-labeled Device.\n     * @param mediaDeviceInfo\n     * @returns The index of the passed MediaDeviceInfo\n     */\n    AudioHelper.prototype._getUnknownDeviceIndex = function (mediaDeviceInfo) {\n        var id = mediaDeviceInfo.deviceId;\n        var kind = mediaDeviceInfo.kind;\n        var index = this._unknownDeviceIndexes[kind][id];\n        if (!index) {\n            index = Object.keys(this._unknownDeviceIndexes[kind]).length + 1;\n            this._unknownDeviceIndexes[kind][id] = index;\n        }\n        return index;\n    };\n    /**\n     * Initialize output device enumeration.\n     */\n    AudioHelper.prototype._initializeEnumeration = function () {\n        var _this = this;\n        if (!this._mediaDevices) {\n            throw new errors_1.NotSupportedError('Enumeration is not supported');\n        }\n        if (this._mediaDevices.addEventListener) {\n            this._mediaDevices.addEventListener('devicechange', this._updateAvailableDevices);\n            this._mediaDevices.addEventListener('deviceinfochange', this._updateAvailableDevices);\n        }\n        this._updateAvailableDevices().then(function () {\n            if (!_this.isOutputSelectionSupported) {\n                return;\n            }\n            Promise.all([\n                _this.speakerDevices.set('default'),\n                _this.ringtoneDevices.set('default'),\n            ]).catch(function (reason) {\n                _this._log.warn(\"Warning: Unable to set audio output devices. \" + reason);\n            });\n        });\n    };\n    /**\n     * Stop the tracks on the current input stream before replacing it with the passed stream.\n     * @param stream - The new stream\n     */\n    AudioHelper.prototype._replaceStream = function (stream) {\n        if (this._inputStream) {\n            this._inputStream.getTracks().forEach(function (track) {\n                track.stop();\n            });\n        }\n        this._inputStream = stream;\n    };\n    /**\n     * Replace the current input device with a new device by ID.\n     * @param deviceId - An ID of a device to replace the existing\n     *   input device with.\n     * @param forceGetUserMedia - If true, getUserMedia will be called even if\n     *   the specified device is already active.\n     */\n    AudioHelper.prototype._setInputDevice = function (deviceId, forceGetUserMedia) {\n        var _this = this;\n        if (typeof deviceId !== 'string') {\n            return Promise.reject(new errors_1.InvalidArgumentError('Must specify the device to set'));\n        }\n        var device = this.availableInputDevices.get(deviceId);\n        if (!device) {\n            return Promise.reject(new errors_1.InvalidArgumentError(\"Device not found: \" + deviceId));\n        }\n        if (this._inputDevice && this._inputDevice.deviceId === deviceId && this._inputStream) {\n            if (!forceGetUserMedia) {\n                return Promise.resolve();\n            }\n            // If the currently active track is still in readyState `live`, gUM may return the same track\n            // rather than returning a fresh track.\n            this._inputStream.getTracks().forEach(function (track) {\n                track.stop();\n            });\n        }\n        var constraints = { audio: Object.assign({ deviceId: { exact: deviceId } }, this.audioConstraints) };\n        return this._getUserMedia(constraints).then(function (stream) {\n            return _this._onActiveInputChanged(stream).then(function () {\n                _this._replaceStream(stream);\n                _this._inputDevice = device;\n                _this._maybeStartPollingVolume();\n            });\n        });\n    };\n    /**\n     * Update a set of devices.\n     * @param updatedDevices - An updated list of available Devices\n     * @param availableDevices - The previous list of available Devices\n     * @param removeLostDevice - The method to call if a previously available Device is\n     *   no longer available.\n     */\n    AudioHelper.prototype._updateDevices = function (updatedDevices, availableDevices, removeLostDevice) {\n        var _this = this;\n        var updatedDeviceIds = updatedDevices.map(function (d) { return d.deviceId; });\n        var knownDeviceIds = Array.from(availableDevices.values()).map(function (d) { return d.deviceId; });\n        var lostActiveDevices = [];\n        // Remove lost devices\n        var lostDeviceIds = util_1.difference(knownDeviceIds, updatedDeviceIds);\n        lostDeviceIds.forEach(function (lostDeviceId) {\n            var lostDevice = availableDevices.get(lostDeviceId);\n            if (lostDevice) {\n                availableDevices.delete(lostDeviceId);\n                if (removeLostDevice(lostDevice)) {\n                    lostActiveDevices.push(lostDevice);\n                }\n            }\n        });\n        // Add any new devices, or devices with updated labels\n        var deviceChanged = false;\n        updatedDevices.forEach(function (newDevice) {\n            var existingDevice = availableDevices.get(newDevice.deviceId);\n            var newMediaDeviceInfo = _this._wrapMediaDeviceInfo(newDevice);\n            if (!existingDevice || existingDevice.label !== newMediaDeviceInfo.label) {\n                availableDevices.set(newDevice.deviceId, newMediaDeviceInfo);\n                deviceChanged = true;\n            }\n        });\n        if (deviceChanged || lostDeviceIds.length) {\n            // Force a new gUM in case the underlying tracks of the active stream have changed. One\n            //   reason this might happen is when `default` is selected and set to a USB device,\n            //   then that device is unplugged or plugged back in. We can't check for the 'ended'\n            //   event or readyState because it is asynchronous and may take upwards of 5 seconds,\n            //   in my testing. (rrowland)\n            if (this.inputDevice !== null && this.inputDevice.deviceId === 'default') {\n                this._log.warn(\"Calling getUserMedia after device change to ensure that the           tracks of the active device (default) have not gone stale.\");\n                this._setInputDevice(this.inputDevice.deviceId, true);\n            }\n            this.emit('deviceChange', lostActiveDevices);\n        }\n    };\n    /**\n     * Disconnect the old input volume source, and create and connect a new one with the current\n     * input stream.\n     */\n    AudioHelper.prototype._updateVolumeSource = function () {\n        if (!this._inputStream || !this._audioContext || !this._inputVolumeAnalyser) {\n            return;\n        }\n        if (this._inputVolumeSource) {\n            this._inputVolumeSource.disconnect();\n        }\n        this._inputVolumeSource = this._audioContext.createMediaStreamSource(this._inputStream);\n        this._inputVolumeSource.connect(this._inputVolumeAnalyser);\n    };\n    /**\n     * Convert a MediaDeviceInfo to a IMediaDeviceInfoShim.\n     * @param mediaDeviceInfo - The info to convert\n     * @returns The converted shim\n     */\n    AudioHelper.prototype._wrapMediaDeviceInfo = function (mediaDeviceInfo) {\n        var options = {\n            deviceId: mediaDeviceInfo.deviceId,\n            groupId: mediaDeviceInfo.groupId,\n            kind: mediaDeviceInfo.kind,\n            label: mediaDeviceInfo.label,\n        };\n        if (!options.label) {\n            if (options.deviceId === 'default') {\n                options.label = 'Default';\n            }\n            else {\n                var index = this._getUnknownDeviceIndex(mediaDeviceInfo);\n                options.label = \"Unknown \" + kindAliases[options.kind] + \" Device \" + index;\n            }\n        }\n        return new MediaDeviceInfoShim(options);\n    };\n    return AudioHelper;\n}(events_1.EventEmitter));\n(function (AudioHelper) {\n})(AudioHelper || (AudioHelper = {}));\nexports.default = AudioHelper;\n//# sourceMappingURL=audiohelper.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/audiohelper.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/connection.js":
/*!*************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/connection.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @packageDocumentation\n * @module Voice\n * @publicapi\n * @internal\n */\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar device_1 = __webpack_require__(/*! ./device */ \"./node_modules/twilio-client/es5/twilio/device.js\");\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\");\nvar log_1 = __webpack_require__(/*! ./log */ \"./node_modules/twilio-client/es5/twilio/log.js\");\nvar icecandidate_1 = __webpack_require__(/*! ./rtc/icecandidate */ \"./node_modules/twilio-client/es5/twilio/rtc/icecandidate.js\");\nvar statsMonitor_1 = __webpack_require__(/*! ./statsMonitor */ \"./node_modules/twilio-client/es5/twilio/statsMonitor.js\");\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/twilio-client/es5/twilio/util.js\");\nvar Backoff = __webpack_require__(/*! backoff */ \"./node_modules/backoff/index.js\");\nvar C = __webpack_require__(/*! ./constants */ \"./node_modules/twilio-client/es5/twilio/constants.js\");\nvar PeerConnection = __webpack_require__(/*! ./rtc */ \"./node_modules/twilio-client/es5/twilio/rtc/index.js\").PeerConnection;\nvar getPreferredCodecInfo = __webpack_require__(/*! ./rtc/sdp */ \"./node_modules/twilio-client/es5/twilio/rtc/sdp.js\").getPreferredCodecInfo;\nvar BACKOFF_CONFIG = {\n    factor: 1.1,\n    initialDelay: 1,\n    maxDelay: 30000,\n    randomisationFactor: 0.5,\n};\nvar DTMF_INTER_TONE_GAP = 70;\nvar DTMF_PAUSE_DURATION = 500;\nvar DTMF_TONE_DURATION = 160;\nvar METRICS_BATCH_SIZE = 10;\nvar METRICS_DELAY = 5000;\nvar MEDIA_DISCONNECT_ERROR = {\n    disconnect: true,\n    info: {\n        code: 31003,\n        message: 'Connection with Twilio was interrupted.',\n        twilioError: new errors_1.MediaErrors.ConnectionError(),\n    },\n};\nvar MULTIPLE_THRESHOLD_WARNING_NAMES = {\n    // The stat `packetsLostFraction` is monitored by two separate thresholds,\n    // `maxAverage` and `max`. Each threshold emits a different warning name.\n    packetsLostFraction: {\n        max: 'packet-loss',\n        maxAverage: 'packets-lost-fraction',\n    },\n};\nvar WARNING_NAMES = {\n    audioInputLevel: 'audio-input-level',\n    audioOutputLevel: 'audio-output-level',\n    bytesReceived: 'bytes-received',\n    bytesSent: 'bytes-sent',\n    jitter: 'jitter',\n    mos: 'mos',\n    rtt: 'rtt',\n};\nvar WARNING_PREFIXES = {\n    max: 'high-',\n    maxAverage: 'high-',\n    maxDuration: 'constant-',\n    min: 'low-',\n    minStandardDeviation: 'constant-',\n};\nvar hasBeenWarnedHandlers = false;\n/**\n * A {@link Connection} represents a media and signaling connection to a TwiML application.\n * @publicapi\n */\nvar Connection = /** @class */ (function (_super) {\n    __extends(Connection, _super);\n    /**\n     * @constructor\n     * @private\n     * @param config - Mandatory configuration options\n     * @param [options] - Optional settings\n     */\n    function Connection(config, options) {\n        var _this = _super.call(this) || this;\n        /**\n         * Call parameters received from Twilio for an incoming call.\n         */\n        _this.parameters = {};\n        /**\n         * The number of times input volume has been the same consecutively.\n         */\n        _this._inputVolumeStreak = 0;\n        /**\n         * Whether the call has been answered.\n         */\n        _this._isAnswered = false;\n        /**\n         * Whether the call has been cancelled.\n         */\n        _this._isCancelled = false;\n        /**\n         * The most recent public input volume value. 0 -> 1 representing -100 to -30 dB.\n         */\n        _this._latestInputVolume = 0;\n        /**\n         * The most recent public output volume value. 0 -> 1 representing -100 to -30 dB.\n         */\n        _this._latestOutputVolume = 0;\n        /**\n         * An instance of Logger to use.\n         */\n        _this._log = log_1.default.getInstance();\n        /**\n         * A batch of metrics samples to send to Insights. Gets cleared after\n         * each send and appended to on each new sample.\n         */\n        _this._metricsSamples = [];\n        /**\n         * The number of times output volume has been the same consecutively.\n         */\n        _this._outputVolumeStreak = 0;\n        /**\n         * A Map of Sounds to play.\n         */\n        _this._soundcache = new Map();\n        /**\n         * State of the {@link Connection}.\n         */\n        _this._status = Connection.State.Pending;\n        /**\n         * Options passed to this {@link Connection}.\n         */\n        _this.options = {\n            enableRingingState: false,\n            mediaStreamFactory: PeerConnection,\n            offerSdp: null,\n            shouldPlayDisconnect: function () { return true; },\n        };\n        /**\n         * Whether the {@link Connection} should send a hangup on disconnect.\n         */\n        _this.sendHangup = true;\n        /**\n         * String representation of {@link Connection} instance.\n         * @private\n         */\n        _this.toString = function () { return '[Twilio.Connection instance]'; };\n        _this._emitWarning = function (groupPrefix, warningName, threshold, value, wasCleared, warningData) {\n            var groupSuffix = wasCleared ? '-cleared' : '-raised';\n            var groupName = groupPrefix + \"warning\" + groupSuffix;\n            // Ignore constant input if the Connection is muted (Expected)\n            if (warningName === 'constant-audio-input-level' && _this.isMuted()) {\n                return;\n            }\n            var level = wasCleared ? 'info' : 'warning';\n            // Avoid throwing false positives as warnings until we refactor volume metrics\n            if (warningName === 'constant-audio-output-level') {\n                level = 'info';\n            }\n            var payloadData = { threshold: threshold };\n            if (value) {\n                if (value instanceof Array) {\n                    payloadData.values = value.map(function (val) {\n                        if (typeof val === 'number') {\n                            return Math.round(val * 100) / 100;\n                        }\n                        return value;\n                    });\n                }\n                else {\n                    payloadData.value = value;\n                }\n            }\n            _this._publisher.post(level, groupName, warningName, { data: payloadData }, _this);\n            if (warningName !== 'constant-audio-output-level') {\n                var emitName = wasCleared ? 'warning-cleared' : 'warning';\n                _this.emit(emitName, warningName, warningData && !wasCleared ? warningData : null);\n            }\n        };\n        /**\n         * Called when the {@link Connection} is answered.\n         * @param payload\n         */\n        _this._onAnswer = function (payload) {\n            // answerOnBridge=false will send a 183 which we need to catch in _onRinging when\n            // the enableRingingState flag is disabled. In that case, we will receive a 200 after\n            // the callee accepts the call firing a second `accept` event if we don't\n            // short circuit here.\n            if (_this._isAnswered) {\n                return;\n            }\n            _this._setCallSid(payload);\n            _this._isAnswered = true;\n            _this._maybeTransitionToOpen();\n        };\n        /**\n         * Called when the {@link Connection} is cancelled.\n         * @param payload\n         */\n        _this._onCancel = function (payload) {\n            // (rrowland) Is this check necessary? Verify, and if so move to pstream / VSP module.\n            var callsid = payload.callsid;\n            if (_this.parameters.CallSid === callsid) {\n                _this._isCancelled = true;\n                _this._publisher.info('connection', 'cancel', null, _this);\n                _this._cleanupEventListeners();\n                _this.mediaStream.close();\n                _this._status = Connection.State.Closed;\n                _this.emit('cancel');\n                _this.pstream.removeListener('cancel', _this._onCancel);\n            }\n        };\n        /**\n         * Called when the {@link Connection} is hung up.\n         * @param payload\n         */\n        _this._onHangup = function (payload) {\n            /**\n             *  see if callsid passed in message matches either callsid or outbound id\n             *  connection should always have either callsid or outbound id\n             *  if no callsid passed hangup anyways\n             */\n            if (payload.callsid && (_this.parameters.CallSid || _this.outboundConnectionId)) {\n                if (payload.callsid !== _this.parameters.CallSid\n                    && payload.callsid !== _this.outboundConnectionId) {\n                    return;\n                }\n            }\n            else if (payload.callsid) {\n                // hangup is for another connection\n                return;\n            }\n            _this._log.info('Received HANGUP from gateway');\n            if (payload.error) {\n                var error = {\n                    code: payload.error.code || 31000,\n                    connection: _this,\n                    message: payload.error.message || 'Error sent from gateway in HANGUP',\n                    twilioError: new errors_1.GeneralErrors.ConnectionError(),\n                };\n                _this._log.error('Received an error from the gateway:', error);\n                _this.emit('error', error);\n            }\n            _this.sendHangup = false;\n            _this._publisher.info('connection', 'disconnected-by-remote', null, _this);\n            _this._disconnect(null, true);\n            _this._cleanupEventListeners();\n        };\n        /**\n         * Called when there is a media failure.\n         * Manages all media-related states and takes action base on the states\n         * @param type - Type of media failure\n         */\n        _this._onMediaFailure = function (type) {\n            var _a = Connection.MediaFailure, ConnectionDisconnected = _a.ConnectionDisconnected, ConnectionFailed = _a.ConnectionFailed, IceGatheringFailed = _a.IceGatheringFailed, LowBytes = _a.LowBytes;\n            // These types signifies the end of a single ICE cycle\n            var isEndOfIceCycle = type === ConnectionFailed || type === IceGatheringFailed;\n            // Default behavior on ice failures with disabled ice restart.\n            if ((!_this.options.enableIceRestart && isEndOfIceCycle)\n                // All browsers except chrome doesn't update pc.iceConnectionState and pc.connectionState\n                // after issuing an ICE Restart, which we use to determine if ICE Restart is complete.\n                // Since we cannot detect if ICE Restart is complete, we will not retry.\n                || (!util_1.isChrome(window, window.navigator) && type === ConnectionFailed)) {\n                return _this.mediaStream.onerror(MEDIA_DISCONNECT_ERROR);\n            }\n            // Ignore any other type of media failure if ice restart is disabled\n            if (!_this.options.enableIceRestart) {\n                return;\n            }\n            // Ignore subsequent requests if ice restart is in progress\n            if (_this._status === Connection.State.Reconnecting) {\n                // This is a retry. Previous ICE Restart failed\n                if (isEndOfIceCycle) {\n                    // We already exceeded max retry time.\n                    if (Date.now() - _this._mediaReconnectStartTime > BACKOFF_CONFIG.maxDelay) {\n                        _this._log.info('Exceeded max ICE retries');\n                        return _this.mediaStream.onerror(MEDIA_DISCONNECT_ERROR);\n                    }\n                    // Issue ICE restart with backoff\n                    _this._mediaReconnectBackoff.backoff();\n                }\n                return;\n            }\n            var pc = _this.mediaStream.version.pc;\n            var isIceDisconnected = pc && pc.iceConnectionState === 'disconnected';\n            var hasLowBytesWarning = _this._monitor.hasActiveWarning('bytesSent', 'min')\n                || _this._monitor.hasActiveWarning('bytesReceived', 'min');\n            // Only certain conditions can trigger media reconnection\n            if ((type === LowBytes && isIceDisconnected)\n                || (type === ConnectionDisconnected && hasLowBytesWarning)\n                || isEndOfIceCycle) {\n                var mediaReconnectionError = {\n                    code: 53405,\n                    message: 'Media connection failed.',\n                    twilioError: new errors_1.MediaErrors.ConnectionError(),\n                };\n                _this._log.warn('ICE Connection disconnected.');\n                _this._publisher.warn('connection', 'error', mediaReconnectionError, _this);\n                _this._publisher.info('connection', 'reconnecting', null, _this);\n                _this._mediaReconnectStartTime = Date.now();\n                _this._status = Connection.State.Reconnecting;\n                _this._mediaReconnectBackoff.reset();\n                _this._mediaReconnectBackoff.backoff();\n                _this.emit('reconnecting', mediaReconnectionError);\n            }\n        };\n        /**\n         * Called when media connection is restored\n         */\n        _this._onMediaReconnected = function () {\n            // Only trigger once.\n            // This can trigger on pc.onIceConnectionChange and pc.onConnectionChange.\n            if (_this._status !== Connection.State.Reconnecting) {\n                return;\n            }\n            _this._log.info('ICE Connection reestablished.');\n            _this._publisher.info('connection', 'reconnected', null, _this);\n            _this._status = Connection.State.Open;\n            _this.emit('reconnected');\n        };\n        /**\n         * When we get a RINGING signal from PStream, update the {@link Connection} status.\n         * @param payload\n         */\n        _this._onRinging = function (payload) {\n            _this._setCallSid(payload);\n            // If we're not in 'connecting' or 'ringing' state, this event was received out of order.\n            if (_this._status !== Connection.State.Connecting && _this._status !== Connection.State.Ringing) {\n                return;\n            }\n            var hasEarlyMedia = !!payload.sdp;\n            if (_this.options.enableRingingState) {\n                _this._status = Connection.State.Ringing;\n                _this._publisher.info('connection', 'outgoing-ringing', { hasEarlyMedia: hasEarlyMedia }, _this);\n                _this.emit('ringing', hasEarlyMedia);\n                // answerOnBridge=false will send a 183, which we need to interpret as `answer` when\n                // the enableRingingState flag is disabled in order to maintain a non-breaking API from 1.4.24\n            }\n            else if (hasEarlyMedia) {\n                _this._onAnswer(payload);\n            }\n        };\n        /**\n         * Called each time StatsMonitor emits a sample.\n         * Emits stats event and batches the call stats metrics and sends them to Insights.\n         * @param sample\n         */\n        _this._onRTCSample = function (sample) {\n            var callMetrics = __assign(__assign({}, sample), { inputVolume: _this._latestInputVolume, outputVolume: _this._latestOutputVolume });\n            _this._codec = callMetrics.codecName;\n            _this._metricsSamples.push(callMetrics);\n            if (_this._metricsSamples.length >= METRICS_BATCH_SIZE) {\n                _this._publishMetrics();\n            }\n            _this.emit('sample', sample);\n        };\n        /**\n         * Called when we receive a transportClose event from pstream.\n         * Re-emits the event.\n         */\n        _this._onTransportClose = function () {\n            _this._log.error('Received transportClose from pstream');\n            _this.emit('transportClose');\n        };\n        /**\n         * Re-emit an StatsMonitor warning as a {@link Connection}.warning or .warning-cleared event.\n         * @param warningData\n         * @param wasCleared - Whether this is a -cleared or -raised event.\n         */\n        _this._reemitWarning = function (warningData, wasCleared) {\n            var groupPrefix = /^audio/.test(warningData.name) ?\n                'audio-level-' : 'network-quality-';\n            var warningPrefix = WARNING_PREFIXES[warningData.threshold.name];\n            /**\n             * NOTE: There are two \"packet-loss\" warnings: `high-packet-loss` and\n             * `high-packets-lost-fraction`, so in this case we need to use a different\n             * `WARNING_NAME` mapping.\n             */\n            var warningName;\n            if (warningData.name in MULTIPLE_THRESHOLD_WARNING_NAMES) {\n                warningName = MULTIPLE_THRESHOLD_WARNING_NAMES[warningData.name][warningData.threshold.name];\n            }\n            else if (warningData.name in WARNING_NAMES) {\n                warningName = WARNING_NAMES[warningData.name];\n            }\n            var warning = warningPrefix + warningName;\n            _this._emitWarning(groupPrefix, warning, warningData.threshold.value, warningData.values || warningData.value, wasCleared, warningData);\n        };\n        /**\n         * Re-emit an StatsMonitor warning-cleared as a .warning-cleared event.\n         * @param warningData\n         */\n        _this._reemitWarningCleared = function (warningData) {\n            _this._reemitWarning(warningData, true);\n        };\n        _this._isUnifiedPlanDefault = config.isUnifiedPlanDefault;\n        _this._soundcache = config.soundcache;\n        _this.message = options && options.twimlParams || {};\n        _this.customParameters = new Map(Object.entries(_this.message).map(function (_a) {\n            var key = _a[0], val = _a[1];\n            return [key, String(val)];\n        }));\n        Object.assign(_this.options, options);\n        if (_this.options.callParameters) {\n            _this.parameters = _this.options.callParameters;\n        }\n        _this._direction = _this.parameters.CallSid ? Connection.CallDirection.Incoming : Connection.CallDirection.Outgoing;\n        if (_this._direction === Connection.CallDirection.Incoming && _this.parameters) {\n            _this.callerInfo = _this.parameters.StirStatus\n                ? { isVerified: _this.parameters.StirStatus === 'TN-Validation-Passed-A' }\n                : null;\n        }\n        else {\n            _this.callerInfo = null;\n        }\n        _this._mediaReconnectBackoff = Backoff.exponential(BACKOFF_CONFIG);\n        _this._mediaReconnectBackoff.on('ready', function () { return _this.mediaStream.iceRestart(); });\n        // temporary call sid to be used for outgoing calls\n        _this.outboundConnectionId = generateTempCallSid();\n        var publisher = _this._publisher = config.publisher;\n        if (_this._direction === Connection.CallDirection.Incoming) {\n            publisher.info('connection', 'incoming', null, _this);\n        }\n        else {\n            publisher.info('connection', 'outgoing', { preflight: _this.options.preflight }, _this);\n        }\n        var monitor = _this._monitor = new (_this.options.StatsMonitor || statsMonitor_1.default)();\n        monitor.on('sample', _this._onRTCSample);\n        // First 20 seconds or so are choppy, so let's not bother with these warnings.\n        monitor.disableWarnings();\n        setTimeout(function () { return monitor.enableWarnings(); }, METRICS_DELAY);\n        monitor.on('warning', function (data, wasCleared) {\n            if (data.name === 'bytesSent' || data.name === 'bytesReceived') {\n                _this._onMediaFailure(Connection.MediaFailure.LowBytes);\n            }\n            _this._reemitWarning(data, wasCleared);\n        });\n        monitor.on('warning-cleared', function (data) {\n            _this._reemitWarningCleared(data);\n        });\n        _this.mediaStream = new (_this.options.MediaStream || _this.options.mediaStreamFactory)(config.audioHelper, config.pstream, config.getUserMedia, {\n            codecPreferences: _this.options.codecPreferences,\n            dscp: _this.options.dscp,\n            enableIceRestart: _this.options.enableIceRestart,\n            forceAggressiveIceNomination: _this.options.forceAggressiveIceNomination,\n            isUnifiedPlan: _this._isUnifiedPlanDefault,\n            maxAverageBitrate: _this.options.maxAverageBitrate,\n            preflight: _this.options.preflight,\n        });\n        _this.on('volume', function (inputVolume, outputVolume) {\n            _this._inputVolumeStreak = _this._checkVolume(inputVolume, _this._inputVolumeStreak, _this._latestInputVolume, 'input');\n            _this._outputVolumeStreak = _this._checkVolume(outputVolume, _this._outputVolumeStreak, _this._latestOutputVolume, 'output');\n            _this._latestInputVolume = inputVolume;\n            _this._latestOutputVolume = outputVolume;\n        });\n        _this.mediaStream.onvolume = function (inputVolume, outputVolume, internalInputVolume, internalOutputVolume) {\n            // (rrowland) These values mock the 0 -> 32767 format used by legacy getStats. We should look into\n            // migrating to a newer standard, either 0.0 -> linear or -127 to 0 in dB, matching the range\n            // chosen below.\n            monitor.addVolumes((internalInputVolume / 255) * 32767, (internalOutputVolume / 255) * 32767);\n            // (rrowland) 0.0 -> 1.0 linear\n            _this.emit('volume', inputVolume, outputVolume);\n        };\n        _this.mediaStream.ondtlstransportstatechange = function (state) {\n            var level = state === 'failed' ? 'error' : 'debug';\n            _this._publisher.post(level, 'dtls-transport-state', state, null, _this);\n        };\n        _this.mediaStream.onpcconnectionstatechange = function (state) {\n            var level = 'debug';\n            var dtlsTransport = _this.mediaStream.getRTCDtlsTransport();\n            if (state === 'failed') {\n                level = dtlsTransport && dtlsTransport.state === 'failed' ? 'error' : 'warning';\n            }\n            _this._publisher.post(level, 'pc-connection-state', state, null, _this);\n        };\n        _this.mediaStream.onicecandidate = function (candidate) {\n            var payload = new icecandidate_1.IceCandidate(candidate).toPayload();\n            _this._publisher.debug('ice-candidate', 'ice-candidate', payload, _this);\n        };\n        _this.mediaStream.onselectedcandidatepairchange = function (pair) {\n            var localCandidatePayload = new icecandidate_1.IceCandidate(pair.local).toPayload();\n            var remoteCandidatePayload = new icecandidate_1.IceCandidate(pair.remote, true).toPayload();\n            _this._publisher.debug('ice-candidate', 'selected-ice-candidate-pair', {\n                local_candidate: localCandidatePayload,\n                remote_candidate: remoteCandidatePayload,\n            }, _this);\n        };\n        _this.mediaStream.oniceconnectionstatechange = function (state) {\n            var level = state === 'failed' ? 'error' : 'debug';\n            _this._publisher.post(level, 'ice-connection-state', state, null, _this);\n        };\n        _this.mediaStream.onicegatheringfailure = function (type) {\n            _this._publisher.warn('ice-gathering-state', type, null, _this);\n            _this._onMediaFailure(Connection.MediaFailure.IceGatheringFailed);\n        };\n        _this.mediaStream.onicegatheringstatechange = function (state) {\n            _this._publisher.debug('ice-gathering-state', state, null, _this);\n        };\n        _this.mediaStream.onsignalingstatechange = function (state) {\n            _this._publisher.debug('signaling-state', state, null, _this);\n        };\n        _this.mediaStream.ondisconnected = function (msg) {\n            _this._log.info(msg);\n            _this._publisher.warn('network-quality-warning-raised', 'ice-connectivity-lost', {\n                message: msg,\n            }, _this);\n            _this.emit('warning', 'ice-connectivity-lost');\n            _this._onMediaFailure(Connection.MediaFailure.ConnectionDisconnected);\n        };\n        _this.mediaStream.onfailed = function (msg) {\n            _this._onMediaFailure(Connection.MediaFailure.ConnectionFailed);\n        };\n        _this.mediaStream.onconnected = function () {\n            // First time mediaStream is connected, but ICE Gathering issued an ICE restart and succeeded.\n            if (_this._status === Connection.State.Reconnecting) {\n                _this._onMediaReconnected();\n            }\n        };\n        _this.mediaStream.onreconnected = function (msg) {\n            _this._log.info(msg);\n            _this._publisher.info('network-quality-warning-cleared', 'ice-connectivity-lost', {\n                message: msg,\n            }, _this);\n            _this.emit('warning-cleared', 'ice-connectivity-lost');\n            _this._onMediaReconnected();\n        };\n        _this.mediaStream.onerror = function (e) {\n            if (e.disconnect === true) {\n                _this._disconnect(e.info && e.info.message);\n            }\n            var error = {\n                code: e.info.code,\n                connection: _this,\n                info: e.info,\n                message: e.info.message || 'Error with mediastream',\n                twilioError: e.info.twilioError,\n            };\n            _this._log.error('Received an error from MediaStream:', e);\n            _this.emit('error', error);\n        };\n        _this.mediaStream.onopen = function () {\n            // NOTE(mroberts): While this may have been happening in previous\n            // versions of Chrome, since Chrome 45 we have seen the\n            // PeerConnection's onsignalingstatechange handler invoked multiple\n            // times in the same signalingState 'stable'. When this happens, we\n            // invoke this onopen function. If we invoke it twice without checking\n            // for _status 'open', we'd accidentally close the PeerConnection.\n            //\n            // See <https://code.google.com/p/webrtc/issues/detail?id=4996>.\n            if (_this._status === Connection.State.Open || _this._status === Connection.State.Reconnecting) {\n                return;\n            }\n            else if (_this._status === Connection.State.Ringing || _this._status === Connection.State.Connecting) {\n                _this.mute(false);\n                _this._maybeTransitionToOpen();\n            }\n            else {\n                // call was probably canceled sometime before this\n                _this.mediaStream.close();\n            }\n        };\n        _this.mediaStream.onclose = function () {\n            _this._status = Connection.State.Closed;\n            if (_this.options.shouldPlayDisconnect && _this.options.shouldPlayDisconnect()\n                // Don't play disconnect sound if this was from a cancel event. i.e. the call\n                // was ignored or hung up even before it was answered.\n                && !_this._isCancelled) {\n                _this._soundcache.get(device_1.default.SoundName.Disconnect).play();\n            }\n            monitor.disable();\n            _this._publishMetrics();\n            if (!_this._isCancelled) {\n                _this.emit('disconnect', _this);\n            }\n        };\n        _this.pstream = config.pstream;\n        _this.pstream.on('cancel', _this._onCancel);\n        _this.pstream.on('ringing', _this._onRinging);\n        _this.pstream.on('transportClose', _this._onTransportClose);\n        _this.on('error', function (error) {\n            _this._publisher.error('connection', 'error', {\n                code: error.code, message: error.message,\n            }, _this);\n            if (_this.pstream && _this.pstream.status === 'disconnected') {\n                _this._cleanupEventListeners();\n            }\n        });\n        _this.on('disconnect', function () {\n            _this._cleanupEventListeners();\n        });\n        return _this;\n    }\n    Object.defineProperty(Connection.prototype, \"direction\", {\n        /**\n         * Whether this {@link Connection} is incoming or outgoing.\n         */\n        get: function () {\n            return this._direction;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Connection.prototype, \"codec\", {\n        /**\n         * Audio codec used for this {@link Connection}. Expecting {@link Connection.Codec} but\n         * will copy whatever we get from RTC stats.\n         */\n        get: function () {\n            return this._codec;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get the real CallSid. Returns null if not present or is a temporary call sid.\n     * @deprecated\n     * @private\n     */\n    Connection.prototype._getRealCallSid = function () {\n        this._log.warn('_getRealCallSid is deprecated and will be removed in 2.0.');\n        return /^TJ/.test(this.parameters.CallSid) ? null : this.parameters.CallSid;\n    };\n    /**\n     * Get the temporary CallSid.\n     * @deprecated\n     * @private\n     */\n    Connection.prototype._getTempCallSid = function () {\n        this._log.warn('_getTempCallSid is deprecated and will be removed in 2.0. \\\n                    Please use outboundConnectionId instead.');\n        return this.outboundConnectionId;\n    };\n    /**\n     * Set the audio input tracks from a given stream.\n     * @param stream\n     * @private\n     */\n    Connection.prototype._setInputTracksFromStream = function (stream) {\n        return this.mediaStream.setInputTracksFromStream(stream);\n    };\n    /**\n     * Set the audio output sink IDs.\n     * @param sinkIds\n     * @private\n     */\n    Connection.prototype._setSinkIds = function (sinkIds) {\n        return this.mediaStream._setSinkIds(sinkIds);\n    };\n    Connection.prototype.accept = function (handlerOrConstraints, rtcConfiguration) {\n        var _this = this;\n        if (typeof handlerOrConstraints === 'function') {\n            this._addHandler('accept', handlerOrConstraints);\n            return;\n        }\n        if (this._status !== Connection.State.Pending) {\n            return;\n        }\n        var audioConstraints = handlerOrConstraints || this.options.audioConstraints;\n        this._status = Connection.State.Connecting;\n        var connect = function () {\n            if (_this._status !== Connection.State.Connecting) {\n                // call must have been canceled\n                _this._cleanupEventListeners();\n                _this.mediaStream.close();\n                return;\n            }\n            var onAnswer = function (pc) {\n                // Report that the call was answered, and directionality\n                var eventName = _this._direction === Connection.CallDirection.Incoming\n                    ? 'accepted-by-local'\n                    : 'accepted-by-remote';\n                _this._publisher.info('connection', eventName, null, _this);\n                // Report the preferred codec and params as they appear in the SDP\n                var _a = getPreferredCodecInfo(_this.mediaStream.version.getSDP()), codecName = _a.codecName, codecParams = _a.codecParams;\n                _this._publisher.info('settings', 'codec', {\n                    codec_params: codecParams,\n                    selected_codec: codecName,\n                }, _this);\n                // Enable RTC monitoring\n                _this._monitor.enable(pc);\n            };\n            var sinkIds = typeof _this.options.getSinkIds === 'function' && _this.options.getSinkIds();\n            if (Array.isArray(sinkIds)) {\n                _this.mediaStream._setSinkIds(sinkIds).catch(function () {\n                    // (rrowland) We don't want this to throw to console since the customer\n                    // can't control this. This will most commonly be rejected on browsers\n                    // that don't support setting sink IDs.\n                });\n            }\n            _this.pstream.addListener('hangup', _this._onHangup);\n            rtcConfiguration = rtcConfiguration || _this.options.rtcConfiguration;\n            if (_this._direction === Connection.CallDirection.Incoming) {\n                _this._isAnswered = true;\n                _this.mediaStream.answerIncomingCall(_this.parameters.CallSid, _this.options.offerSdp, _this.options.rtcConstraints, rtcConfiguration, onAnswer);\n            }\n            else {\n                var params = Array.from(_this.customParameters.entries()).map(function (pair) {\n                    return encodeURIComponent(pair[0]) + \"=\" + encodeURIComponent(pair[1]);\n                }).join('&');\n                _this.pstream.once('answer', _this._onAnswer.bind(_this));\n                _this.mediaStream.makeOutgoingCall(_this.pstream.token, params, _this.outboundConnectionId, _this.options.rtcConstraints, rtcConfiguration, onAnswer);\n            }\n        };\n        if (this.options.beforeAccept) {\n            this.options.beforeAccept(this);\n        }\n        var inputStream = typeof this.options.getInputStream === 'function' && this.options.getInputStream();\n        var promise = inputStream\n            ? this.mediaStream.setInputTracksFromStream(inputStream)\n            : this.mediaStream.openWithConstraints(audioConstraints);\n        promise.then(function () {\n            _this._publisher.info('get-user-media', 'succeeded', {\n                data: { audioConstraints: audioConstraints },\n            }, _this);\n            connect();\n        }, function (error) {\n            var message;\n            var code;\n            if (error.code === 31208\n                || ['PermissionDeniedError', 'NotAllowedError'].indexOf(error.name) !== -1) {\n                code = 31208;\n                message = 'User denied access to microphone, or the web browser did not allow microphone '\n                    + 'access at this address.';\n                _this._publisher.error('get-user-media', 'denied', {\n                    data: {\n                        audioConstraints: audioConstraints,\n                        error: error,\n                    },\n                }, _this);\n            }\n            else {\n                code = 31201;\n                message = \"Error occurred while accessing microphone: \" + error.name + (error.message\n                    ? \" (\" + error.message + \")\"\n                    : '');\n                _this._publisher.error('get-user-media', 'failed', {\n                    data: {\n                        audioConstraints: audioConstraints,\n                        error: error,\n                    },\n                }, _this);\n            }\n            _this._disconnect();\n            _this.emit('error', { message: message, code: code });\n        });\n    };\n    Connection.prototype.cancel = function (handler) {\n        this._log.warn('.cancel() is deprecated. Please use .ignore() instead.');\n        if (handler) {\n            this.ignore(handler);\n        }\n        else {\n            this.ignore();\n        }\n    };\n    Connection.prototype.disconnect = function (handler) {\n        if (typeof handler === 'function') {\n            this._addHandler('disconnect', handler);\n            return;\n        }\n        this._disconnect();\n    };\n    /**\n     * @deprecated - Set a handler for the {@link errorEvent}\n     */\n    Connection.prototype.error = function (handler) {\n        if (typeof handler === 'function') {\n            this._addHandler('error', handler);\n        }\n    };\n    /**\n     * Get the local MediaStream, if set.\n     */\n    Connection.prototype.getLocalStream = function () {\n        return this.mediaStream && this.mediaStream.stream;\n    };\n    /**\n     * Get the remote MediaStream, if set.\n     */\n    Connection.prototype.getRemoteStream = function () {\n        return this.mediaStream && this.mediaStream._remoteStream;\n    };\n    Connection.prototype.ignore = function (handler) {\n        if (typeof handler === 'function') {\n            this._addHandler('cancel', handler);\n            return;\n        }\n        if (this._status !== Connection.State.Pending) {\n            return;\n        }\n        this._status = Connection.State.Closed;\n        this.emit('cancel');\n        this.mediaStream.ignore(this.parameters.CallSid);\n        this._publisher.info('connection', 'ignored-by-local', null, this);\n    };\n    /**\n     * Check if connection is muted\n     */\n    Connection.prototype.isMuted = function () {\n        return this.mediaStream.isMuted;\n    };\n    Connection.prototype.mute = function (shouldMute) {\n        if (shouldMute === void 0) { shouldMute = true; }\n        if (typeof shouldMute === 'function') {\n            this._addHandler('mute', shouldMute);\n            return;\n        }\n        var wasMuted = this.mediaStream.isMuted;\n        this.mediaStream.mute(shouldMute);\n        var isMuted = this.mediaStream.isMuted;\n        if (wasMuted !== isMuted) {\n            this._publisher.info('connection', isMuted ? 'muted' : 'unmuted', null, this);\n            this.emit('mute', isMuted, this);\n        }\n    };\n    /**\n     * Post an event to Endpoint Analytics indicating that the end user\n     *   has given call quality feedback. Called without a score, this\n     *   will report that the customer declined to give feedback.\n     * @param score - The end-user's rating of the call; an\n     *   integer 1 through 5. Or undefined if the user declined to give\n     *   feedback.\n     * @param issue - The primary issue the end user\n     *   experienced on the call. Can be: ['one-way-audio', 'choppy-audio',\n     *   'dropped-call', 'audio-latency', 'noisy-call', 'echo']\n     */\n    Connection.prototype.postFeedback = function (score, issue) {\n        if (typeof score === 'undefined' || score === null) {\n            return this._postFeedbackDeclined();\n        }\n        if (!Object.values(Connection.FeedbackScore).includes(score)) {\n            throw new errors_1.InvalidArgumentError(\"Feedback score must be one of: \" + Object.values(Connection.FeedbackScore));\n        }\n        if (typeof issue !== 'undefined' && issue !== null && !Object.values(Connection.FeedbackIssue).includes(issue)) {\n            throw new errors_1.InvalidArgumentError(\"Feedback issue must be one of: \" + Object.values(Connection.FeedbackIssue));\n        }\n        return this._publisher.info('feedback', 'received', {\n            issue_name: issue,\n            quality_score: score,\n        }, this, true);\n    };\n    Connection.prototype.reject = function (handler) {\n        if (typeof handler === 'function') {\n            this._addHandler('reject', handler);\n            return;\n        }\n        if (this._status !== Connection.State.Pending) {\n            return;\n        }\n        this.pstream.reject(this.parameters.CallSid);\n        this._status = Connection.State.Closed;\n        this.emit('reject');\n        this.mediaStream.reject(this.parameters.CallSid);\n        this._publisher.info('connection', 'rejected-by-local', null, this);\n    };\n    /**\n     * Send a string of digits.\n     * @param digits\n     */\n    Connection.prototype.sendDigits = function (digits) {\n        if (digits.match(/[^0-9*#w]/)) {\n            throw new errors_1.InvalidArgumentError('Illegal character passed into sendDigits');\n        }\n        var sequence = [];\n        digits.split('').forEach(function (digit) {\n            var dtmf = (digit !== 'w') ? \"dtmf\" + digit : '';\n            if (dtmf === 'dtmf*') {\n                dtmf = 'dtmfs';\n            }\n            if (dtmf === 'dtmf#') {\n                dtmf = 'dtmfh';\n            }\n            sequence.push(dtmf);\n        });\n        // Binds soundCache to be used in recursion until all digits have been played.\n        (function playNextDigit(soundCache, dialtonePlayer) {\n            var digit = sequence.shift();\n            if (digit) {\n                if (dialtonePlayer) {\n                    dialtonePlayer.play(digit);\n                }\n                else {\n                    soundCache.get(digit).play();\n                }\n            }\n            if (sequence.length) {\n                setTimeout(playNextDigit.bind(null, soundCache), 200);\n            }\n        })(this._soundcache, this.options.dialtonePlayer);\n        var dtmfSender = this.mediaStream.getOrCreateDTMFSender();\n        function insertDTMF(dtmfs) {\n            if (!dtmfs.length) {\n                return;\n            }\n            var dtmf = dtmfs.shift();\n            if (dtmf && dtmf.length) {\n                dtmfSender.insertDTMF(dtmf, DTMF_TONE_DURATION, DTMF_INTER_TONE_GAP);\n            }\n            setTimeout(insertDTMF.bind(null, dtmfs), DTMF_PAUSE_DURATION);\n        }\n        if (dtmfSender) {\n            if (!('canInsertDTMF' in dtmfSender) || dtmfSender.canInsertDTMF) {\n                this._log.info('Sending digits using RTCDTMFSender');\n                // NOTE(mroberts): We can't just map 'w' to ',' since\n                // RTCDTMFSender's pause duration is 2 s and Twilio's is more\n                // like 500 ms. Instead, we will fudge it with setTimeout.\n                insertDTMF(digits.split('w'));\n                return;\n            }\n            this._log.info('RTCDTMFSender cannot insert DTMF');\n        }\n        // send pstream message to send DTMF\n        this._log.info('Sending digits over PStream');\n        if (this.pstream !== null && this.pstream.status !== 'disconnected') {\n            this.pstream.dtmf(this.parameters.CallSid, digits);\n        }\n        else {\n            var error = {\n                code: 31000,\n                connection: this,\n                message: 'Could not send DTMF: Signaling channel is disconnected',\n            };\n            this.emit('error', error);\n        }\n    };\n    /**\n     * Get the current {@link Connection} status.\n     */\n    Connection.prototype.status = function () {\n        return this._status;\n    };\n    /**\n     * @deprecated - Unmute the {@link Connection}.\n     */\n    Connection.prototype.unmute = function () {\n        this._log.warn('.unmute() is deprecated. Please use .mute(false) to unmute a call instead.');\n        this.mute(false);\n    };\n    /**\n     * @deprecated - Set a handler for the {@link volumeEvent}\n     * @param handler\n     */\n    Connection.prototype.volume = function (handler) {\n        if (!window || (!window.AudioContext && !window.webkitAudioContext)) {\n            this._log.warn('This browser does not support Connection.volume');\n        }\n        this._addHandler('volume', handler);\n    };\n    /**\n     * Add a handler for an EventEmitter and emit a deprecation warning on first call.\n     * @param eventName - Name of the event\n     * @param handler - A handler to call when the event is emitted\n     */\n    Connection.prototype._addHandler = function (eventName, handler) {\n        if (!hasBeenWarnedHandlers) {\n            this._log.warn(\"Connection callback handlers (accept, cancel, disconnect, error, ignore, mute, reject,\\n        volume) have been deprecated and will be removed in the next breaking release. Instead, the EventEmitter         interface can be used to set event listeners. Example: connection.on('\" + eventName + \"', handler)\");\n            hasBeenWarnedHandlers = true;\n        }\n        this.addListener(eventName, handler);\n        return this;\n    };\n    /**\n     * Check the volume passed, emitting a warning if one way audio is detected or cleared.\n     * @param currentVolume - The current volume for this direction\n     * @param streakFieldName - The name of the field on the {@link Connection} object that tracks how many times the\n     *   current value has been repeated consecutively.\n     * @param lastValueFieldName - The name of the field on the {@link Connection} object that tracks the most recent\n     *   volume for this direction\n     * @param direction - The directionality of this audio track, either 'input' or 'output'\n     * @returns The current streak; how many times in a row the same value has been polled.\n     */\n    Connection.prototype._checkVolume = function (currentVolume, currentStreak, lastValue, direction) {\n        var wasWarningRaised = currentStreak >= 10;\n        var newStreak = 0;\n        if (lastValue === currentVolume) {\n            newStreak = currentStreak;\n        }\n        if (newStreak >= 10) {\n            this._emitWarning('audio-level-', \"constant-audio-\" + direction + \"-level\", 10, newStreak, false);\n        }\n        else if (wasWarningRaised) {\n            this._emitWarning('audio-level-', \"constant-audio-\" + direction + \"-level\", 10, newStreak, true);\n        }\n        return newStreak;\n    };\n    /**\n     * Clean up event listeners.\n     */\n    Connection.prototype._cleanupEventListeners = function () {\n        var _this = this;\n        var cleanup = function () {\n            if (!_this.pstream) {\n                return;\n            }\n            _this.pstream.removeListener('answer', _this._onAnswer);\n            _this.pstream.removeListener('cancel', _this._onCancel);\n            _this.pstream.removeListener('hangup', _this._onHangup);\n            _this.pstream.removeListener('ringing', _this._onRinging);\n            _this.pstream.removeListener('transportClose', _this._onTransportClose);\n        };\n        // This is kind of a hack, but it lets us avoid rewriting more code.\n        // Basically, there's a sequencing problem with the way PeerConnection raises\n        // the\n        //\n        //   Cannot establish connection. Client is disconnected\n        //\n        // error in Connection#accept. It calls PeerConnection#onerror, which emits\n        // the error event on Connection. An error handler on Connection then calls\n        // cleanupEventListeners, but then control returns to Connection#accept. It's\n        // at this point that we add a listener for the answer event that never gets\n        // removed. setTimeout will allow us to rerun cleanup again, _after_\n        // Connection#accept returns.\n        cleanup();\n        setTimeout(cleanup, 0);\n    };\n    /**\n     * Create the payload wrapper for a batch of metrics to be sent to Insights.\n     */\n    Connection.prototype._createMetricPayload = function () {\n        var payload = {\n            call_sid: this.parameters.CallSid,\n            dscp: !!this.options.dscp,\n            sdk_version: C.RELEASE_VERSION,\n            selected_region: this.options.selectedRegion,\n        };\n        if (this.options.gateway) {\n            payload.gateway = this.options.gateway;\n        }\n        if (this.options.region) {\n            payload.region = this.options.region;\n        }\n        payload.direction = this._direction;\n        return payload;\n    };\n    /**\n     * Disconnect the {@link Connection}.\n     * @param message - A message explaining why the {@link Connection} is being disconnected.\n     * @param wasRemote - Whether the disconnect was triggered locally or remotely.\n     */\n    Connection.prototype._disconnect = function (message, wasRemote) {\n        message = typeof message === 'string' ? message : null;\n        if (this._status !== Connection.State.Open\n            && this._status !== Connection.State.Connecting\n            && this._status !== Connection.State.Reconnecting\n            && this._status !== Connection.State.Ringing) {\n            return;\n        }\n        this._log.info('Disconnecting...');\n        // send pstream hangup message\n        if (this.pstream !== null && this.pstream.status !== 'disconnected' && this.sendHangup) {\n            var callsid = this.parameters.CallSid || this.outboundConnectionId;\n            if (callsid) {\n                this.pstream.hangup(callsid, message);\n            }\n        }\n        this._cleanupEventListeners();\n        this.mediaStream.close();\n        if (!wasRemote) {\n            this._publisher.info('connection', 'disconnected-by-local', null, this);\n        }\n    };\n    /**\n     * Transition to {@link ConnectionStatus.Open} if criteria is met.\n     */\n    Connection.prototype._maybeTransitionToOpen = function () {\n        if (this.mediaStream && this.mediaStream.status === 'open' && this._isAnswered) {\n            this._status = Connection.State.Open;\n            this.emit('accept', this);\n        }\n    };\n    /**\n     * Post an event to Endpoint Analytics indicating that the end user\n     *   has ignored a request for feedback.\n     */\n    Connection.prototype._postFeedbackDeclined = function () {\n        return this._publisher.info('feedback', 'received-none', null, this, true);\n    };\n    /**\n     * Publish the current set of queued metrics samples to Insights.\n     */\n    Connection.prototype._publishMetrics = function () {\n        var _this = this;\n        if (this._metricsSamples.length === 0) {\n            return;\n        }\n        this._publisher.postMetrics('quality-metrics-samples', 'metrics-sample', this._metricsSamples.splice(0), this._createMetricPayload(), this).catch(function (e) {\n            _this._log.warn('Unable to post metrics to Insights. Received error:', e);\n        });\n    };\n    /**\n     * Set the CallSid\n     * @param payload\n     */\n    Connection.prototype._setCallSid = function (payload) {\n        var callSid = payload.callsid;\n        if (!callSid) {\n            return;\n        }\n        this.parameters.CallSid = callSid;\n        this.mediaStream.callSid = callSid;\n    };\n    /**\n     * String representation of the {@link Connection} class.\n     * @private\n     */\n    Connection.toString = function () { return '[Twilio.Connection class]'; };\n    return Connection;\n}(events_1.EventEmitter));\n(function (Connection) {\n    /**\n     * Possible states of the {@link Connection}.\n     */\n    var State;\n    (function (State) {\n        State[\"Closed\"] = \"closed\";\n        State[\"Connecting\"] = \"connecting\";\n        State[\"Open\"] = \"open\";\n        State[\"Pending\"] = \"pending\";\n        State[\"Reconnecting\"] = \"reconnecting\";\n        State[\"Ringing\"] = \"ringing\";\n    })(State = Connection.State || (Connection.State = {}));\n    /**\n     * Different issues that may have been experienced during a call, that can be\n     * reported to Twilio Insights via {@link Connection}.postFeedback().\n     */\n    var FeedbackIssue;\n    (function (FeedbackIssue) {\n        FeedbackIssue[\"AudioLatency\"] = \"audio-latency\";\n        FeedbackIssue[\"ChoppyAudio\"] = \"choppy-audio\";\n        FeedbackIssue[\"DroppedCall\"] = \"dropped-call\";\n        FeedbackIssue[\"Echo\"] = \"echo\";\n        FeedbackIssue[\"NoisyCall\"] = \"noisy-call\";\n        FeedbackIssue[\"OneWayAudio\"] = \"one-way-audio\";\n    })(FeedbackIssue = Connection.FeedbackIssue || (Connection.FeedbackIssue = {}));\n    /**\n     * A rating of call quality experienced during a call, to be reported to Twilio Insights\n     * via {@link Connection}.postFeedback().\n     */\n    var FeedbackScore;\n    (function (FeedbackScore) {\n        FeedbackScore[FeedbackScore[\"One\"] = 1] = \"One\";\n        FeedbackScore[FeedbackScore[\"Two\"] = 2] = \"Two\";\n        FeedbackScore[FeedbackScore[\"Three\"] = 3] = \"Three\";\n        FeedbackScore[FeedbackScore[\"Four\"] = 4] = \"Four\";\n        FeedbackScore[FeedbackScore[\"Five\"] = 5] = \"Five\";\n    })(FeedbackScore = Connection.FeedbackScore || (Connection.FeedbackScore = {}));\n    /**\n     * The directionality of the {@link Connection}, whether incoming or outgoing.\n     */\n    var CallDirection;\n    (function (CallDirection) {\n        CallDirection[\"Incoming\"] = \"INCOMING\";\n        CallDirection[\"Outgoing\"] = \"OUTGOING\";\n    })(CallDirection = Connection.CallDirection || (Connection.CallDirection = {}));\n    /**\n     * Valid audio codecs to use for the media connection.\n     */\n    var Codec;\n    (function (Codec) {\n        Codec[\"Opus\"] = \"opus\";\n        Codec[\"PCMU\"] = \"pcmu\";\n    })(Codec = Connection.Codec || (Connection.Codec = {}));\n    /**\n     * Possible ICE Gathering failures\n     */\n    var IceGatheringFailureReason;\n    (function (IceGatheringFailureReason) {\n        IceGatheringFailureReason[\"None\"] = \"none\";\n        IceGatheringFailureReason[\"Timeout\"] = \"timeout\";\n    })(IceGatheringFailureReason = Connection.IceGatheringFailureReason || (Connection.IceGatheringFailureReason = {}));\n    /**\n     * Possible media failures\n     */\n    var MediaFailure;\n    (function (MediaFailure) {\n        MediaFailure[\"ConnectionDisconnected\"] = \"ConnectionDisconnected\";\n        MediaFailure[\"ConnectionFailed\"] = \"ConnectionFailed\";\n        MediaFailure[\"IceGatheringFailed\"] = \"IceGatheringFailed\";\n        MediaFailure[\"LowBytes\"] = \"LowBytes\";\n    })(MediaFailure = Connection.MediaFailure || (Connection.MediaFailure = {}));\n})(Connection || (Connection = {}));\nfunction generateTempCallSid() {\n    return 'TJSxxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        /* tslint:disable:no-bitwise */\n        var r = Math.random() * 16 | 0;\n        var v = c === 'x' ? r : (r & 0x3 | 0x8);\n        /* tslint:enable:no-bitwise */\n        return v.toString(16);\n    });\n}\nexports.default = Connection;\n//# sourceMappingURL=connection.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/connection.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/constants.js":
/*!************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/constants.js ***!
  \************************************************************/
/***/ ((module) => {

eval("/**\n * This file is generated on build. To make changes, see /templates/constants.js\n */\nvar PACKAGE_NAME = 'twilio-client';\nvar RELEASE_VERSION = '1.14.0';\nvar SOUNDS_BASE_URL = 'https://sdk.twilio.com/js/client/sounds/releases/1.0.0';\nmodule.exports.COWBELL_AUDIO_URL = SOUNDS_BASE_URL + \"/cowbell.mp3?cache=\" + RELEASE_VERSION;\nmodule.exports.ECHO_TEST_DURATION = 20000;\nmodule.exports.PACKAGE_NAME = PACKAGE_NAME;\nmodule.exports.RELEASE_VERSION = RELEASE_VERSION;\nmodule.exports.SOUNDS_BASE_URL = SOUNDS_BASE_URL;\n/**\n * All errors we plan to use need to be defined here.\n */\nmodule.exports.USED_ERRORS = [\n    'AuthorizationErrors.AccessTokenExpired',\n    'AuthorizationErrors.AccessTokenInvalid',\n    'AuthorizationErrors.AuthenticationFailed',\n    'ClientErrors.BadRequest',\n    'GeneralErrors.ConnectionError',\n    'GeneralErrors.TransportError',\n    'GeneralErrors.UnknownError',\n    'MediaErrors.ClientLocalDescFailed',\n    'MediaErrors.ClientRemoteDescFailed',\n    'MediaErrors.ConnectionError',\n    'SignalingErrors.ConnectionDisconnected',\n    'SignalingErrors.ConnectionError',\n];\n//# sourceMappingURL=constants.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/constants.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/deferred.js":
/*!***********************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/deferred.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * Deferred Promise\n */\nvar Deferred = /** @class */ (function () {\n    /**\n     * @constructor\n     */\n    function Deferred() {\n        var _this = this;\n        this._promise = new Promise(function (resolve, reject) {\n            _this._resolve = resolve;\n            _this._reject = reject;\n        });\n    }\n    Object.defineProperty(Deferred.prototype, \"promise\", {\n        /**\n         * @returns The {@link Deferred} Promise\n         */\n        get: function () {\n            return this._promise;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Rejects this promise\n     */\n    Deferred.prototype.reject = function (reason) {\n        this._reject(reason);\n    };\n    /**\n     * Resolves this promise\n     */\n    Deferred.prototype.resolve = function (value) {\n        this._resolve(value);\n    };\n    return Deferred;\n}());\nexports.default = Deferred;\n//# sourceMappingURL=deferred.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/deferred.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/device.js":
/*!*********************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/device.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @packageDocumentation\n * @module Voice\n * @preferred\n * @publicapi\n */\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar audiohelper_1 = __webpack_require__(/*! ./audiohelper */ \"./node_modules/twilio-client/es5/twilio/audiohelper.js\");\nvar connection_1 = __webpack_require__(/*! ./connection */ \"./node_modules/twilio-client/es5/twilio/connection.js\");\nvar dialtonePlayer_1 = __webpack_require__(/*! ./dialtonePlayer */ \"./node_modules/twilio-client/es5/twilio/dialtonePlayer.js\");\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\");\nvar log_1 = __webpack_require__(/*! ./log */ \"./node_modules/twilio-client/es5/twilio/log.js\");\nvar preflight_1 = __webpack_require__(/*! ./preflight/preflight */ \"./node_modules/twilio-client/es5/twilio/preflight/preflight.js\");\nvar regions_1 = __webpack_require__(/*! ./regions */ \"./node_modules/twilio-client/es5/twilio/regions.js\");\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/twilio-client/es5/twilio/util.js\");\nvar C = __webpack_require__(/*! ./constants */ \"./node_modules/twilio-client/es5/twilio/constants.js\");\nvar Publisher = __webpack_require__(/*! ./eventpublisher */ \"./node_modules/twilio-client/es5/twilio/eventpublisher.js\");\nvar PStream = __webpack_require__(/*! ./pstream */ \"./node_modules/twilio-client/es5/twilio/pstream.js\");\nvar rtc = __webpack_require__(/*! ./rtc */ \"./node_modules/twilio-client/es5/twilio/rtc/index.js\");\nvar getUserMedia = __webpack_require__(/*! ./rtc/getusermedia */ \"./node_modules/twilio-client/es5/twilio/rtc/getusermedia.js\");\nvar Sound = __webpack_require__(/*! ./sound */ \"./node_modules/twilio-client/es5/twilio/sound.js\");\nvar REGISTRATION_INTERVAL = 30000;\nvar RINGTONE_PLAY_TIMEOUT = 2000;\nvar hasBeenWarnedHandlers = false;\nvar hasBeenWarnedSounds = false;\n/**\n * Twilio Device. Allows registration for incoming calls, and placing outgoing calls.\n * @publicapi\n */\nvar Device = /** @class */ (function (_super) {\n    __extends(Device, _super);\n    function Device(token, options) {\n        var _a;\n        var _this = _super.call(this) || this;\n        /**\n         * The AudioHelper instance associated with this {@link Device}.\n         */\n        _this.audio = null;\n        /**\n         * An array of {@link Connection}s. Though only one can be active, multiple may exist when there\n         * are multiple incoming, unanswered {@link Connection}s.\n         */\n        _this.connections = [];\n        /**\n         * Whether or not {@link Device.setup} has been called.\n         */\n        _this.isInitialized = false;\n        /**\n         * Methods to enable/disable each sound. Empty if the {@link Device} has not\n         * yet been set up.\n         */\n        _this.sounds = {};\n        /**\n         * The JWT string currently being used to authenticate this {@link Device}.\n         */\n        _this.token = null;\n        /**\n         * The currently active {@link Connection}, if there is one.\n         */\n        _this._activeConnection = null;\n        /**\n         * The list of chunder URIs that will be passed to PStream\n         */\n        _this._chunderURIs = [];\n        /**\n         * An audio input MediaStream to pass to new {@link Connection} instances.\n         */\n        _this._connectionInputStream = null;\n        /**\n         * An array of {@link Device} IDs to be used to play sounds through, to be passed to\n         * new {@link Connection} instances.\n         */\n        _this._connectionSinkIds = ['default'];\n        /**\n         * The name of the edge the {@link Device} is connected to.\n         */\n        _this._edge = null;\n        /**\n         * Whether each sound is enabled.\n         */\n        _this._enabledSounds = (_a = {},\n            _a[Device.SoundName.Disconnect] = true,\n            _a[Device.SoundName.Incoming] = true,\n            _a[Device.SoundName.Outgoing] = true,\n            _a);\n        /**\n         * An instance of Logger to use.\n         */\n        _this._log = log_1.default.getInstance();\n        /**\n         * An Insights Event Publisher.\n         */\n        _this._publisher = null;\n        /**\n         * The region the {@link Device} is connected to.\n         */\n        _this._region = null;\n        /**\n         * The current status of the {@link Device}.\n         */\n        _this._status = Device.Status.Offline;\n        /**\n         * Value of 'audio' determines whether we should be registered for incoming calls.\n         */\n        _this.mediaPresence = { audio: true };\n        /**\n         * The options passed to {@link Device} constructor or Device.setup.\n         */\n        _this.options = {\n            allowIncomingWhileBusy: false,\n            audioConstraints: true,\n            closeProtection: false,\n            codecPreferences: [connection_1.default.Codec.PCMU, connection_1.default.Codec.Opus],\n            connectionFactory: connection_1.default,\n            debug: false,\n            dscp: true,\n            enableIceRestart: false,\n            eventgw: 'eventgw.twilio.com',\n            forceAggressiveIceNomination: false,\n            iceServers: [],\n            noRegister: false,\n            pStreamFactory: PStream,\n            preflight: false,\n            rtcConstraints: {},\n            soundFactory: Sound,\n            sounds: {},\n            warnings: true,\n        };\n        /**\n         * A timeout ID for a setTimeout schedule to re-register the {@link Device}.\n         */\n        _this.regTimer = null;\n        /**\n         * A Map of Sounds to play.\n         */\n        _this.soundcache = new Map();\n        /**\n         * The Signaling stream.\n         */\n        _this.stream = null;\n        /**\n         * Destroy the {@link Device}, freeing references to be garbage collected.\n         */\n        _this.destroy = function () {\n            _this._disconnectAll();\n            _this._stopRegistrationTimer();\n            if (_this.audio) {\n                _this.audio._unbind();\n            }\n            if (_this.stream) {\n                _this.stream.destroy();\n                _this.stream = null;\n            }\n            if (_this._networkInformation && typeof _this._networkInformation.removeEventListener === 'function') {\n                _this._networkInformation.removeEventListener('change', _this._publishNetworkChange);\n            }\n            if (typeof window !== 'undefined' && window.removeEventListener) {\n                window.removeEventListener('beforeunload', _this._confirmClose);\n                window.removeEventListener('unload', _this.destroy);\n                window.removeEventListener('pagehide', _this.destroy);\n            }\n        };\n        /**\n         * Called on window's beforeunload event if closeProtection is enabled,\n         * preventing users from accidentally navigating away from an active call.\n         * @param event\n         */\n        _this._confirmClose = function (event) {\n            if (!_this._activeConnection) {\n                return '';\n            }\n            var closeProtection = _this.options.closeProtection || false;\n            var confirmationMsg = typeof closeProtection !== 'string'\n                ? 'A call is currently in-progress. Leaving or reloading this page will end the call.'\n                : closeProtection;\n            (event || window.event).returnValue = confirmationMsg;\n            return confirmationMsg;\n        };\n        /**\n         * Create the default Insights payload\n         * @param [connection]\n         */\n        _this._createDefaultPayload = function (connection) {\n            var payload = {\n                aggressive_nomination: _this.options.forceAggressiveIceNomination,\n                browser_extension: _this._isBrowserExtension,\n                dscp: !!_this.options.dscp,\n                ice_restart_enabled: _this.options.enableIceRestart,\n                platform: rtc.getMediaEngine(),\n                sdk_version: C.RELEASE_VERSION,\n            };\n            function setIfDefined(propertyName, value) {\n                if (value) {\n                    payload[propertyName] = value;\n                }\n            }\n            if (connection) {\n                var callSid = connection.parameters.CallSid;\n                setIfDefined('call_sid', /^TJ/.test(callSid) ? undefined : callSid);\n                setIfDefined('temp_call_sid', connection.outboundConnectionId);\n                setIfDefined('audio_codec', connection.codec);\n                payload.direction = connection.direction;\n            }\n            setIfDefined('gateway', _this.stream && _this.stream.gateway);\n            setIfDefined('selected_region', _this.options.region);\n            setIfDefined('region', _this.stream && _this.stream.region);\n            return payload;\n        };\n        /**\n         * Disconnect all {@link Connection}s.\n         */\n        _this._disconnectAll = function () {\n            var connections = _this.connections.splice(0);\n            connections.forEach(function (conn) { return conn.disconnect(); });\n            if (_this._activeConnection) {\n                _this._activeConnection.disconnect();\n            }\n        };\n        /**\n         * Called when a 'close' event is received from the signaling stream.\n         */\n        _this._onSignalingClose = function () {\n            _this.stream = null;\n        };\n        /**\n         * Called when a 'connected' event is received from the signaling stream.\n         */\n        _this._onSignalingConnected = function (payload) {\n            var region = regions_1.getRegionShortcode(payload.region);\n            _this._edge = regions_1.regionToEdge[region] || payload.region;\n            _this._region = region || payload.region;\n            _this._sendPresence();\n        };\n        /**\n         * Called when an 'error' event is received from the signaling stream.\n         */\n        _this._onSignalingError = function (payload) {\n            if (!payload.error) {\n                return;\n            }\n            var error = __assign({}, payload.error);\n            var sid = payload.callsid;\n            if (sid) {\n                error.connection = _this._findConnection(sid);\n            }\n            if (error.code === 31201) {\n                error.twilioError = new errors_1.AuthorizationErrors.AuthenticationFailed();\n            }\n            else if (error.code === 31204) {\n                error.twilioError = new errors_1.AuthorizationErrors.AccessTokenInvalid();\n            }\n            else if (error.code === 31205) {\n                // Stop trying to register presence after token expires\n                _this._stopRegistrationTimer();\n                error.twilioError = new errors_1.AuthorizationErrors.AccessTokenExpired();\n            }\n            else if (!error.twilioError) {\n                error.twilioError = new errors_1.GeneralErrors.UnknownError();\n            }\n            _this._log.info('Received error: ', error);\n            _this.emit('error', error);\n        };\n        /**\n         * Called when an 'invite' event is received from the signaling stream.\n         */\n        _this._onSignalingInvite = function (payload) {\n            var wasBusy = !!_this._activeConnection;\n            if (wasBusy && !_this.options.allowIncomingWhileBusy) {\n                _this._log.info('Device busy; ignoring incoming invite');\n                return;\n            }\n            if (!payload.callsid || !payload.sdp) {\n                _this.emit('error', { message: 'Malformed invite from gateway', twilioError: new errors_1.ClientErrors.BadRequest() });\n                return;\n            }\n            var callParameters = payload.parameters || {};\n            callParameters.CallSid = callParameters.CallSid || payload.callsid;\n            var customParameters = Object.assign({}, util_1.queryToJson(callParameters.Params));\n            var connection = _this._makeConnection(customParameters, {\n                callParameters: callParameters,\n                offerSdp: payload.sdp,\n            });\n            _this.connections.push(connection);\n            connection.once('accept', function () {\n                _this.soundcache.get(Device.SoundName.Incoming).stop();\n                _this._publishNetworkChange();\n            });\n            var play = (_this._enabledSounds.incoming && !wasBusy)\n                ? function () { return _this.soundcache.get(Device.SoundName.Incoming).play(); }\n                : function () { return Promise.resolve(); };\n            _this._showIncomingConnection(connection, play);\n        };\n        /**\n         * Called when an 'offline' event is received from the signaling stream.\n         */\n        _this._onSignalingOffline = function () {\n            _this._log.info('Stream is offline');\n            _this._status = Device.Status.Offline;\n            _this._edge = null;\n            _this._region = null;\n            _this.emit('offline', _this);\n        };\n        /**\n         * Called when a 'ready' event is received from the signaling stream.\n         */\n        _this._onSignalingReady = function () {\n            _this._log.info('Stream is ready');\n            _this._status = Device.Status.Ready;\n            _this.emit('ready', _this);\n        };\n        /**\n         * Publish a NetworkInformation#change event to Insights if there's an active {@link Connection}.\n         */\n        _this._publishNetworkChange = function () {\n            if (!_this._activeConnection) {\n                return;\n            }\n            if (_this._networkInformation) {\n                _this._publisher.info('network-information', 'network-change', {\n                    connection_type: _this._networkInformation.type,\n                    downlink: _this._networkInformation.downlink,\n                    downlinkMax: _this._networkInformation.downlinkMax,\n                    effective_type: _this._networkInformation.effectiveType,\n                    rtt: _this._networkInformation.rtt,\n                }, _this._activeConnection);\n            }\n        };\n        /**\n         * Update the input stream being used for calls so that any current call and all future calls\n         * will use the new input stream.\n         * @param inputStream\n         */\n        _this._updateInputStream = function (inputStream) {\n            var connection = _this._activeConnection;\n            if (connection && !inputStream) {\n                return Promise.reject(new errors_1.InvalidStateError('Cannot unset input device while a call is in progress.'));\n            }\n            _this._connectionInputStream = inputStream;\n            return connection\n                ? connection._setInputTracksFromStream(inputStream)\n                : Promise.resolve();\n        };\n        /**\n         * Update the device IDs of output devices being used to play sounds through.\n         * @param type - Whether to update ringtone or speaker sounds\n         * @param sinkIds - An array of device IDs\n         */\n        _this._updateSinkIds = function (type, sinkIds) {\n            var promise = type === 'ringtone'\n                ? _this._updateRingtoneSinkIds(sinkIds)\n                : _this._updateSpeakerSinkIds(sinkIds);\n            return promise.then(function () {\n                _this._publisher.info('audio', type + \"-devices-set\", {\n                    audio_device_ids: sinkIds,\n                }, _this._activeConnection);\n            }, function (error) {\n                _this._publisher.error('audio', type + \"-devices-set-failed\", {\n                    audio_device_ids: sinkIds,\n                    message: error.message,\n                }, _this._activeConnection);\n                throw error;\n            });\n        };\n        if (window) {\n            var root = window;\n            var browser = root.msBrowser || root.browser || root.chrome;\n            _this._isBrowserExtension = (!!browser && !!browser.runtime && !!browser.runtime.id)\n                || (!!root.safari && !!root.safari.extension);\n        }\n        if (_this._isBrowserExtension) {\n            _this._log.info('Running as browser extension.');\n        }\n        if (navigator) {\n            var n = navigator;\n            _this._networkInformation = n.connection\n                || n.mozConnection\n                || n.webkitConnection;\n        }\n        if (token) {\n            _this.setup(token, options);\n        }\n        else if (options) {\n            throw new errors_1.InvalidArgumentError('Cannot construct a Device with options but without a token');\n        }\n        return _this;\n    }\n    Object.defineProperty(Device, \"audioContext\", {\n        /**\n         * The AudioContext to be used by {@link Device} instances.\n         * @private\n         */\n        get: function () {\n            return Device._audioContext;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device, \"extension\", {\n        /**\n         * Which sound file extension is supported.\n         * @private\n         */\n        get: function () {\n            // NOTE(mroberts): Node workaround.\n            var a = typeof document !== 'undefined'\n                ? document.createElement('audio') : { canPlayType: false };\n            var canPlayMp3;\n            try {\n                canPlayMp3 = a.canPlayType && !!a.canPlayType('audio/mpeg').replace(/no/, '');\n            }\n            catch (e) {\n                canPlayMp3 = false;\n            }\n            var canPlayVorbis;\n            try {\n                canPlayVorbis = a.canPlayType && !!a.canPlayType('audio/ogg;codecs=\\'vorbis\\'').replace(/no/, '');\n            }\n            catch (e) {\n                canPlayVorbis = false;\n            }\n            return (canPlayVorbis && !canPlayMp3) ? 'ogg' : 'mp3';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device, \"isSupported\", {\n        /**\n         * Whether or not this SDK is supported by the current browser.\n         */\n        get: function () { return rtc.enabled(); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Device, \"packageName\", {\n        /**\n         * Package name of the SDK.\n         */\n        get: function () { return C.PACKAGE_NAME; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Run some tests to identify issues, if any, prohibiting successful calling.\n     * @param token - A Twilio JWT token string\n     * @param options\n     */\n    Device.runPreflight = function (token, options) {\n        return new preflight_1.PreflightTest(token, __assign({ audioContext: Device._getOrCreateAudioContext() }, options));\n    };\n    /**\n     * String representation of {@link Device} class.\n     * @private\n     */\n    Device.toString = function () {\n        return '[Twilio.Device class]';\n    };\n    Object.defineProperty(Device, \"version\", {\n        /**\n         * Current SDK version.\n         */\n        get: function () { return C.RELEASE_VERSION; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Initializes the AudioContext instance shared across the Client SDK,\n     * or returns the existing instance if one has already been initialized.\n     */\n    Device._getOrCreateAudioContext = function () {\n        if (!Device._audioContext) {\n            if (typeof AudioContext !== 'undefined') {\n                Device._audioContext = new AudioContext();\n            }\n            else if (typeof webkitAudioContext !== 'undefined') {\n                Device._audioContext = new webkitAudioContext();\n            }\n        }\n        return Device._audioContext;\n    };\n    /**\n     * Return the active {@link Connection}. Null or undefined for backward compatibility.\n     */\n    Device.prototype.activeConnection = function () {\n        if (!this.isInitialized) {\n            return null;\n        }\n        // @rrowland This should only return activeConnection, but customers have built around this\n        // broken behavior and in order to not break their apps we are including this until\n        // the next big release.\n        return this._activeConnection || this.connections[0];\n    };\n    /**\n     * @deprecated Set a handler for the cancel event.\n     * @param handler\n     */\n    Device.prototype.cancel = function (handler) {\n        return this._addHandler(Device.EventName.Cancel, handler);\n    };\n    Device.prototype.connect = function (paramsOrHandler, audioConstraints, rtcConfiguration) {\n        if (typeof paramsOrHandler === 'function') {\n            this._addHandler(Device.EventName.Connect, paramsOrHandler);\n            return null;\n        }\n        this._throwUnlessSetup('connect');\n        if (this._activeConnection) {\n            throw new errors_1.InvalidStateError('A Connection is already active');\n        }\n        var params = paramsOrHandler || {};\n        audioConstraints = audioConstraints || this.options && this.options.audioConstraints || {};\n        rtcConfiguration = rtcConfiguration || this.options.rtcConfiguration;\n        var connection = this._activeConnection = this._makeConnection(params, { rtcConfiguration: rtcConfiguration });\n        // Make sure any incoming connections are ignored\n        this.connections.splice(0).forEach(function (conn) { return conn.ignore(); });\n        // Stop the incoming sound if it's playing\n        this.soundcache.get(Device.SoundName.Incoming).stop();\n        connection.accept(audioConstraints);\n        this._publishNetworkChange();\n        return connection;\n    };\n    /**\n     * Set a handler for the disconnect event.\n     * @deprecated Use {@link Device.on}.\n     * @param handler\n     */\n    Device.prototype.disconnect = function (handler) {\n        return this._addHandler(Device.EventName.Disconnect, handler);\n    };\n    /**\n     * Disconnect all {@link Connection}s.\n     */\n    Device.prototype.disconnectAll = function () {\n        this._throwUnlessSetup('disconnectAll');\n        this._disconnectAll();\n    };\n    Object.defineProperty(Device.prototype, \"edge\", {\n        /**\n         * Returns the {@link Edge} value the {@link Device} is currently connected\n         * to. The value will be `null` when the {@link Device} is offline.\n         */\n        get: function () {\n            return this._edge;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Set a handler for the error event.\n     * @deprecated Use {@link Device.on}.\n     * @param handler\n     */\n    Device.prototype.error = function (handler) {\n        return this._addHandler(Device.EventName.Error, handler);\n    };\n    /**\n     * Set a handler for the incoming event.\n     * @deprecated Use {@link Device.on}.\n     * @param handler\n     */\n    Device.prototype.incoming = function (handler) {\n        return this._addHandler(Device.EventName.Incoming, handler);\n    };\n    /**\n     * Set a handler for the offline event.\n     * @deprecated Use {@link Device.on}.\n     * @param handler\n     */\n    Device.prototype.offline = function (handler) {\n        return this._addHandler(Device.EventName.Offline, handler);\n    };\n    /**\n     * Set a handler for the ready event.\n     * @deprecated Use {@link Device.on}.\n     * @param handler\n     */\n    Device.prototype.ready = function (handler) {\n        return this._addHandler(Device.EventName.Ready, handler);\n    };\n    /**\n     * Get the {@link Region} string the {@link Device} is currently connected to, or 'offline'\n     * if not connected.\n     */\n    Device.prototype.region = function () {\n        this._log.warn('`Device.region` is deprecated and will be removed in the next major ' +\n            'release. Please use `Device.edge` instead.');\n        this._throwUnlessSetup('region');\n        return typeof this._region === 'string' ? this._region : 'offline';\n    };\n    /**\n     * Register to receive incoming calls. Does not need to be called unless {@link Device.unregisterPresence}\n     * has been called directly.\n     */\n    Device.prototype.registerPresence = function () {\n        this._throwUnlessSetup('registerPresence');\n        this.mediaPresence.audio = true;\n        this._sendPresence();\n        return this;\n    };\n    /**\n     * Remove an event listener\n     * @param event - The event name to stop listening for\n     * @param listener - The callback to remove\n     */\n    Device.prototype.removeListener = function (event, listener) {\n        events_1.EventEmitter.prototype.removeListener.call(this, event, listener);\n        return this;\n    };\n    /**\n     * Initialize the {@link Device}.\n     * @param token - A Twilio JWT token string granting this {@link Device} access.\n     * @param [options]\n     */\n    Device.prototype.setup = function (token, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (util_1.isLegacyEdge()) {\n            throw new errors_1.NotSupportedError('Microsoft Edge Legacy (https://support.microsoft.com/en-us/help/4533505/what-is-microsoft-edge-legacy) ' +\n                'is deprecated and will not be able to connect to Twilio to make or receive calls after September 1st, 2020. ' +\n                'Please see this documentation for a list of supported browsers ' +\n                'https://www.twilio.com/docs/voice/client/javascript#supported-browsers');\n        }\n        if (!Device.isSupported && !options.ignoreBrowserSupport) {\n            if (window && window.location && window.location.protocol === 'http:') {\n                throw new errors_1.NotSupportedError(\"twilio.js wasn't able to find WebRTC browser support.           This is most likely because this page is served over http rather than https,           which does not support WebRTC in many browsers. Please load this page over https and           try again.\");\n            }\n            throw new errors_1.NotSupportedError(\"twilio.js 1.3+ SDKs require WebRTC browser support.         For more information, see <https://www.twilio.com/docs/api/client/twilio-js>.         If you have any questions about this announcement, please contact         Twilio Support at <help@twilio.com>.\");\n        }\n        if (!token) {\n            throw new errors_1.InvalidArgumentError('Token is required for Device.setup()');\n        }\n        Object.assign(this.options, options);\n        this._log.setDefaultLevel(this.options.debug\n            ? log_1.default.levels.DEBUG\n            : this.options.warnings\n                ? log_1.default.levels.WARN\n                : log_1.default.levels.SILENT);\n        this._chunderURIs = this.options.chunderw\n            ? [\"wss://\" + this.options.chunderw + \"/signal\"]\n            : regions_1.getChunderURIs(this.options.edge, this.options.region, this._log.warn.bind(this._log)).map(function (uri) { return \"wss://\" + uri + \"/signal\"; });\n        if (typeof Device._isUnifiedPlanDefault === 'undefined') {\n            Device._isUnifiedPlanDefault = typeof window !== 'undefined'\n                && typeof RTCPeerConnection !== 'undefined'\n                && typeof RTCRtpTransceiver !== 'undefined'\n                ? util_1.isUnifiedPlanDefault(window, window.navigator, RTCPeerConnection, RTCRtpTransceiver)\n                : false;\n        }\n        Device._getOrCreateAudioContext();\n        if (Device._audioContext && options.fakeLocalDTMF) {\n            if (!Device._dialtonePlayer) {\n                Device._dialtonePlayer = new dialtonePlayer_1.default(Device._audioContext);\n            }\n        }\n        else if (Device._dialtonePlayer) {\n            Device._dialtonePlayer.cleanup();\n            delete Device._dialtonePlayer;\n        }\n        if (this.isInitialized) {\n            this._log.info('Found existing Device; using new token but ignoring options');\n            this.updateToken(token);\n            return this;\n        }\n        this.isInitialized = true;\n        if (this.options.dscp) {\n            this.options.rtcConstraints.optional = [{ googDscp: true }];\n        }\n        var getOrSetSound = function (key, value) {\n            if (!hasBeenWarnedSounds) {\n                _this._log.warn('Device.sounds is deprecated and will be removed in the next breaking ' +\n                    'release. Please use the new functionality available on Device.audio.');\n                hasBeenWarnedSounds = true;\n            }\n            if (typeof value !== 'undefined') {\n                _this._enabledSounds[key] = value;\n            }\n            return _this._enabledSounds[key];\n        };\n        [Device.SoundName.Disconnect, Device.SoundName.Incoming, Device.SoundName.Outgoing]\n            .forEach(function (eventName) {\n            _this.sounds[eventName] = getOrSetSound.bind(null, eventName);\n        });\n        var defaultSounds = {\n            disconnect: { filename: 'disconnect', maxDuration: 3000 },\n            dtmf0: { filename: 'dtmf-0', maxDuration: 1000 },\n            dtmf1: { filename: 'dtmf-1', maxDuration: 1000 },\n            dtmf2: { filename: 'dtmf-2', maxDuration: 1000 },\n            dtmf3: { filename: 'dtmf-3', maxDuration: 1000 },\n            dtmf4: { filename: 'dtmf-4', maxDuration: 1000 },\n            dtmf5: { filename: 'dtmf-5', maxDuration: 1000 },\n            dtmf6: { filename: 'dtmf-6', maxDuration: 1000 },\n            dtmf7: { filename: 'dtmf-7', maxDuration: 1000 },\n            dtmf8: { filename: 'dtmf-8', maxDuration: 1000 },\n            dtmf9: { filename: 'dtmf-9', maxDuration: 1000 },\n            dtmfh: { filename: 'dtmf-hash', maxDuration: 1000 },\n            dtmfs: { filename: 'dtmf-star', maxDuration: 1000 },\n            incoming: { filename: 'incoming', shouldLoop: true },\n            outgoing: { filename: 'outgoing', maxDuration: 3000 },\n        };\n        for (var _i = 0, _a = Object.keys(defaultSounds); _i < _a.length; _i++) {\n            var name_1 = _a[_i];\n            var soundDef = defaultSounds[name_1];\n            var defaultUrl = C.SOUNDS_BASE_URL + \"/\" + soundDef.filename + \".\" + Device.extension\n                + (\"?cache=\" + C.RELEASE_VERSION);\n            var soundUrl = this.options.sounds && this.options.sounds[name_1] || defaultUrl;\n            var sound = new this.options.soundFactory(name_1, soundUrl, {\n                audioContext: this.options.disableAudioContextSounds ? null : Device.audioContext,\n                maxDuration: soundDef.maxDuration,\n                shouldLoop: soundDef.shouldLoop,\n            });\n            this.soundcache.set(name_1, sound);\n        }\n        this._publisher = (this.options.Publisher || Publisher)('twilio-js-sdk', token, {\n            defaultPayload: this._createDefaultPayload,\n            host: this.options.eventgw,\n            metadata: {\n                app_name: this.options.appName,\n                app_version: this.options.appVersion,\n            },\n        });\n        if (this.options.publishEvents === false) {\n            this._publisher.disable();\n        }\n        else {\n            this._publisher.on('error', function (error) {\n                _this._log.warn('Cannot connect to insights.', error);\n            });\n        }\n        if (this._networkInformation && typeof this._networkInformation.addEventListener === 'function') {\n            this._networkInformation.addEventListener('change', this._publishNetworkChange);\n        }\n        this.audio = new (this.options.AudioHelper || audiohelper_1.default)(this._updateSinkIds, this._updateInputStream, getUserMedia, {\n            audioContext: Device.audioContext,\n            enabledSounds: this._enabledSounds,\n        });\n        this.audio.on('deviceChange', function (lostActiveDevices) {\n            var activeConnection = _this._activeConnection;\n            var deviceIds = lostActiveDevices.map(function (device) { return device.deviceId; });\n            _this._publisher.info('audio', 'device-change', {\n                lost_active_device_ids: deviceIds,\n            }, activeConnection);\n            if (activeConnection) {\n                activeConnection.mediaStream._onInputDevicesChanged();\n            }\n        });\n        this.mediaPresence.audio = !this.options.noRegister;\n        this.updateToken(token);\n        // Setup close protection and make sure we clean up ongoing calls on unload.\n        if (typeof window !== 'undefined' && window.addEventListener) {\n            window.addEventListener('unload', this.destroy);\n            window.addEventListener('pagehide', this.destroy);\n            if (this.options.closeProtection) {\n                window.addEventListener('beforeunload', this._confirmClose);\n            }\n        }\n        // (rrowland) This maintains backward compatibility, but we should look at\n        // removing this next breaking change. Any error should be caught by the\n        // customer, and anything that's not a fatal error should not be emitted\n        // via error event.\n        this.on(Device.EventName.Error, function () {\n            if (_this.listenerCount('error') > 1) {\n                return;\n            }\n            _this._log.info('Uncaught error event suppressed.');\n        });\n        return this;\n    };\n    /**\n     * Get the status of this {@link Device} instance\n     */\n    Device.prototype.status = function () {\n        this._throwUnlessSetup('status');\n        return this._activeConnection ? Device.Status.Busy : this._status;\n    };\n    /**\n     * String representation of {@link Device} instance.\n     * @private\n     */\n    Device.prototype.toString = function () {\n        return '[Twilio.Device instance]';\n    };\n    /**\n     * Unregister to receiving incoming calls.\n     */\n    Device.prototype.unregisterPresence = function () {\n        this._throwUnlessSetup('unregisterPresence');\n        this.mediaPresence.audio = false;\n        this._sendPresence();\n        return this;\n    };\n    /**\n     * Update the token and re-register.\n     * @param token - The new token JWT string to register with.\n     */\n    Device.prototype.updateToken = function (token) {\n        this._throwUnlessSetup('updateToken');\n        this.token = token;\n        this.register(token);\n    };\n    /**\n     * Add a handler for an EventEmitter and emit a deprecation warning on first call.\n     * @param eventName - Name of the event\n     * @param handler - A handler to call when the event is emitted\n     */\n    Device.prototype._addHandler = function (eventName, handler) {\n        if (!hasBeenWarnedHandlers) {\n            this._log.warn(\"Device callback handlers (connect, error, offline, incoming, cancel, ready, disconnect)         have been deprecated and will be removed in the next breaking release. Instead, the EventEmitter         interface can be used to set event listeners. Example: device.on('\" + eventName + \"', handler)\");\n            hasBeenWarnedHandlers = true;\n        }\n        this.addListener(eventName, handler);\n        return this;\n    };\n    /**\n     * Calls the emit API such that it is asynchronous.\n     * Only use this internal API if you don't want to break the execution after raising an event.\n     * This prevents the issue where events are not dispatched to all handlers when one of the handlers throws an error.\n     * For example, our connection:accept is not triggered if the handler for device:connect handler throws an error.\n     * As a side effect, we are not able to perform our internal routines such as stopping incoming sounds.\n     * See connection:accept inside _makeConnection where we call emit('connect'). This can throw an error.\n     * See connection:accept inside _onSignalingInvite. This handler won't get called if the error above is thrown.\n     * @private\n     */\n    Device.prototype._asyncEmit = function (event) {\n        var _this = this;\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        setTimeout(function () { return _this.emit.apply(_this, __spreadArrays([event], args)); });\n    };\n    /**\n     * Find a {@link Connection} by its CallSid.\n     * @param callSid\n     */\n    Device.prototype._findConnection = function (callSid) {\n        return this.connections.find(function (conn) { return conn.parameters.CallSid === callSid\n            || conn.outboundConnectionId === callSid; }) || null;\n    };\n    /**\n     * Create a new {@link Connection}.\n     * @param twimlParams - A flat object containing key:value pairs to be sent to the TwiML app.\n     * @param [options] - Options to be used to instantiate the {@link Connection}.\n     */\n    Device.prototype._makeConnection = function (twimlParams, options) {\n        var _this = this;\n        if (typeof Device._isUnifiedPlanDefault === 'undefined') {\n            throw new errors_1.InvalidStateError('Device has not been initialized.');\n        }\n        var config = {\n            audioHelper: this.audio,\n            getUserMedia: getUserMedia,\n            isUnifiedPlanDefault: Device._isUnifiedPlanDefault,\n            pstream: this.stream,\n            publisher: this._publisher,\n            soundcache: this.soundcache,\n        };\n        options = Object.assign({\n            MediaStream: this.options.MediaStream\n                || this.options.mediaStreamFactory\n                || rtc.PeerConnection,\n            audioConstraints: this.options.audioConstraints,\n            beforeAccept: function (conn) {\n                if (!_this._activeConnection || _this._activeConnection === conn) {\n                    return;\n                }\n                _this._activeConnection.disconnect();\n                _this._removeConnection(_this._activeConnection);\n            },\n            codecPreferences: this.options.codecPreferences,\n            dialtonePlayer: Device._dialtonePlayer,\n            dscp: this.options.dscp,\n            enableIceRestart: this.options.enableIceRestart,\n            enableRingingState: this.options.enableRingingState,\n            forceAggressiveIceNomination: this.options.forceAggressiveIceNomination,\n            getInputStream: function () { return _this.options.fileInputStream || _this._connectionInputStream; },\n            getSinkIds: function () { return _this._connectionSinkIds; },\n            maxAverageBitrate: this.options.maxAverageBitrate,\n            preflight: this.options.preflight,\n            rtcConfiguration: this.options.rtcConfiguration || { iceServers: this.options.iceServers },\n            rtcConstraints: this.options.rtcConstraints,\n            shouldPlayDisconnect: function () { return _this._enabledSounds.disconnect; },\n            twimlParams: twimlParams,\n        }, options);\n        var connection = new this.options.connectionFactory(config, options);\n        connection.once('accept', function () {\n            _this._removeConnection(connection);\n            _this._activeConnection = connection;\n            if (_this.audio) {\n                _this.audio._maybeStartPollingVolume();\n            }\n            if (connection.direction === connection_1.default.CallDirection.Outgoing && _this._enabledSounds.outgoing) {\n                _this.soundcache.get(Device.SoundName.Outgoing).play();\n            }\n            var data = { edge: _this._edge || _this._region };\n            var selectedEdge = _this.options.edge;\n            if (selectedEdge) {\n                data['selected_edge'] = Array.isArray(selectedEdge) ? selectedEdge : [selectedEdge];\n            }\n            _this._publisher.info('settings', 'edge', data, connection);\n            _this._asyncEmit('connect', connection);\n        });\n        connection.addListener('error', function (error) {\n            if (connection.status() === 'closed') {\n                _this._removeConnection(connection);\n            }\n            if (_this.audio) {\n                _this.audio._maybeStopPollingVolume();\n            }\n            _this._maybeStopIncomingSound();\n            _this._asyncEmit('error', error);\n        });\n        connection.once('cancel', function () {\n            _this._log.info(\"Canceled: \" + connection.parameters.CallSid);\n            _this._removeConnection(connection);\n            if (_this.audio) {\n                _this.audio._maybeStopPollingVolume();\n            }\n            _this._maybeStopIncomingSound();\n            _this._asyncEmit('cancel', connection);\n        });\n        connection.once('disconnect', function () {\n            if (_this.audio) {\n                _this.audio._maybeStopPollingVolume();\n            }\n            _this._removeConnection(connection);\n            _this._asyncEmit('disconnect', connection);\n        });\n        connection.once('reject', function () {\n            _this._log.info(\"Rejected: \" + connection.parameters.CallSid);\n            if (_this.audio) {\n                _this.audio._maybeStopPollingVolume();\n            }\n            _this._removeConnection(connection);\n            _this._maybeStopIncomingSound();\n        });\n        connection.once('transportClose', function () {\n            if (connection.status() !== connection_1.default.State.Pending) {\n                return;\n            }\n            if (_this.audio) {\n                _this.audio._maybeStopPollingVolume();\n            }\n            _this._removeConnection(connection);\n            _this._maybeStopIncomingSound();\n        });\n        return connection;\n    };\n    /**\n     * Stop the incoming sound if no {@link Connection}s remain.\n     */\n    Device.prototype._maybeStopIncomingSound = function () {\n        if (!this.connections.length) {\n            this.soundcache.get(Device.SoundName.Incoming).stop();\n        }\n    };\n    /**\n     * Remove a {@link Connection} from device.connections by reference\n     * @param connection\n     */\n    Device.prototype._removeConnection = function (connection) {\n        if (this._activeConnection === connection) {\n            this._activeConnection = null;\n        }\n        for (var i = this.connections.length - 1; i >= 0; i--) {\n            if (connection === this.connections[i]) {\n                this.connections.splice(i, 1);\n            }\n        }\n    };\n    /**\n     * Register with the signaling server.\n     */\n    Device.prototype._sendPresence = function () {\n        if (!this.stream) {\n            return;\n        }\n        this.stream.register({ audio: this.mediaPresence.audio });\n        if (this.mediaPresence.audio) {\n            this._startRegistrationTimer();\n        }\n        else {\n            this._stopRegistrationTimer();\n        }\n    };\n    /**\n     * Set up the connection to the signaling server.\n     * @param token\n     */\n    Device.prototype._setupStream = function (token) {\n        this._log.info('Setting up VSP');\n        this.stream = this.options.pStreamFactory(token, this._chunderURIs, {\n            backoffMaxMs: this.options.backoffMaxMs,\n        });\n        this.stream.addListener('close', this._onSignalingClose);\n        this.stream.addListener('connected', this._onSignalingConnected);\n        this.stream.addListener('error', this._onSignalingError);\n        this.stream.addListener('invite', this._onSignalingInvite);\n        this.stream.addListener('offline', this._onSignalingOffline);\n        this.stream.addListener('ready', this._onSignalingReady);\n    };\n    /**\n     * Start playing the incoming ringtone, and subsequently emit the incoming event.\n     * @param connection\n     * @param play - The function to be used to play the sound. Must return a Promise.\n     */\n    Device.prototype._showIncomingConnection = function (connection, play) {\n        var _this = this;\n        var timeout;\n        return Promise.race([\n            play(),\n            new Promise(function (resolve, reject) {\n                timeout = setTimeout(function () {\n                    var msg = 'Playing incoming ringtone took too long; it might not play. Continuing execution...';\n                    reject(new Error(msg));\n                }, RINGTONE_PLAY_TIMEOUT);\n            }),\n        ]).catch(function (reason) {\n            _this._log.info(reason.message);\n        }).then(function () {\n            clearTimeout(timeout);\n            _this.emit('incoming', connection);\n        });\n    };\n    /**\n     * Set a timeout to send another register message to the signaling server.\n     */\n    Device.prototype._startRegistrationTimer = function () {\n        var _this = this;\n        this._stopRegistrationTimer();\n        this.regTimer = setTimeout(function () {\n            _this._sendPresence();\n        }, REGISTRATION_INTERVAL);\n    };\n    /**\n     * Stop sending registration messages to the signaling server.\n     */\n    Device.prototype._stopRegistrationTimer = function () {\n        if (this.regTimer) {\n            clearTimeout(this.regTimer);\n        }\n    };\n    /**\n     * Throw an Error if Device.setup has not been called for this instance.\n     * @param methodName - The name of the method being called before setup()\n     */\n    Device.prototype._throwUnlessSetup = function (methodName) {\n        if (!this.isInitialized) {\n            throw new errors_1.InvalidStateError(\"Call Device.setup() before \" + methodName);\n        }\n    };\n    /**\n     * Update the device IDs of output devices being used to play the incoming ringtone through.\n     * @param sinkIds - An array of device IDs\n     */\n    Device.prototype._updateRingtoneSinkIds = function (sinkIds) {\n        return Promise.resolve(this.soundcache.get(Device.SoundName.Incoming).setSinkIds(sinkIds));\n    };\n    /**\n     * Update the device IDs of output devices being used to play the non-ringtone sounds\n     * and Call audio through.\n     * @param sinkIds - An array of device IDs\n     */\n    Device.prototype._updateSpeakerSinkIds = function (sinkIds) {\n        Array.from(this.soundcache.entries())\n            .filter(function (entry) { return entry[0] !== Device.SoundName.Incoming; })\n            .forEach(function (entry) { return entry[1].setSinkIds(sinkIds); });\n        this._connectionSinkIds = sinkIds;\n        var connection = this._activeConnection;\n        return connection\n            ? connection._setSinkIds(sinkIds)\n            : Promise.resolve();\n    };\n    /**\n     * Register the {@link Device}\n     * @param token\n     */\n    Device.prototype.register = function (token) {\n        if (this.stream) {\n            this.stream.setToken(token);\n            this._publisher.setToken(token);\n        }\n        else {\n            this._setupStream(token);\n        }\n    };\n    return Device;\n}(events_1.EventEmitter));\n(function (Device) {\n    /**\n     * All valid {@link Device} event names.\n     */\n    var EventName;\n    (function (EventName) {\n        EventName[\"Cancel\"] = \"cancel\";\n        EventName[\"Connect\"] = \"connect\";\n        EventName[\"Disconnect\"] = \"disconnect\";\n        EventName[\"Error\"] = \"error\";\n        EventName[\"Incoming\"] = \"incoming\";\n        EventName[\"Offline\"] = \"offline\";\n        EventName[\"Ready\"] = \"ready\";\n    })(EventName = Device.EventName || (Device.EventName = {}));\n    /**\n     * All possible {@link Device} statuses.\n     */\n    var Status;\n    (function (Status) {\n        Status[\"Busy\"] = \"busy\";\n        Status[\"Offline\"] = \"offline\";\n        Status[\"Ready\"] = \"ready\";\n    })(Status = Device.Status || (Device.Status = {}));\n    /**\n     * Names of all sounds handled by the {@link Device}.\n     */\n    var SoundName;\n    (function (SoundName) {\n        SoundName[\"Incoming\"] = \"incoming\";\n        SoundName[\"Outgoing\"] = \"outgoing\";\n        SoundName[\"Disconnect\"] = \"disconnect\";\n        SoundName[\"Dtmf0\"] = \"dtmf0\";\n        SoundName[\"Dtmf1\"] = \"dtmf1\";\n        SoundName[\"Dtmf2\"] = \"dtmf2\";\n        SoundName[\"Dtmf3\"] = \"dtmf3\";\n        SoundName[\"Dtmf4\"] = \"dtmf4\";\n        SoundName[\"Dtmf5\"] = \"dtmf5\";\n        SoundName[\"Dtmf6\"] = \"dtmf6\";\n        SoundName[\"Dtmf7\"] = \"dtmf7\";\n        SoundName[\"Dtmf8\"] = \"dtmf8\";\n        SoundName[\"Dtmf9\"] = \"dtmf9\";\n        SoundName[\"DtmfS\"] = \"dtmfs\";\n        SoundName[\"DtmfH\"] = \"dtmfh\";\n    })(SoundName = Device.SoundName || (Device.SoundName = {}));\n})(Device || (Device = {}));\nexports.default = Device;\n//# sourceMappingURL=device.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/device.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/dialtonePlayer.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/dialtonePlayer.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n/**\n * @packageDocumentation\n * @module Tools\n * @internalapi\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\");\n/**\n * A Map of DTMF Sound Names to their mock frequency pairs.\n */\nvar bandFrequencies = {\n    dtmf0: [1360, 960],\n    dtmf1: [1230, 720],\n    dtmf2: [1360, 720],\n    dtmf3: [1480, 720],\n    dtmf4: [1230, 790],\n    dtmf5: [1360, 790],\n    dtmf6: [1480, 790],\n    dtmf7: [1230, 870],\n    dtmf8: [1360, 870],\n    dtmf9: [1480, 870],\n    dtmfh: [1480, 960],\n    dtmfs: [1230, 960],\n};\nvar DialtonePlayer = /** @class */ (function () {\n    function DialtonePlayer(_context) {\n        var _this = this;\n        this._context = _context;\n        /**\n         * Gain nodes, reducing the frequency.\n         */\n        this._gainNodes = [];\n        this._gainNodes = [\n            this._context.createGain(),\n            this._context.createGain(),\n        ];\n        this._gainNodes.forEach(function (gainNode) {\n            gainNode.connect(_this._context.destination);\n            gainNode.gain.value = 0.1;\n            _this._gainNodes.push(gainNode);\n        });\n    }\n    DialtonePlayer.prototype.cleanup = function () {\n        this._gainNodes.forEach(function (gainNode) {\n            gainNode.disconnect();\n        });\n    };\n    /**\n     * Play the dual frequency tone for the passed DTMF name.\n     * @param sound\n     */\n    DialtonePlayer.prototype.play = function (sound) {\n        var _this = this;\n        var frequencies = bandFrequencies[sound];\n        if (!frequencies) {\n            throw new errors_1.InvalidArgumentError('Invalid DTMF sound name');\n        }\n        var oscillators = [\n            this._context.createOscillator(),\n            this._context.createOscillator(),\n        ];\n        oscillators.forEach(function (oscillator, i) {\n            oscillator.type = 'sine';\n            oscillator.frequency.value = frequencies[i];\n            oscillator.connect(_this._gainNodes[i]);\n            oscillator.start();\n            oscillator.stop(_this._context.currentTime + 0.1);\n            oscillator.addEventListener('ended', function () { return oscillator.disconnect(); });\n        });\n    };\n    return DialtonePlayer;\n}());\nexports.default = DialtonePlayer;\n//# sourceMappingURL=dialtonePlayer.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/dialtonePlayer.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/errors/generated.js":
/*!*******************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/errors/generated.js ***!
  \*******************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";
eval("\n/* tslint:disable max-classes-per-file max-line-length */\n/**\n * @packageDocumentation\n * @module Voice\n * @publicapi\n * @internal\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n// TypeScript doesn't allow extending Error so we need to run constructor logic on every one of these\n// individually. Ideally this logic would be run in a constructor on a TwilioError class but\n// due to this limitation TwilioError is an interface.\n// https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes\nfunction construct(context, messageOrError, originalError) {\n    if (typeof messageOrError === 'string') {\n        context.message = messageOrError;\n        if (originalError instanceof Error) {\n            context.originalError = originalError;\n        }\n    }\n    else if (messageOrError instanceof Error) {\n        context.originalError = messageOrError;\n    }\n}\nvar AuthorizationErrors;\n(function (AuthorizationErrors) {\n    var AccessTokenInvalid = /** @class */ (function (_super) {\n        __extends(AccessTokenInvalid, _super);\n        function AccessTokenInvalid(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [];\n            _this.code = 20101;\n            _this.description = 'Invalid access token';\n            _this.explanation = 'Twilio was unable to validate your Access Token';\n            _this.solutions = [];\n            Object.setPrototypeOf(_this, AuthorizationErrors.AccessTokenInvalid.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return AccessTokenInvalid;\n    }(Error));\n    AuthorizationErrors.AccessTokenInvalid = AccessTokenInvalid;\n    var AccessTokenExpired = /** @class */ (function (_super) {\n        __extends(AccessTokenExpired, _super);\n        function AccessTokenExpired(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [];\n            _this.code = 20104;\n            _this.description = 'Access token expired or expiration date invalid';\n            _this.explanation = 'The Access Token provided to the Twilio API has expired, the expiration time specified in the token was invalid, or the expiration time specified was too far in the future';\n            _this.solutions = [];\n            Object.setPrototypeOf(_this, AuthorizationErrors.AccessTokenExpired.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return AccessTokenExpired;\n    }(Error));\n    AuthorizationErrors.AccessTokenExpired = AccessTokenExpired;\n    var AuthenticationFailed = /** @class */ (function (_super) {\n        __extends(AuthenticationFailed, _super);\n        function AuthenticationFailed(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [];\n            _this.code = 20151;\n            _this.description = 'Authentication Failed';\n            _this.explanation = 'The Authentication with the provided JWT failed';\n            _this.solutions = [];\n            Object.setPrototypeOf(_this, AuthorizationErrors.AuthenticationFailed.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return AuthenticationFailed;\n    }(Error));\n    AuthorizationErrors.AuthenticationFailed = AuthenticationFailed;\n})(AuthorizationErrors = exports.AuthorizationErrors || (exports.AuthorizationErrors = {}));\nvar ClientErrors;\n(function (ClientErrors) {\n    var BadRequest = /** @class */ (function (_super) {\n        __extends(BadRequest, _super);\n        function BadRequest(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [];\n            _this.code = 31400;\n            _this.description = 'Bad Request (HTTP/SIP)';\n            _this.explanation = 'The request could not be understood due to malformed syntax.';\n            _this.solutions = [];\n            Object.setPrototypeOf(_this, ClientErrors.BadRequest.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return BadRequest;\n    }(Error));\n    ClientErrors.BadRequest = BadRequest;\n})(ClientErrors = exports.ClientErrors || (exports.ClientErrors = {}));\nvar GeneralErrors;\n(function (GeneralErrors) {\n    var UnknownError = /** @class */ (function (_super) {\n        __extends(UnknownError, _super);\n        function UnknownError(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [];\n            _this.code = 31000;\n            _this.description = 'Unknown Error';\n            _this.explanation = 'An unknown error has occurred. See error details for more information.';\n            _this.solutions = [];\n            Object.setPrototypeOf(_this, GeneralErrors.UnknownError.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return UnknownError;\n    }(Error));\n    GeneralErrors.UnknownError = UnknownError;\n    var ConnectionError = /** @class */ (function (_super) {\n        __extends(ConnectionError, _super);\n        function ConnectionError(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [];\n            _this.code = 31005;\n            _this.description = 'Connection error';\n            _this.explanation = 'A connection error occurred during the call';\n            _this.solutions = [];\n            Object.setPrototypeOf(_this, GeneralErrors.ConnectionError.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return ConnectionError;\n    }(Error));\n    GeneralErrors.ConnectionError = ConnectionError;\n    var TransportError = /** @class */ (function (_super) {\n        __extends(TransportError, _super);\n        function TransportError(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [];\n            _this.code = 31009;\n            _this.description = 'Transport error';\n            _this.explanation = 'No transport available to send or receive messages';\n            _this.solutions = [];\n            Object.setPrototypeOf(_this, GeneralErrors.TransportError.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return TransportError;\n    }(Error));\n    GeneralErrors.TransportError = TransportError;\n})(GeneralErrors = exports.GeneralErrors || (exports.GeneralErrors = {}));\nvar SignalingErrors;\n(function (SignalingErrors) {\n    var ConnectionError = /** @class */ (function (_super) {\n        __extends(ConnectionError, _super);\n        function ConnectionError(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [];\n            _this.code = 53000;\n            _this.description = 'Signaling connection error';\n            _this.explanation = 'Raised whenever a signaling connection error occurs that is not covered by a more specific error code.';\n            _this.solutions = [];\n            Object.setPrototypeOf(_this, SignalingErrors.ConnectionError.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return ConnectionError;\n    }(Error));\n    SignalingErrors.ConnectionError = ConnectionError;\n    var ConnectionDisconnected = /** @class */ (function (_super) {\n        __extends(ConnectionDisconnected, _super);\n        function ConnectionDisconnected(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [\n                'The device running your application lost its Internet connection.',\n            ];\n            _this.code = 53001;\n            _this.description = 'Signaling connection disconnected';\n            _this.explanation = 'Raised whenever the signaling connection is unexpectedly disconnected.';\n            _this.solutions = [\n                'Ensure the device running your application has access to a stable Internet connection.',\n            ];\n            Object.setPrototypeOf(_this, SignalingErrors.ConnectionDisconnected.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return ConnectionDisconnected;\n    }(Error));\n    SignalingErrors.ConnectionDisconnected = ConnectionDisconnected;\n})(SignalingErrors = exports.SignalingErrors || (exports.SignalingErrors = {}));\nvar MediaErrors;\n(function (MediaErrors) {\n    var ClientLocalDescFailed = /** @class */ (function (_super) {\n        __extends(ClientLocalDescFailed, _super);\n        function ClientLocalDescFailed(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [\n                'The Client may not be using a supported WebRTC implementation.',\n                'The Client may not have the necessary resources to create or apply a new media description.',\n            ];\n            _this.code = 53400;\n            _this.description = 'Client is unable to create or apply a local media description';\n            _this.explanation = 'Raised whenever a Client is unable to create or apply a local media description.';\n            _this.solutions = [\n                'If you are experiencing this error using the JavaScript SDK, ensure you are running it with a supported WebRTC implementation.',\n            ];\n            Object.setPrototypeOf(_this, MediaErrors.ClientLocalDescFailed.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return ClientLocalDescFailed;\n    }(Error));\n    MediaErrors.ClientLocalDescFailed = ClientLocalDescFailed;\n    var ClientRemoteDescFailed = /** @class */ (function (_super) {\n        __extends(ClientRemoteDescFailed, _super);\n        function ClientRemoteDescFailed(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [\n                'The Client may not be using a supported WebRTC implementation.',\n                'The Client may be connecting peer-to-peer with another Participant that is not using a supported WebRTC implementation.',\n                'The Client may not have the necessary resources to apply a new media description.',\n            ];\n            _this.code = 53402;\n            _this.description = 'Client is unable to apply a remote media description';\n            _this.explanation = 'Raised whenever the Client receives a remote media description but is unable to apply it.';\n            _this.solutions = [\n                'If you are experiencing this error using the JavaScript SDK, ensure you are running it with a supported WebRTC implementation.',\n            ];\n            Object.setPrototypeOf(_this, MediaErrors.ClientRemoteDescFailed.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return ClientRemoteDescFailed;\n    }(Error));\n    MediaErrors.ClientRemoteDescFailed = ClientRemoteDescFailed;\n    var ConnectionError = /** @class */ (function (_super) {\n        __extends(ConnectionError, _super);\n        function ConnectionError(messageOrError, originalError) {\n            var _this = _super.call(this, '') || this;\n            _this.causes = [\n                'The Client was unable to establish a media connection.',\n                'A media connection which was active failed liveliness checks.',\n            ];\n            _this.code = 53405;\n            _this.description = 'Media connection failed';\n            _this.explanation = 'Raised by the Client or Server whenever a media connection fails.';\n            _this.solutions = [\n                'If the problem persists, try connecting to another region.',\n                'Check your Client\\'s network connectivity.',\n                'If you\\'ve provided custom ICE Servers then ensure that the URLs and credentials are valid.',\n            ];\n            Object.setPrototypeOf(_this, MediaErrors.ConnectionError.prototype);\n            construct(_this, messageOrError, originalError);\n            return _this;\n        }\n        return ConnectionError;\n    }(Error));\n    MediaErrors.ConnectionError = ConnectionError;\n})(MediaErrors = exports.MediaErrors || (exports.MediaErrors = {}));\n/**\n * @private\n */\nexports.errorsByCode = new Map([\n    [20101, AuthorizationErrors.AccessTokenInvalid],\n    [20104, AuthorizationErrors.AccessTokenExpired],\n    [20151, AuthorizationErrors.AuthenticationFailed],\n    [31400, ClientErrors.BadRequest],\n    [31000, GeneralErrors.UnknownError],\n    [31005, GeneralErrors.ConnectionError],\n    [31009, GeneralErrors.TransportError],\n    [53000, SignalingErrors.ConnectionError],\n    [53001, SignalingErrors.ConnectionDisconnected],\n    [53400, MediaErrors.ClientLocalDescFailed],\n    [53402, MediaErrors.ClientRemoteDescFailed],\n    [53405, MediaErrors.ConnectionError],\n]);\nObject.freeze(exports.errorsByCode);\n//# sourceMappingURL=generated.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/errors/generated.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/errors/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/errors/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @packageDocumentation\n * @internalapi\n */\n/* tslint:disable max-classes-per-file */\nvar generated_1 = __webpack_require__(/*! ./generated */ \"./node_modules/twilio-client/es5/twilio/errors/generated.js\");\nexports.AuthorizationErrors = generated_1.AuthorizationErrors;\nexports.ClientErrors = generated_1.ClientErrors;\nexports.GeneralErrors = generated_1.GeneralErrors;\nexports.MediaErrors = generated_1.MediaErrors;\nexports.SignalingErrors = generated_1.SignalingErrors;\n// Application errors that can be avoided by good app logic\nvar InvalidArgumentError = /** @class */ (function (_super) {\n    __extends(InvalidArgumentError, _super);\n    function InvalidArgumentError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = 'InvalidArgumentError';\n        return _this;\n    }\n    return InvalidArgumentError;\n}(Error));\nexports.InvalidArgumentError = InvalidArgumentError;\nvar InvalidStateError = /** @class */ (function (_super) {\n    __extends(InvalidStateError, _super);\n    function InvalidStateError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = 'InvalidStateError';\n        return _this;\n    }\n    return InvalidStateError;\n}(Error));\nexports.InvalidStateError = InvalidStateError;\nvar NotSupportedError = /** @class */ (function (_super) {\n    __extends(NotSupportedError, _super);\n    function NotSupportedError(message) {\n        var _this = _super.call(this, message) || this;\n        _this.name = 'NotSupportedError';\n        return _this;\n    }\n    return NotSupportedError;\n}(Error));\nexports.NotSupportedError = NotSupportedError;\n// This should only be used to look up error codes returned by a server\n// using the same repo of error codes.\nfunction getErrorByCode(code) {\n    var error = generated_1.errorsByCode.get(code);\n    if (!error) {\n        throw new InvalidArgumentError(\"Error code \" + code + \" not found\");\n    }\n    return error;\n}\nexports.getErrorByCode = getErrorByCode;\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/errors/index.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/eventpublisher.js":
/*!*****************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/eventpublisher.js ***!
  \*****************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\nvar request = __webpack_require__(/*! ./request */ \"./node_modules/twilio-client/es5/twilio/request.js\");\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\n/**\n * Builds Endpoint Analytics (EA) event payloads and sends them to\n *   the EA server.\n * @constructor\n * @param {String} productName - Name of the product publishing events.\n * @param {String} token - The JWT token to use to authenticate with\n *   the EA server.\n * @param {EventPublisher.Options} options\n * @property {Boolean} isEnabled - Whether or not this publisher is publishing\n *   to the server. Currently ignores the request altogether, in the future this\n *   may store them in case publishing is re-enabled later. Defaults to true.\n */ /**\n    * @typedef {Object} EventPublisher.Options\n    * @property {Object} [metadata=undefined] - A publisher_metadata object to send\n    *   with each payload.\n    * @property {String} [host='eventgw.twilio.com'] - The host address of the EA\n    *   server to publish to.\n    * @property {Object|Function} [defaultPayload] - A default payload to extend\n    *   when creating and sending event payloads. Also takes a function that\n    *   should return an object representing the default payload. This is\n    *   useful for fields that should always be present when they are\n    *   available, but are not always available.\n    */\nfunction EventPublisher(productName, token, options) {\n  if (!(this instanceof EventPublisher)) {\n    return new EventPublisher(productName, token, options);\n  }\n\n  // Apply default options\n  options = Object.assign({\n    defaultPayload: function defaultPayload() {\n      return {};\n    },\n\n    host: 'eventgw.twilio.com'\n  }, options);\n\n  var defaultPayload = options.defaultPayload;\n\n  if (typeof defaultPayload !== 'function') {\n    defaultPayload = function defaultPayload() {\n      return Object.assign({}, options.defaultPayload);\n    };\n  }\n\n  var isEnabled = true;\n  // eslint-disable-next-line camelcase,no-undefined\n  var metadata = Object.assign({ app_name: undefined, app_version: undefined }, options.metadata);\n\n  Object.defineProperties(this, {\n    _defaultPayload: { value: defaultPayload },\n    _isEnabled: {\n      get: function get() {\n        return isEnabled;\n      },\n      set: function set(_isEnabled) {\n        isEnabled = _isEnabled;\n      }\n    },\n    _host: { value: options.host },\n    _request: { value: options.request || request, writable: true },\n    _token: { value: token, writable: true },\n    isEnabled: {\n      enumerable: true,\n      get: function get() {\n        return isEnabled;\n      }\n    },\n    metadata: {\n      enumerable: true,\n      get: function get() {\n        return metadata;\n      }\n    },\n    productName: { enumerable: true, value: productName },\n    token: {\n      enumerable: true,\n      get: function get() {\n        return this._token;\n      }\n    }\n  });\n}\n\nutil.inherits(EventPublisher, EventEmitter);\n\n/**\n * Post to an EA server.\n * @private\n * @param {String} endpointName - Endpoint to post the event to\n * @param {String} level - ['debug', 'info', 'warning', 'error']\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @param {?Boolean} [force=false] - Whether or not to send this even if\n *    publishing is disabled.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype._post = function _post(endpointName, level, group, name, payload, connection, force) {\n  var _this = this;\n\n  if (!this.isEnabled && !force) {\n    return Promise.resolve();\n  }\n\n  if (!connection || (!connection.parameters || !connection.parameters.CallSid) && !connection.outboundConnectionId) {\n    return Promise.resolve();\n  }\n\n  var event = {\n    /* eslint-disable camelcase */\n    publisher: this.productName,\n    group: group,\n    name: name,\n    timestamp: new Date().toISOString(),\n    level: level.toUpperCase(),\n    payload_type: 'application/json',\n    private: false,\n    payload: payload && payload.forEach ? payload.slice(0) : Object.assign(this._defaultPayload(connection), payload)\n    /* eslint-enable camelcase */\n  };\n\n  if (this.metadata) {\n    // eslint-disable-next-line camelcase\n    event.publisher_metadata = this.metadata;\n  }\n\n  var requestParams = {\n    url: 'https://' + this._host + '/v4/' + endpointName,\n    body: event,\n    headers: {\n      'Content-Type': 'application/json',\n      'X-Twilio-Token': this.token\n    }\n  };\n\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    self._request.post(requestParams, function (err) {\n      if (err) {\n        _this.emit('error', err);\n        reject(err);\n      } else {\n        resolve();\n      }\n    });\n  });\n};\n\n/**\n * Post an event to the EA server. Use this method when the level\n *  is dynamic. Otherwise, it's better practice to use the sugar\n *  methods named for the specific level.\n * @param {String} level - ['debug', 'info', 'warning', 'error']\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.post = function post(level, group, name, payload, connection, force) {\n  return this._post('EndpointEvents', level, group, name, payload, connection, force);\n};\n\n/**\n * Post a debug-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.debug = function debug(group, name, payload, connection) {\n  return this.post('debug', group, name, payload, connection);\n};\n\n/**\n * Post an info-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.info = function info(group, name, payload, connection) {\n  return this.post('info', group, name, payload, connection);\n};\n\n/**\n * Post a warning-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.warn = function warn(group, name, payload, connection) {\n  return this.post('warning', group, name, payload, connection);\n};\n\n/**\n * Post an error-level event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {?Object} [payload=null] - The payload to pass. This will be extended\n *    onto the default payload object, if one exists.\n * @param {?Connection} [connection=null] - The {@link Connection} which is posting this payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.error = function error(group, name, payload, connection) {\n  return this.post('error', group, name, payload, connection);\n};\n\n/**\n * Post a metrics event to the EA server.\n * @param {String} group - The name of the group the event belongs to.\n * @param {String} name - The designated event name.\n * @param {Array<Object>} metrics - The metrics to post.\n * @param {?Object} [customFields] - Custom fields to append to each payload.\n * @returns {Promise} Fulfilled if the HTTP response is 20x.\n */\nEventPublisher.prototype.postMetrics = function postMetrics(group, name, metrics, customFields, connection) {\n  var _this2 = this;\n\n  return new Promise(function (resolve) {\n    var samples = metrics.map(formatMetric).map(function (sample) {\n      return Object.assign(sample, customFields);\n    });\n\n    resolve(_this2._post('EndpointMetrics', 'info', group, name, samples, connection));\n  });\n};\n\n/**\n * Update the token to use to authenticate requests.\n * @param {string} token\n * @returns {void}\n */\nEventPublisher.prototype.setToken = function setToken(token) {\n  this._token = token;\n};\n\n/**\n * Enable the publishing of events.\n */\nEventPublisher.prototype.enable = function enable() {\n  this._isEnabled = true;\n};\n\n/**\n * Disable the publishing of events.\n */\nEventPublisher.prototype.disable = function disable() {\n  this._isEnabled = false;\n};\n\nfunction formatMetric(sample) {\n  return {\n    /* eslint-disable camelcase */\n    timestamp: new Date(sample.timestamp).toISOString(),\n    total_packets_received: sample.totals.packetsReceived,\n    total_packets_lost: sample.totals.packetsLost,\n    total_packets_sent: sample.totals.packetsSent,\n    total_bytes_received: sample.totals.bytesReceived,\n    total_bytes_sent: sample.totals.bytesSent,\n    packets_received: sample.packetsReceived,\n    packets_lost: sample.packetsLost,\n    packets_lost_fraction: sample.packetsLostFraction && Math.round(sample.packetsLostFraction * 100) / 100,\n    bytes_received: sample.bytesReceived,\n    bytes_sent: sample.bytesSent,\n    audio_codec: sample.codecName,\n    audio_level_in: sample.audioInputLevel,\n    audio_level_out: sample.audioOutputLevel,\n    call_volume_input: sample.inputVolume,\n    call_volume_output: sample.outputVolume,\n    jitter: sample.jitter,\n    rtt: sample.rtt,\n    mos: sample.mos && Math.round(sample.mos * 100) / 100\n    /* eslint-enable camelcase */\n  };\n}\n\nmodule.exports = EventPublisher;\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/eventpublisher.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/log.js":
/*!******************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/log.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\n/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar LogLevelModule = __webpack_require__(/*! loglevel */ \"./node_modules/twilio-client/node_modules/loglevel/lib/loglevel.js\");\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/twilio-client/es5/twilio/constants.js\");\n/**\n * {@link Log} provides logging features throught the sdk using loglevel module\n * See https://github.com/pimterry/loglevel for documentation\n */\nvar Log = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param [options] - Optional settings\n     */\n    function Log(options) {\n        this._log = (options && options.LogLevelModule ? options.LogLevelModule : LogLevelModule).getLogger(constants_1.PACKAGE_NAME);\n    }\n    /**\n     * Create the logger singleton instance if it doesn't exists\n     * @returns The singleton {@link Log} instance\n     */\n    Log.getInstance = function () {\n        if (!Log.instance) {\n            Log.instance = new Log();\n        }\n        return Log.instance;\n    };\n    /**\n     * Log a debug message\n     * @param args - Any number of arguments to be passed to loglevel.debug\n     */\n    Log.prototype.debug = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this._log).debug.apply(_a, args);\n    };\n    /**\n     * Log an error message\n     * @param args - Any number of arguments to be passed to loglevel.error\n     */\n    Log.prototype.error = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this._log).error.apply(_a, args);\n    };\n    /**\n     * Log an info message\n     * @param args - Any number of arguments to be passed to loglevel.info\n     */\n    Log.prototype.info = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this._log).info.apply(_a, args);\n    };\n    /**\n     * Set a default log level to disable all logging below the given level\n     */\n    Log.prototype.setDefaultLevel = function (level) {\n        this._log.setDefaultLevel(level);\n    };\n    /**\n     * Log a warning message\n     * @param args - Any number of arguments to be passed to loglevel.warn\n     */\n    Log.prototype.warn = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        (_a = this._log).warn.apply(_a, args);\n    };\n    /**\n     * Log levels\n     */\n    Log.levels = LogLevelModule.levels;\n    return Log;\n}());\nexports.default = Log;\n//# sourceMappingURL=log.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/log.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/outputdevicecollection.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/outputdevicecollection.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @packageDocumentation\n * @module Voice\n */\nvar constants_1 = __webpack_require__(/*! ./constants */ \"./node_modules/twilio-client/es5/twilio/constants.js\");\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\");\nvar DEFAULT_TEST_SOUND_URL = constants_1.SOUNDS_BASE_URL + \"/outgoing.mp3\";\n/**\n * A smart collection containing a Set of active output devices.\n * @publicapi\n */\nvar OutputDeviceCollection = /** @class */ (function () {\n    /**\n     * @private\n     */\n    function OutputDeviceCollection(_name, _availableDevices, _beforeChange, _isSupported) {\n        this._name = _name;\n        this._availableDevices = _availableDevices;\n        this._beforeChange = _beforeChange;\n        this._isSupported = _isSupported;\n        /**\n         * The currently active output devices.\n         */\n        this._activeDevices = new Set();\n    }\n    /**\n     * Delete a device from the collection. If no devices remain, the 'default'\n     * device will be added as the sole device. If no `default` device exists,\n     * the first available device will be used.\n     * @param device - The device to delete from the collection\n     * @returns whether the device was present before it was deleted\n     */\n    OutputDeviceCollection.prototype.delete = function (device) {\n        var wasDeleted = !!(this._activeDevices.delete(device));\n        var defaultDevice = this._availableDevices.get('default')\n            || Array.from(this._availableDevices.values())[0];\n        if (!this._activeDevices.size && defaultDevice) {\n            this._activeDevices.add(defaultDevice);\n        }\n        // Call _beforeChange so that the implementation can react when a device is\n        // removed or lost.\n        var deviceIds = Array.from(this._activeDevices.values()).map(function (deviceInfo) { return deviceInfo.deviceId; });\n        this._beforeChange(this._name, deviceIds);\n        return !!wasDeleted;\n    };\n    /**\n     * Get the current set of devices.\n     */\n    OutputDeviceCollection.prototype.get = function () {\n        return this._activeDevices;\n    };\n    /**\n     * Replace the current set of devices with a new set of devices.\n     * @param deviceIdOrIds - An ID or array of IDs of devices to replace the existing devices with.\n     * @returns Rejects if this feature is not supported, any of the supplied IDs are not found,\n     * or no IDs are passed.\n     */\n    OutputDeviceCollection.prototype.set = function (deviceIdOrIds) {\n        var _this = this;\n        if (!this._isSupported) {\n            return Promise.reject(new errors_1.NotSupportedError('This browser does not support audio output selection'));\n        }\n        var deviceIds = Array.isArray(deviceIdOrIds) ? deviceIdOrIds : [deviceIdOrIds];\n        if (!deviceIds.length) {\n            return Promise.reject(new errors_1.InvalidArgumentError('Must specify at least one device to set'));\n        }\n        var missingIds = [];\n        var devices = deviceIds.map(function (id) {\n            var device = _this._availableDevices.get(id);\n            if (!device) {\n                missingIds.push(id);\n            }\n            return device;\n        });\n        if (missingIds.length) {\n            return Promise.reject(new errors_1.InvalidArgumentError(\"Devices not found: \" + missingIds.join(', ')));\n        }\n        return new Promise(function (resolve) {\n            resolve(_this._beforeChange(_this._name, deviceIds));\n        }).then(function () {\n            _this._activeDevices.clear();\n            devices.forEach(_this._activeDevices.add, _this._activeDevices);\n        });\n    };\n    /**\n     * Test the devices by playing audio through them.\n     * @param [soundUrl] - An optional URL. If none is specified, we will\n     *   play a default test tone.\n     * @returns Resolves with the result of the underlying HTMLAudioElements' play() calls.\n     */\n    OutputDeviceCollection.prototype.test = function (soundUrl) {\n        if (soundUrl === void 0) { soundUrl = DEFAULT_TEST_SOUND_URL; }\n        if (!this._isSupported) {\n            return Promise.reject(new errors_1.NotSupportedError('This browser does not support audio output selection'));\n        }\n        if (!this._activeDevices.size) {\n            return Promise.reject(new errors_1.InvalidStateError('No active output devices to test'));\n        }\n        return Promise.all(Array.from(this._activeDevices).map(function (device) {\n            var el;\n            // (rrowland) We need to wait for the oncanplay event because of a regression introduced\n            // in Chrome M72: https://bugs.chromium.org/p/chromium/issues/detail?id=930876\n            return new Promise(function (resolve) {\n                el = new Audio(soundUrl);\n                el.oncanplay = resolve;\n            }).then(function () { return el.setSinkId(device.deviceId).then(function () { return el.play(); }); });\n        }));\n    };\n    return OutputDeviceCollection;\n}());\nexports.default = OutputDeviceCollection;\n//# sourceMappingURL=outputdevicecollection.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/outputdevicecollection.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/preflight/preflight.js":
/*!**********************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/preflight/preflight.js ***!
  \**********************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @packageDocumentation\n * @module Voice\n * @preferred\n * @publicapi\n */\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar connection_1 = __webpack_require__(/*! ../connection */ \"./node_modules/twilio-client/es5/twilio/connection.js\");\nvar device_1 = __webpack_require__(/*! ../device */ \"./node_modules/twilio-client/es5/twilio/device.js\");\nvar errors_1 = __webpack_require__(/*! ../errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\");\nvar stats_1 = __webpack_require__(/*! ../rtc/stats */ \"./node_modules/twilio-client/es5/twilio/rtc/stats.js\");\nvar _a = __webpack_require__(/*! ../constants */ \"./node_modules/twilio-client/es5/twilio/constants.js\"), COWBELL_AUDIO_URL = _a.COWBELL_AUDIO_URL, ECHO_TEST_DURATION = _a.ECHO_TEST_DURATION;\n/**\n * Runs some tests to identify issues, if any, prohibiting successful calling.\n */\nvar PreflightTest = /** @class */ (function (_super) {\n    __extends(PreflightTest, _super);\n    /**\n     * Construct a {@link PreflightTest} instance.\n     * @constructor\n     * @param token - A Twilio JWT token string.\n     * @param options\n     */\n    function PreflightTest(token, options) {\n        var _this = _super.call(this) || this;\n        /**\n         * Whether this test has already logged an insights-connection-warning.\n         */\n        _this._hasInsightsErrored = false;\n        /**\n         * Network related timing measurements for this test\n         */\n        _this._networkTiming = {};\n        /**\n         * The options passed to {@link PreflightTest} constructor\n         */\n        _this._options = {\n            codecPreferences: [connection_1.default.Codec.PCMU, connection_1.default.Codec.Opus],\n            debug: false,\n            edge: 'roaming',\n            fakeMicInput: false,\n            signalingTimeoutMs: 10000,\n        };\n        /**\n         * Current status of this test\n         */\n        _this._status = PreflightTest.Status.Connecting;\n        Object.assign(_this._options, options);\n        _this._samples = [];\n        _this._warnings = [];\n        _this._startTime = Date.now();\n        _this._initDevice(token, __assign(__assign({}, _this._options), { fileInputStream: _this._options.fakeMicInput ?\n                _this._getStreamFromFile() : undefined }));\n        return _this;\n    }\n    /**\n     * Stops the current test and raises a failed event.\n     */\n    PreflightTest.prototype.stop = function () {\n        var _this = this;\n        var error = {\n            code: 31008,\n            message: 'Call cancelled',\n        };\n        if (this._device) {\n            this._device.once('offline', function () { return _this._onFailed(error); });\n            this._device.destroy();\n        }\n        else {\n            this._onFailed(error);\n        }\n    };\n    /**\n     * Emit a {PreflightTest.Warning}\n     */\n    PreflightTest.prototype._emitWarning = function (name, description, rtcWarning) {\n        var warning = { name: name, description: description };\n        if (rtcWarning) {\n            warning.rtcWarning = rtcWarning;\n        }\n        this._warnings.push(warning);\n        this.emit(PreflightTest.Events.Warning, warning);\n    };\n    /**\n     * Returns call quality base on the RTC Stats\n     */\n    PreflightTest.prototype._getCallQuality = function (mos) {\n        if (mos > 4.2) {\n            return PreflightTest.CallQuality.Excellent;\n        }\n        else if (mos >= 4.1 && mos <= 4.2) {\n            return PreflightTest.CallQuality.Great;\n        }\n        else if (mos >= 3.7 && mos <= 4) {\n            return PreflightTest.CallQuality.Good;\n        }\n        else if (mos >= 3.1 && mos <= 3.6) {\n            return PreflightTest.CallQuality.Fair;\n        }\n        else {\n            return PreflightTest.CallQuality.Degraded;\n        }\n    };\n    /**\n     * Returns the report for this test.\n     */\n    PreflightTest.prototype._getReport = function () {\n        var stats = this._getRTCStats();\n        var testTiming = { start: this._startTime };\n        if (this._endTime) {\n            testTiming.end = this._endTime;\n            testTiming.duration = this._endTime - this._startTime;\n        }\n        var report = {\n            callSid: this._callSid,\n            edge: this._edge,\n            iceCandidateStats: this._rtcIceCandidateStatsReport.iceCandidateStats,\n            networkTiming: this._networkTiming,\n            samples: this._samples,\n            selectedEdge: this._options.edge,\n            stats: stats,\n            testTiming: testTiming,\n            totals: this._getRTCSampleTotals(),\n            warnings: this._warnings,\n        };\n        var selectedIceCandidatePairStats = this._rtcIceCandidateStatsReport.selectedIceCandidatePairStats;\n        if (selectedIceCandidatePairStats) {\n            report.selectedIceCandidatePairStats = selectedIceCandidatePairStats;\n            report.isTurnRequired = selectedIceCandidatePairStats.localCandidate.candidateType === 'relay'\n                || selectedIceCandidatePairStats.remoteCandidate.candidateType === 'relay';\n        }\n        if (stats) {\n            report.callQuality = this._getCallQuality(stats.mos.average);\n        }\n        return report;\n    };\n    /**\n     * Returns RTC stats totals for this test\n     */\n    PreflightTest.prototype._getRTCSampleTotals = function () {\n        if (!this._latestSample) {\n            return;\n        }\n        return __assign({}, this._latestSample.totals);\n    };\n    /**\n     * Returns RTC related stats captured during the test call\n     */\n    PreflightTest.prototype._getRTCStats = function () {\n        var firstMosSampleIdx = this._samples.findIndex(function (sample) { return typeof sample.mos === 'number' && sample.mos > 0; });\n        var samples = firstMosSampleIdx >= 0\n            ? this._samples.slice(firstMosSampleIdx)\n            : [];\n        if (!samples || !samples.length) {\n            return;\n        }\n        return ['jitter', 'mos', 'rtt'].reduce(function (statObj, stat) {\n            var _a;\n            var values = samples.map(function (s) { return s[stat]; });\n            return __assign(__assign({}, statObj), (_a = {}, _a[stat] = {\n                average: Number((values.reduce(function (total, value) { return total + value; }) / values.length).toPrecision(5)),\n                max: Math.max.apply(Math, values),\n                min: Math.min.apply(Math, values),\n            }, _a));\n        }, {});\n    };\n    /**\n     * Returns a MediaStream from a media file\n     */\n    PreflightTest.prototype._getStreamFromFile = function () {\n        var audioContext = this._options.audioContext;\n        if (!audioContext) {\n            throw new errors_1.NotSupportedError('Cannot fake input audio stream: AudioContext is not supported by this browser.');\n        }\n        var audioEl = new Audio(COWBELL_AUDIO_URL);\n        audioEl.addEventListener('canplaythrough', function () { return audioEl.play(); });\n        if (typeof audioEl.setAttribute === 'function') {\n            audioEl.setAttribute('crossorigin', 'anonymous');\n        }\n        var src = audioContext.createMediaElementSource(audioEl);\n        var dest = audioContext.createMediaStreamDestination();\n        src.connect(dest);\n        return dest.stream;\n    };\n    /**\n     * Initialize the device\n     */\n    PreflightTest.prototype._initDevice = function (token, options) {\n        var _this = this;\n        try {\n            this._device = new (options.deviceFactory || device_1.default)(token, {\n                codecPreferences: options.codecPreferences,\n                debug: options.debug,\n                edge: options.edge,\n                fileInputStream: options.fileInputStream,\n                iceServers: options.iceServers,\n                preflight: true,\n                rtcConfiguration: options.rtcConfiguration,\n            });\n        }\n        catch (error) {\n            // We want to return before failing so the consumer can capture the event\n            setTimeout(function () {\n                _this._onFailed(error);\n            });\n            return;\n        }\n        this._device.once('ready', function () {\n            _this._onDeviceReady();\n        });\n        this._device.once('error', function (error) {\n            _this._onDeviceError(error);\n        });\n        this._signalingTimeoutTimer = setTimeout(function () {\n            _this._onDeviceError({\n                code: 31901,\n                message: 'WebSocket - Connection Timeout',\n            });\n        }, options.signalingTimeoutMs);\n    };\n    /**\n     * Called on {@link Device} error event\n     * @param error\n     */\n    PreflightTest.prototype._onDeviceError = function (error) {\n        this._device.destroy();\n        this._onFailed(error);\n    };\n    /**\n     * Called on {@link Device} ready event\n     */\n    PreflightTest.prototype._onDeviceReady = function () {\n        var _this = this;\n        clearTimeout(this._echoTimer);\n        clearTimeout(this._signalingTimeoutTimer);\n        this._connection = this._device.connect();\n        this._networkTiming.signaling = { start: Date.now() };\n        this._setupConnectionHandlers(this._connection);\n        this._edge = this._device.edge || undefined;\n        if (this._options.fakeMicInput) {\n            this._echoTimer = setTimeout(function () { return _this._device.disconnectAll(); }, ECHO_TEST_DURATION);\n            var audio = this._device.audio;\n            if (audio) {\n                audio.disconnect(false);\n                audio.outgoing(false);\n            }\n        }\n        this._device.once('disconnect', function () {\n            _this._device.once('offline', function () { return _this._onOffline(); });\n            _this._device.destroy();\n        });\n        var publisher = this._connection['_publisher'];\n        publisher.on('error', function () {\n            if (!_this._hasInsightsErrored) {\n                _this._emitWarning('insights-connection-error', 'Received an error when attempting to connect to Insights gateway');\n            }\n            _this._hasInsightsErrored = true;\n        });\n    };\n    /**\n     * Called when there is a fatal error\n     * @param error\n     */\n    PreflightTest.prototype._onFailed = function (error) {\n        clearTimeout(this._echoTimer);\n        clearTimeout(this._signalingTimeoutTimer);\n        this._releaseHandlers();\n        this._endTime = Date.now();\n        this._status = PreflightTest.Status.Failed;\n        this.emit(PreflightTest.Events.Failed, error);\n    };\n    /**\n     * Called when the device goes offline.\n     * This indicates that the test has been completed, but we won't know if it failed or not.\n     * The onError event will be the indicator whether the test failed.\n     */\n    PreflightTest.prototype._onOffline = function () {\n        var _this = this;\n        // We need to make sure we always execute preflight.on('completed') last\n        // as client SDK sometimes emits 'offline' event before emitting fatal errors.\n        setTimeout(function () {\n            if (_this._status === PreflightTest.Status.Failed) {\n                return;\n            }\n            clearTimeout(_this._echoTimer);\n            clearTimeout(_this._signalingTimeoutTimer);\n            _this._releaseHandlers();\n            _this._endTime = Date.now();\n            _this._status = PreflightTest.Status.Completed;\n            _this._report = _this._getReport();\n            _this.emit(PreflightTest.Events.Completed, _this._report);\n        }, 10);\n    };\n    /**\n     * Clean up all handlers for device and connection\n     */\n    PreflightTest.prototype._releaseHandlers = function () {\n        [this._device, this._connection].forEach(function (emitter) {\n            if (emitter) {\n                emitter.eventNames().forEach(function (name) { return emitter.removeAllListeners(name); });\n            }\n        });\n    };\n    /**\n     * Setup the event handlers for the {@link Connection} of the test call\n     * @param connection\n     */\n    PreflightTest.prototype._setupConnectionHandlers = function (connection) {\n        var _this = this;\n        if (this._options.fakeMicInput) {\n            // When volume events start emitting, it means all audio outputs have been created.\n            // Let's mute them if we're using fake mic input.\n            connection.once('volume', function () {\n                connection.mediaStream.outputs\n                    .forEach(function (output) { return output.audio.muted = true; });\n            });\n        }\n        connection.on('warning', function (name, data) {\n            _this._emitWarning(name, 'Received an RTCWarning. See .rtcWarning for the RTCWarning', data);\n        });\n        connection.once('accept', function () {\n            _this._callSid = connection.mediaStream.callSid;\n            _this._status = PreflightTest.Status.Connected;\n            _this.emit(PreflightTest.Events.Connected);\n        });\n        connection.on('sample', function (sample) { return __awaiter(_this, void 0, void 0, function () {\n            var _a;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!!this._latestSample) return [3 /*break*/, 2];\n                        _a = this;\n                        return [4 /*yield*/, (this._options.getRTCIceCandidateStatsReport || stats_1.getRTCIceCandidateStatsReport)(connection.mediaStream.version.pc)];\n                    case 1:\n                        _a._rtcIceCandidateStatsReport = _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        this._latestSample = sample;\n                        this._samples.push(sample);\n                        this.emit(PreflightTest.Events.Sample, sample);\n                        return [2 /*return*/];\n                }\n            });\n        }); });\n        // TODO: Update the following once the SDK supports emitting these events\n        // Let's shim for now\n        [{\n                reportLabel: 'peerConnection',\n                type: 'pcconnection',\n            }, {\n                reportLabel: 'ice',\n                type: 'iceconnection',\n            }, {\n                reportLabel: 'dtls',\n                type: 'dtlstransport',\n            }, {\n                reportLabel: 'signaling',\n                type: 'signaling',\n            }].forEach(function (_a) {\n            var type = _a.type, reportLabel = _a.reportLabel;\n            var handlerName = \"on\" + type + \"statechange\";\n            var originalHandler = connection.mediaStream[handlerName];\n            connection.mediaStream[handlerName] = function (state) {\n                var timing = _this._networkTiming[reportLabel]\n                    = _this._networkTiming[reportLabel] || { start: 0 };\n                if (state === 'connecting' || state === 'checking') {\n                    timing.start = Date.now();\n                }\n                else if ((state === 'connected' || state === 'stable') && !timing.duration) {\n                    timing.end = Date.now();\n                    timing.duration = timing.end - timing.start;\n                }\n                originalHandler(state);\n            };\n        });\n    };\n    Object.defineProperty(PreflightTest.prototype, \"callSid\", {\n        /**\n         * The callsid generated for the test call.\n         */\n        get: function () {\n            return this._callSid;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PreflightTest.prototype, \"endTime\", {\n        /**\n         * A timestamp in milliseconds of when the test ended.\n         */\n        get: function () {\n            return this._endTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PreflightTest.prototype, \"latestSample\", {\n        /**\n         * The latest WebRTC sample collected.\n         */\n        get: function () {\n            return this._latestSample;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PreflightTest.prototype, \"report\", {\n        /**\n         * The report for this test.\n         */\n        get: function () {\n            return this._report;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PreflightTest.prototype, \"startTime\", {\n        /**\n         * A timestamp in milliseconds of when the test started.\n         */\n        get: function () {\n            return this._startTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(PreflightTest.prototype, \"status\", {\n        /**\n         * The status of the test.\n         */\n        get: function () {\n            return this._status;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PreflightTest;\n}(events_1.EventEmitter));\nexports.PreflightTest = PreflightTest;\n(function (PreflightTest) {\n    /**\n     * The quality of the call determined by different mos ranges.\n     * Mos is calculated base on the WebRTC stats - rtt, jitter, and packet lost.\n     */\n    var CallQuality;\n    (function (CallQuality) {\n        /**\n         * If the average mos is over 4.2.\n         */\n        CallQuality[\"Excellent\"] = \"excellent\";\n        /**\n         * If the average mos is between 4.1 and 4.2 both inclusive.\n         */\n        CallQuality[\"Great\"] = \"great\";\n        /**\n         * If the average mos is between 3.7 and 4.0 both inclusive.\n         */\n        CallQuality[\"Good\"] = \"good\";\n        /**\n         * If the average mos is between 3.1 and 3.6 both inclusive.\n         */\n        CallQuality[\"Fair\"] = \"fair\";\n        /**\n         * If the average mos is 3.0 or below.\n         */\n        CallQuality[\"Degraded\"] = \"degraded\";\n    })(CallQuality = PreflightTest.CallQuality || (PreflightTest.CallQuality = {}));\n    /**\n     * Possible events that a [[PreflightTest]] might emit.\n     */\n    var Events;\n    (function (Events) {\n        /**\n         * See [[PreflightTest.completedEvent]]\n         */\n        Events[\"Completed\"] = \"completed\";\n        /**\n         * See [[PreflightTest.connectedEvent]]\n         */\n        Events[\"Connected\"] = \"connected\";\n        /**\n         * See [[PreflightTest.failedEvent]]\n         */\n        Events[\"Failed\"] = \"failed\";\n        /**\n         * See [[PreflightTest.sampleEvent]]\n         */\n        Events[\"Sample\"] = \"sample\";\n        /**\n         * See [[PreflightTest.warningEvent]]\n         */\n        Events[\"Warning\"] = \"warning\";\n    })(Events = PreflightTest.Events || (PreflightTest.Events = {}));\n    /**\n     * Possible status of the test.\n     */\n    var Status;\n    (function (Status) {\n        /**\n         * Connection to Twilio has initiated.\n         */\n        Status[\"Connecting\"] = \"connecting\";\n        /**\n         * Connection to Twilio has been established.\n         */\n        Status[\"Connected\"] = \"connected\";\n        /**\n         * The connection to Twilio has been disconnected and the test call has completed.\n         */\n        Status[\"Completed\"] = \"completed\";\n        /**\n         * The test has stopped and failed.\n         */\n        Status[\"Failed\"] = \"failed\";\n    })(Status = PreflightTest.Status || (PreflightTest.Status = {}));\n})(PreflightTest = exports.PreflightTest || (exports.PreflightTest = {}));\nexports.PreflightTest = PreflightTest;\n//# sourceMappingURL=preflight.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/preflight/preflight.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/pstream.js":
/*!**********************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/pstream.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nvar C = __webpack_require__(/*! ./constants */ \"./node_modules/twilio-client/es5/twilio/constants.js\");\nvar EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\nvar Log = __webpack_require__(/*! ./log */ \"./node_modules/twilio-client/es5/twilio/log.js\").default;\nvar util = __webpack_require__(/*! util */ \"./node_modules/util/util.js\");\n\nvar WSTransport = __webpack_require__(/*! ./wstransport */ \"./node_modules/twilio-client/es5/twilio/wstransport.js\").default;\n\nvar _require = __webpack_require__(/*! ./errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\"),\n    GeneralErrors = _require.GeneralErrors,\n    SignalingErrors = _require.SignalingErrors;\n\nvar PSTREAM_VERSION = '1.5';\n\n/**\n * Constructor for PStream objects.\n *\n * @exports PStream as Twilio.PStream\n * @memberOf Twilio\n * @borrows EventEmitter#addListener as #addListener\n * @borrows EventEmitter#removeListener as #removeListener\n * @borrows EventEmitter#emit as #emit\n * @borrows EventEmitter#hasListener as #hasListener\n * @constructor\n * @param {string} token The Twilio capabilities JWT\n * @param {string[]} uris An array of PStream endpoint URIs\n * @param {object} [options]\n * @config {boolean} [options.backoffMaxMs=20000] Enable debugging\n */\nfunction PStream(token, uris, options) {\n  if (!(this instanceof PStream)) {\n    return new PStream(token, uris, options);\n  }\n  var defaults = {\n    TransportFactory: WSTransport\n  };\n  options = options || {};\n  for (var prop in defaults) {\n    if (prop in options) continue;\n    options[prop] = defaults[prop];\n  }\n  this.options = options;\n  this.token = token || '';\n  this.status = 'disconnected';\n  this.gateway = null;\n  this.region = null;\n  this._messageQueue = [];\n  this._uris = uris;\n\n  this._handleTransportClose = this._handleTransportClose.bind(this);\n  this._handleTransportError = this._handleTransportError.bind(this);\n  this._handleTransportMessage = this._handleTransportMessage.bind(this);\n  this._handleTransportOpen = this._handleTransportOpen.bind(this);\n\n  this._log = Log.getInstance();\n\n  // NOTE(mroberts): EventEmitter requires that we catch all errors.\n  this.on('error', function () {});\n\n  /*\n   *events used by device\n   *'invite',\n   *'ready',\n   *'error',\n   *'offline',\n   *\n   *'cancel',\n   *'presence',\n   *'roster',\n   *'answer',\n   *'candidate',\n   *'hangup'\n   */\n\n  var self = this;\n\n  this.addListener('ready', function () {\n    self.status = 'ready';\n  });\n\n  this.addListener('offline', function () {\n    self.status = 'offline';\n  });\n\n  this.addListener('close', function () {\n    self._log.info('Received \"close\" from server. Destroying PStream...');\n    self._destroy();\n  });\n\n  this.transport = new this.options.TransportFactory(this._uris, {\n    backoffMaxMs: this.options.backoffMaxMs\n  });\n\n  Object.defineProperties(this, {\n    uri: {\n      enumerable: true,\n      get: function get() {\n        return this.transport.uri;\n      }\n    }\n  });\n\n  this.transport.on('close', this._handleTransportClose);\n  this.transport.on('error', this._handleTransportError);\n  this.transport.on('message', this._handleTransportMessage);\n  this.transport.on('open', this._handleTransportOpen);\n  this.transport.open();\n\n  return this;\n}\n\nutil.inherits(PStream, EventEmitter);\n\nPStream.prototype._handleTransportClose = function () {\n  this.emit('transportClose');\n\n  if (this.status !== 'disconnected') {\n    if (this.status !== 'offline') {\n      this.emit('offline', this);\n    }\n    this.status = 'disconnected';\n  }\n};\n\nPStream.prototype._handleTransportError = function (error) {\n  if (!error) {\n    this.emit('error', { error: {\n        code: 31000,\n        message: 'Websocket closed without a provided reason',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      } });\n    return;\n  }\n  // We receive some errors without call metadata (just the error). We need to convert these\n  // to be contained within the 'error' field so that these errors match the expected format.\n  this.emit('error', typeof error.code !== 'undefined' ? { error: error } : error);\n};\n\nPStream.prototype._handleTransportMessage = function (msg) {\n  if (!msg || !msg.data || typeof msg.data !== 'string') {\n    return;\n  }\n\n  var _JSON$parse = JSON.parse(msg.data),\n      type = _JSON$parse.type,\n      _JSON$parse$payload = _JSON$parse.payload,\n      payload = _JSON$parse$payload === undefined ? {} : _JSON$parse$payload;\n\n  this.gateway = payload.gateway || this.gateway;\n  this.region = payload.region || this.region;\n\n  if (type === 'error' && payload.error) {\n    payload.error.twilioError = new SignalingErrors.ConnectionError();\n  }\n\n  this.emit(type, payload);\n};\n\nPStream.prototype._handleTransportOpen = function () {\n  var _this = this;\n\n  this.status = 'connected';\n  this.setToken(this.token);\n\n  var messages = this._messageQueue.splice(0, this._messageQueue.length);\n  messages.forEach(function (message) {\n    return _this._publish.apply(_this, _toConsumableArray(message));\n  });\n};\n\n/**\n * @return {string}\n */\nPStream.toString = function () {\n  return '[Twilio.PStream class]';\n};\nPStream.prototype.toString = function () {\n  return '[Twilio.PStream instance]';\n};\n\nPStream.prototype.setToken = function (token) {\n  this._log.info('Setting token and publishing listen');\n  this.token = token;\n  var payload = {\n    token: token,\n    browserinfo: getBrowserInfo()\n  };\n  this._publish('listen', payload);\n};\n\nPStream.prototype.register = function (mediaCapabilities) {\n  var regPayload = {\n    media: mediaCapabilities\n  };\n  this._publish('register', regPayload, true);\n};\n\nPStream.prototype.invite = function (sdp, callsid, preflight, params) {\n  var payload = {\n    callsid: callsid,\n    sdp: sdp,\n    preflight: !!preflight,\n    twilio: params ? { params: params } : {}\n  };\n  this._publish('invite', payload, true);\n};\n\nPStream.prototype.answer = function (sdp, callsid) {\n  this._publish('answer', { sdp: sdp, callsid: callsid }, true);\n};\n\nPStream.prototype.dtmf = function (callsid, digits) {\n  this._publish('dtmf', { callsid: callsid, dtmf: digits }, true);\n};\n\nPStream.prototype.hangup = function (callsid, message) {\n  var payload = message ? { callsid: callsid, message: message } : { callsid: callsid };\n  this._publish('hangup', payload, true);\n};\n\nPStream.prototype.reject = function (callsid) {\n  this._publish('reject', { callsid: callsid }, true);\n};\n\nPStream.prototype.reinvite = function (sdp, callsid) {\n  this._publish('reinvite', { sdp: sdp, callsid: callsid }, false);\n};\n\nPStream.prototype._destroy = function () {\n  this.transport.removeListener('close', this._handleTransportClose);\n  this.transport.removeListener('error', this._handleTransportError);\n  this.transport.removeListener('message', this._handleTransportMessage);\n  this.transport.removeListener('open', this._handleTransportOpen);\n  this.transport.close();\n\n  this.emit('offline', this);\n};\n\nPStream.prototype.destroy = function () {\n  this._log.info('PStream.destroy() called...');\n  this._destroy();\n  return this;\n};\n\nPStream.prototype.publish = function (type, payload) {\n  return this._publish(type, payload, true);\n};\n\nPStream.prototype._publish = function (type, payload, shouldRetry) {\n  var msg = JSON.stringify({\n    type: type,\n    version: PSTREAM_VERSION,\n    payload: payload\n  });\n  var isSent = !!this.transport.send(msg);\n\n  if (!isSent) {\n    this.emit('error', { error: {\n        code: 31009,\n        message: 'No transport available to send or receive messages',\n        twilioError: new GeneralErrors.TransportError()\n      } });\n\n    if (shouldRetry) {\n      this._messageQueue.push([type, payload, true]);\n    }\n  }\n};\n\nfunction getBrowserInfo() {\n  var nav = typeof navigator !== 'undefined' ? navigator : {};\n\n  var info = {\n    p: 'browser',\n    v: C.RELEASE_VERSION,\n    browser: {\n      userAgent: nav.userAgent || 'unknown',\n      platform: nav.platform || 'unknown'\n    },\n    plugin: 'rtc'\n  };\n\n  return info;\n}\n\nmodule.exports = PStream;\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/pstream.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/regions.js":
/*!**********************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/regions.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("\nvar _a, _b, _c, _d;\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * @packageDocumentation\n * @module Voice\n * This module describes valid and deprecated regions.\n */\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\");\n/**\n * Valid deprecated regions.\n * @private\n */\nvar DeprecatedRegion;\n(function (DeprecatedRegion) {\n    DeprecatedRegion[\"Au\"] = \"au\";\n    DeprecatedRegion[\"Br\"] = \"br\";\n    DeprecatedRegion[\"Ie\"] = \"ie\";\n    DeprecatedRegion[\"Jp\"] = \"jp\";\n    DeprecatedRegion[\"Sg\"] = \"sg\";\n    DeprecatedRegion[\"UsOr\"] = \"us-or\";\n    DeprecatedRegion[\"UsVa\"] = \"us-va\";\n})(DeprecatedRegion = exports.DeprecatedRegion || (exports.DeprecatedRegion = {}));\n/**\n * Valid edges.\n * @private\n */\nvar Edge;\n(function (Edge) {\n    /**\n     * Public edges\n     */\n    Edge[\"Sydney\"] = \"sydney\";\n    Edge[\"SaoPaulo\"] = \"sao-paulo\";\n    Edge[\"Dublin\"] = \"dublin\";\n    Edge[\"Frankfurt\"] = \"frankfurt\";\n    Edge[\"Tokyo\"] = \"tokyo\";\n    Edge[\"Singapore\"] = \"singapore\";\n    Edge[\"Ashburn\"] = \"ashburn\";\n    Edge[\"Umatilla\"] = \"umatilla\";\n    Edge[\"Roaming\"] = \"roaming\";\n    /**\n     * Interconnect edges\n     */\n    Edge[\"AshburnIx\"] = \"ashburn-ix\";\n    Edge[\"SanJoseIx\"] = \"san-jose-ix\";\n    Edge[\"LondonIx\"] = \"london-ix\";\n    Edge[\"FrankfurtIx\"] = \"frankfurt-ix\";\n    Edge[\"SingaporeIx\"] = \"singapore-ix\";\n    Edge[\"SydneyIx\"] = \"sydney-ix\";\n    Edge[\"TokyoIx\"] = \"tokyo-ix\";\n})(Edge = exports.Edge || (exports.Edge = {}));\n/**\n * Valid current regions.\n *\n * @deprecated\n *\n * CLIENT-6831\n * This is no longer used or updated for checking validity of regions in the\n * SDK. We now allow any string to be passed for region. Invalid regions won't\n * be able to connect, and won't throw an exception.\n *\n * CLIENT-7519\n * This is used again to temporarily convert edge values to regions as part of\n * Phase 1 Regional. This is still considered deprecated.\n *\n * @private\n */\nvar Region;\n(function (Region) {\n    Region[\"Au1\"] = \"au1\";\n    Region[\"Au1Ix\"] = \"au1-ix\";\n    Region[\"Br1\"] = \"br1\";\n    Region[\"De1\"] = \"de1\";\n    Region[\"De1Ix\"] = \"de1-ix\";\n    Region[\"Gll\"] = \"gll\";\n    Region[\"Ie1\"] = \"ie1\";\n    Region[\"Ie1Ix\"] = \"ie1-ix\";\n    Region[\"Ie1Tnx\"] = \"ie1-tnx\";\n    Region[\"Jp1\"] = \"jp1\";\n    Region[\"Jp1Ix\"] = \"jp1-ix\";\n    Region[\"Sg1\"] = \"sg1\";\n    Region[\"Sg1Ix\"] = \"sg1-ix\";\n    Region[\"Sg1Tnx\"] = \"sg1-tnx\";\n    Region[\"Us1\"] = \"us1\";\n    Region[\"Us1Ix\"] = \"us1-ix\";\n    Region[\"Us1Tnx\"] = \"us1-tnx\";\n    Region[\"Us2\"] = \"us2\";\n    Region[\"Us2Ix\"] = \"us2-ix\";\n    Region[\"Us2Tnx\"] = \"us2-tnx\";\n})(Region = exports.Region || (exports.Region = {}));\n/**\n * Deprecated regions. Maps the deprecated region to its equivalent up-to-date region.\n * @private\n */\nexports.deprecatedRegions = (_a = {},\n    _a[DeprecatedRegion.Au] = Region.Au1,\n    _a[DeprecatedRegion.Br] = Region.Br1,\n    _a[DeprecatedRegion.Ie] = Region.Ie1,\n    _a[DeprecatedRegion.Jp] = Region.Jp1,\n    _a[DeprecatedRegion.Sg] = Region.Sg1,\n    _a[DeprecatedRegion.UsOr] = Region.Us1,\n    _a[DeprecatedRegion.UsVa] = Region.Us1,\n    _a);\n/**\n * Region shortcodes. Maps the full region name from AWS to the Twilio shortcode.\n * @private\n */\nexports.regionShortcodes = {\n    ASIAPAC_SINGAPORE: Region.Sg1,\n    ASIAPAC_SYDNEY: Region.Au1,\n    ASIAPAC_TOKYO: Region.Jp1,\n    EU_FRANKFURT: Region.De1,\n    EU_IRELAND: Region.Ie1,\n    SOUTH_AMERICA_SAO_PAULO: Region.Br1,\n    US_EAST_VIRGINIA: Region.Us1,\n    US_WEST_OREGON: Region.Us2,\n};\n/**\n * Region URIs. Maps the Twilio shortcode to its Twilio endpoint URI.\n * @private\n */\nvar regionURIs = (_b = {},\n    _b[Region.Au1] = 'chunderw-vpc-gll-au1.twilio.com',\n    _b[Region.Au1Ix] = 'chunderw-vpc-gll-au1-ix.twilio.com',\n    _b[Region.Br1] = 'chunderw-vpc-gll-br1.twilio.com',\n    _b[Region.De1] = 'chunderw-vpc-gll-de1.twilio.com',\n    _b[Region.De1Ix] = 'chunderw-vpc-gll-de1-ix.twilio.com',\n    _b[Region.Gll] = 'chunderw-vpc-gll.twilio.com',\n    _b[Region.Ie1] = 'chunderw-vpc-gll-ie1.twilio.com',\n    _b[Region.Ie1Ix] = 'chunderw-vpc-gll-ie1-ix.twilio.com',\n    _b[Region.Ie1Tnx] = 'chunderw-vpc-gll-ie1-tnx.twilio.com',\n    _b[Region.Jp1] = 'chunderw-vpc-gll-jp1.twilio.com',\n    _b[Region.Jp1Ix] = 'chunderw-vpc-gll-jp1-ix.twilio.com',\n    _b[Region.Sg1] = 'chunderw-vpc-gll-sg1.twilio.com',\n    _b[Region.Sg1Ix] = 'chunderw-vpc-gll-sg1-ix.twilio.com',\n    _b[Region.Sg1Tnx] = 'chunderw-vpc-gll-sg1-tnx.twilio.com',\n    _b[Region.Us1] = 'chunderw-vpc-gll-us1.twilio.com',\n    _b[Region.Us1Ix] = 'chunderw-vpc-gll-us1-ix.twilio.com',\n    _b[Region.Us1Tnx] = 'chunderw-vpc-gll-us1-tnx.twilio.com',\n    _b[Region.Us2] = 'chunderw-vpc-gll-us2.twilio.com',\n    _b[Region.Us2Ix] = 'chunderw-vpc-gll-us2-ix.twilio.com',\n    _b[Region.Us2Tnx] = 'chunderw-vpc-gll-us2-tnx.twilio.com',\n    _b);\n/**\n * Edge to region mapping, as part of Phase 1 Regional (CLIENT-7519).\n * Temporary.\n * @private\n */\nexports.edgeToRegion = (_c = {},\n    _c[Edge.Sydney] = Region.Au1,\n    _c[Edge.SaoPaulo] = Region.Br1,\n    _c[Edge.Dublin] = Region.Ie1,\n    _c[Edge.Frankfurt] = Region.De1,\n    _c[Edge.Tokyo] = Region.Jp1,\n    _c[Edge.Singapore] = Region.Sg1,\n    _c[Edge.Ashburn] = Region.Us1,\n    _c[Edge.Umatilla] = Region.Us2,\n    _c[Edge.Roaming] = Region.Gll,\n    /**\n     * Interconnect edges\n     */\n    _c[Edge.AshburnIx] = Region.Us1Ix,\n    _c[Edge.SanJoseIx] = Region.Us2Ix,\n    _c[Edge.LondonIx] = Region.Ie1Ix,\n    _c[Edge.FrankfurtIx] = Region.De1Ix,\n    _c[Edge.SingaporeIx] = Region.Sg1Ix,\n    _c[Edge.SydneyIx] = Region.Au1Ix,\n    _c[Edge.TokyoIx] = Region.Jp1Ix,\n    _c);\n/**\n * Region to edge mapping, as part of Phase 1 Regional (CLIENT-7519).\n * Temporary.\n * @private\n */\nexports.regionToEdge = (_d = {},\n    _d[Region.Au1] = Edge.Sydney,\n    _d[Region.Br1] = Edge.SaoPaulo,\n    _d[Region.Ie1] = Edge.Dublin,\n    _d[Region.De1] = Edge.Frankfurt,\n    _d[Region.Jp1] = Edge.Tokyo,\n    _d[Region.Sg1] = Edge.Singapore,\n    _d[Region.Us1] = Edge.Ashburn,\n    _d[Region.Us2] = Edge.Umatilla,\n    _d[Region.Gll] = Edge.Roaming,\n    /**\n     * Interconnect edges\n     */\n    _d[Region.Us1Ix] = Edge.AshburnIx,\n    _d[Region.Us2Ix] = Edge.SanJoseIx,\n    _d[Region.Ie1Ix] = Edge.LondonIx,\n    _d[Region.De1Ix] = Edge.FrankfurtIx,\n    _d[Region.Sg1Ix] = Edge.SingaporeIx,\n    _d[Region.Au1Ix] = Edge.SydneyIx,\n    _d[Region.Jp1Ix] = Edge.TokyoIx,\n    /**\n     * Tnx regions\n     */\n    _d[Region.Us1Tnx] = Edge.AshburnIx,\n    _d[Region.Us2Tnx] = Edge.AshburnIx,\n    _d[Region.Ie1Tnx] = Edge.LondonIx,\n    _d[Region.Sg1Tnx] = Edge.SingaporeIx,\n    _d);\n/**\n * The default region to connect to and create a chunder uri from if region is\n * not defined.\n * @constant\n * @private\n */\nexports.defaultRegion = 'gll';\n/**\n * The default edge to connect to and create a chunder uri from, if the edge\n * parameter is not specified during setup in `Device`.\n * @constant\n */\nexports.defaultEdge = Edge.Roaming;\n/**\n * The default chunder URI to connect to, should map to region `gll`.\n * @constant\n * @private\n */\nexports.defaultChunderRegionURI = 'chunderw-vpc-gll.twilio.com';\n/**\n * String template for a region chunder URI\n * @param region - The region.\n */\nfunction createChunderRegionUri(region) {\n    return region === exports.defaultRegion\n        ? exports.defaultChunderRegionURI\n        : \"chunderw-vpc-gll-\" + region + \".twilio.com\";\n}\n/**\n * String template for an edge chunder URI\n * @param edge - The edge.\n */\nfunction createChunderEdgeUri(edge) {\n    return \"voice-js.\" + edge + \".twilio.com\";\n}\n/**\n * Get the URI associated with the passed region or edge. If both are passed,\n * then we want to fail `Device` setup, so we throw an error.\n * As of CLIENT-7519, Regions are deprecated in favor of edges as part of\n * Phase 1 Regional.\n *\n * @private\n * @param edge - A string or an array of edge values\n * @param region - The region shortcode.\n * @param [onDeprecated] - A callback containing the deprecation message to be\n *   warned when the passed parameters are deprecated.\n * @returns An array of chunder URIs\n */\nfunction getChunderURIs(edge, region, onDeprecated) {\n    if (!!region && typeof region !== 'string') {\n        throw new errors_1.InvalidArgumentError('If `region` is provided, it must be of type `string`.');\n    }\n    if (!!edge && typeof edge !== 'string' && !Array.isArray(edge)) {\n        throw new errors_1.InvalidArgumentError('If `edge` is provided, it must be of type `string` or an array of strings.');\n    }\n    var deprecatedMessages = [];\n    var uris;\n    if (region && edge) {\n        throw new errors_1.InvalidArgumentError('You cannot specify `region` when `edge` is specified in' +\n            '`Twilio.Device.Options`.');\n    }\n    else if (region) {\n        var chunderRegion = region;\n        deprecatedMessages.push('Regions are deprecated in favor of edges. Please see this page for ' +\n            'documentation: https://www.twilio.com/docs/voice/client/edges.');\n        var isDeprecatedRegion = Object.values(DeprecatedRegion).includes(chunderRegion);\n        if (isDeprecatedRegion) {\n            chunderRegion = exports.deprecatedRegions[chunderRegion];\n        }\n        var isKnownRegion = Object.values(Region).includes(chunderRegion);\n        if (isKnownRegion) {\n            var preferredEdge = exports.regionToEdge[chunderRegion];\n            deprecatedMessages.push(\"Region \\\"\" + chunderRegion + \"\\\" is deprecated, please use `edge` \" +\n                (\"\\\"\" + preferredEdge + \"\\\".\"));\n        }\n        uris = [createChunderRegionUri(chunderRegion)];\n    }\n    else if (edge) {\n        var edgeValues_1 = Object.values(Edge);\n        var edgeParams = Array.isArray(edge) ? edge : [edge];\n        uris = edgeParams.map(function (param) { return edgeValues_1.includes(param)\n            ? createChunderRegionUri(exports.edgeToRegion[param])\n            : createChunderEdgeUri(param); });\n    }\n    else {\n        uris = [exports.defaultChunderRegionURI];\n    }\n    if (onDeprecated && deprecatedMessages.length) {\n        setTimeout(function () { return onDeprecated(deprecatedMessages.join('\\n')); });\n    }\n    return uris;\n}\nexports.getChunderURIs = getChunderURIs;\n/**\n * Get the region shortcode by its full AWS region string.\n *\n * @private\n * @param region - The region's full AWS string.\n */\nfunction getRegionShortcode(region) {\n    return exports.regionShortcodes[region] || null;\n}\nexports.getRegionShortcode = getRegionShortcode;\n//# sourceMappingURL=regions.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/regions.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/request.js":
/*!**********************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/request.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar XHR = __webpack_require__(/*! xmlhttprequest */ \"./node_modules/twilio-client/browser/xmlhttprequest.js\").XMLHttpRequest;\n\nfunction request(method, params, callback) {\n  var options = {};\n  options.XMLHttpRequest = options.XMLHttpRequest || XHR;\n  var xhr = new options.XMLHttpRequest();\n\n  xhr.open(method, params.url, true);\n  xhr.onreadystatechange = function onreadystatechange() {\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (200 <= xhr.status && xhr.status < 300) {\n      callback(null, xhr.responseText);\n      return;\n    }\n\n    callback(new Error(xhr.responseText));\n  };\n\n  for (var headerName in params.headers) {\n    xhr.setRequestHeader(headerName, params.headers[headerName]);\n  }\n\n  xhr.send(JSON.stringify(params.body));\n}\n/**\n * Use XMLHttpRequest to get a network resource.\n * @param {String} method - HTTP Method\n * @param {Object} params - Request parameters\n * @param {String} params.url - URL of the resource\n * @param {Array}  params.headers - An array of headers to pass [{ headerName : headerBody }]\n * @param {Object} params.body - A JSON body to send to the resource\n * @returns {response}\n **/\nvar Request = request;\n\n/**\n * Sugar function for request('GET', params, callback);\n * @param {Object} params - Request parameters\n * @param {Request~get} callback - The callback that handles the response.\n */\nRequest.get = function get(params, callback) {\n  return new this('GET', params, callback);\n};\n\n/**\n * Sugar function for request('POST', params, callback);\n * @param {Object} params - Request parameters\n * @param {Request~post} callback - The callback that handles the response.\n */\nRequest.post = function post(params, callback) {\n  return new this('POST', params, callback);\n};\n\nmodule.exports = Request;\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/request.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/rtc/getusermedia.js":
/*!*******************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/rtc/getusermedia.js ***!
  \*******************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar NotSupportedError = __webpack_require__(/*! ../errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\").NotSupportedError;\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/twilio-client/es5/twilio/util.js\");\n\nfunction getUserMedia(constraints, options) {\n  options = options || {};\n  options.util = options.util || util;\n  options.navigator = options.navigator || (typeof navigator !== 'undefined' ? navigator : null);\n\n  return new Promise(function (resolve, reject) {\n    if (!options.navigator) {\n      throw new NotSupportedError('getUserMedia is not supported');\n    }\n\n    switch ('function') {\n      case _typeof(options.navigator.mediaDevices && options.navigator.mediaDevices.getUserMedia):\n        return resolve(options.navigator.mediaDevices.getUserMedia(constraints));\n      case _typeof(options.navigator.webkitGetUserMedia):\n        return options.navigator.webkitGetUserMedia(constraints, resolve, reject);\n      case _typeof(options.navigator.mozGetUserMedia):\n        return options.navigator.mozGetUserMedia(constraints, resolve, reject);\n      case _typeof(options.navigator.getUserMedia):\n        return options.navigator.getUserMedia(constraints, resolve, reject);\n      default:\n        throw new NotSupportedError('getUserMedia is not supported');\n    }\n  }).catch(function (e) {\n    throw options.util.isFirefox() && e.name === 'NotReadableError' ? new NotSupportedError('Firefox does not currently support opening multiple audio input tracks' + 'simultaneously, even across different tabs.\\n' + 'Related Bugzilla thread: https://bugzilla.mozilla.org/show_bug.cgi?id=1299324') : e;\n  });\n}\n\nmodule.exports = getUserMedia;\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/rtc/getusermedia.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/rtc/icecandidate.js":
/*!*******************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/rtc/icecandidate.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

"use strict";
eval("\n/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/**\n * {@link RTCIceCandidate} parses an ICE candidate gathered by the browser\n * and returns a IceCandidate object\n */\nvar IceCandidate = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param iceCandidate RTCIceCandidate coming from the browser\n     */\n    function IceCandidate(iceCandidate, isRemote) {\n        if (isRemote === void 0) { isRemote = false; }\n        /**\n         * Whether this is deleted from the list of candidate gathered\n         */\n        this.deleted = false;\n        var cost;\n        var parts = iceCandidate.candidate.split('network-cost ');\n        if (parts[1]) {\n            cost = parseInt(parts[1], 10);\n        }\n        this.candidateType = iceCandidate.type;\n        this.ip = iceCandidate.ip || iceCandidate.address;\n        this.isRemote = isRemote;\n        this.networkCost = cost;\n        this.port = iceCandidate.port;\n        this.priority = iceCandidate.priority;\n        this.protocol = iceCandidate.protocol;\n        this.relatedAddress = iceCandidate.relatedAddress;\n        this.relatedPort = iceCandidate.relatedPort;\n        this.tcpType = iceCandidate.tcpType;\n        this.transportId = iceCandidate.sdpMid;\n    }\n    /**\n     * Get the payload object for insights\n     */\n    IceCandidate.prototype.toPayload = function () {\n        return {\n            'candidate_type': this.candidateType,\n            'deleted': this.deleted,\n            'ip': this.ip,\n            'is_remote': this.isRemote,\n            'network-cost': this.networkCost,\n            'port': this.port,\n            'priority': this.priority,\n            'protocol': this.protocol,\n            'related_address': this.relatedAddress,\n            'related_port': this.relatedPort,\n            'tcp_type': this.tcpType,\n            'transport_id': this.transportId,\n        };\n    };\n    return IceCandidate;\n}());\nexports.IceCandidate = IceCandidate;\n//# sourceMappingURL=icecandidate.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/rtc/icecandidate.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/rtc/index.js":
/*!************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/rtc/index.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar PeerConnection = __webpack_require__(/*! ./peerconnection */ \"./node_modules/twilio-client/es5/twilio/rtc/peerconnection.js\");\n\nvar _require = __webpack_require__(/*! ./rtcpc */ \"./node_modules/twilio-client/es5/twilio/rtc/rtcpc.js\"),\n    test = _require.test;\n\nfunction enabled() {\n  return test();\n}\n\nfunction getMediaEngine() {\n  return typeof RTCIceGatherer !== 'undefined' ? 'ORTC' : 'WebRTC';\n}\n\nmodule.exports = {\n  enabled: enabled,\n  getMediaEngine: getMediaEngine,\n  PeerConnection: PeerConnection\n};\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/rtc/index.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/rtc/mockrtcstatsreport.js":
/*!*************************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/rtc/mockrtcstatsreport.js ***!
  \*************************************************************************/
/***/ ((module) => {

eval("/**\n * This file was imported from another project. If making changes to this file, please don't\n * make them here. Make them on the linked repo below, then copy back:\n * https://code.hq.twilio.com/client/MockRTCStatsReport\n */\n/* eslint-disable no-undefined */\n// The legacy max volume, which is the positive half of a signed short integer.\nvar OLD_MAX_VOLUME = 32767;\nvar NativeRTCStatsReport = typeof window !== 'undefined'\n    ? window.RTCStatsReport : undefined;\n/**\n * Create a MockRTCStatsReport wrapper around a Map of RTCStats objects. If RTCStatsReport is available\n *   natively, it will be inherited so that instanceof checks pass.\n * @constructor\n * @extends RTCStatsReport\n * @param {Map<string, RTCStats>} statsMap - A Map of RTCStats objects to wrap\n *   with a MockRTCStatsReport object.\n */\nfunction MockRTCStatsReport(statsMap) {\n    if (!(this instanceof MockRTCStatsReport)) {\n        return new MockRTCStatsReport(statsMap);\n    }\n    var self = this;\n    Object.defineProperties(this, {\n        size: {\n            enumerable: true,\n            get: function () {\n                return self._map.size;\n            }\n        },\n        _map: { value: statsMap }\n    });\n    this[Symbol.iterator] = statsMap[Symbol.iterator];\n}\n// If RTCStatsReport is available natively, inherit it. Keep our constructor.\nif (NativeRTCStatsReport) {\n    MockRTCStatsReport.prototype = Object.create(NativeRTCStatsReport.prototype);\n    MockRTCStatsReport.prototype.constructor = MockRTCStatsReport;\n}\n// Map the Map-like read methods to the underlying Map\n['entries', 'forEach', 'get', 'has', 'keys', 'values'].forEach(function (key) {\n    MockRTCStatsReport.prototype[key] = function () {\n        var _a;\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return (_a = this._map)[key].apply(_a, args);\n    };\n});\n/**\n * Convert an array of RTCStats objects into a mock RTCStatsReport object.\n * @param {Array<RTCStats>}\n * @return {MockRTCStatsReport}\n */\nMockRTCStatsReport.fromArray = function fromArray(array) {\n    return new MockRTCStatsReport(array.reduce(function (map, rtcStats) {\n        map.set(rtcStats.id, rtcStats);\n        return map;\n    }, new Map()));\n};\n/**\n * Convert a legacy RTCStatsResponse object into a mock RTCStatsReport object.\n * @param {RTCStatsResponse} statsResponse - An RTCStatsResponse object returned by the\n *   legacy getStats(callback) method in Chrome.\n * @return {MockRTCStatsReport} A mock RTCStatsReport object.\n */\nMockRTCStatsReport.fromRTCStatsResponse = function fromRTCStatsResponse(statsResponse) {\n    var activeCandidatePairId;\n    var transportIds = new Map();\n    var statsMap = statsResponse.result().reduce(function (map, report) {\n        var id = report.id;\n        switch (report.type) {\n            case 'googCertificate':\n                map.set(id, createRTCCertificateStats(report));\n                break;\n            case 'datachannel':\n                map.set(id, createRTCDataChannelStats(report));\n                break;\n            case 'googCandidatePair':\n                if (getBoolean(report, 'googActiveConnection')) {\n                    activeCandidatePairId = id;\n                }\n                map.set(id, createRTCIceCandidatePairStats(report));\n                break;\n            case 'localcandidate':\n                map.set(id, createRTCIceCandidateStats(report, false));\n                break;\n            case 'remotecandidate':\n                map.set(id, createRTCIceCandidateStats(report, true));\n                break;\n            case 'ssrc':\n                if (isPresent(report, 'packetsReceived')) {\n                    map.set(\"rtp-\" + id, createRTCInboundRTPStreamStats(report));\n                }\n                else {\n                    map.set(\"rtp-\" + id, createRTCOutboundRTPStreamStats(report));\n                }\n                map.set(\"track-\" + id, createRTCMediaStreamTrackStats(report));\n                map.set(\"codec-\" + id, createRTCCodecStats(report));\n                break;\n            case 'googComponent':\n                var transportReport = createRTCTransportStats(report);\n                transportIds.set(transportReport.selectedCandidatePairId, id);\n                map.set(id, createRTCTransportStats(report));\n                break;\n        }\n        return map;\n    }, new Map());\n    if (activeCandidatePairId) {\n        var activeTransportId = transportIds.get(activeCandidatePairId);\n        if (activeTransportId) {\n            statsMap.get(activeTransportId).dtlsState = 'connected';\n        }\n    }\n    return new MockRTCStatsReport(statsMap);\n};\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCTransportStats}\n */\nfunction createRTCTransportStats(report) {\n    return {\n        type: 'transport',\n        id: report.id,\n        timestamp: Date.parse(report.timestamp),\n        bytesSent: undefined,\n        bytesReceived: undefined,\n        rtcpTransportStatsId: undefined,\n        dtlsState: undefined,\n        selectedCandidatePairId: report.stat('selectedCandidatePairId'),\n        localCertificateId: report.stat('localCertificateId'),\n        remoteCertificateId: report.stat('remoteCertificateId')\n    };\n}\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCCodecStats}\n */\nfunction createRTCCodecStats(report) {\n    return {\n        type: 'codec',\n        id: report.id,\n        timestamp: Date.parse(report.timestamp),\n        payloadType: undefined,\n        mimeType: report.stat('mediaType') + \"/\" + report.stat('googCodecName'),\n        clockRate: undefined,\n        channels: undefined,\n        sdpFmtpLine: undefined,\n        implementation: undefined\n    };\n}\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCMediaStreamTrackStats}\n */\nfunction createRTCMediaStreamTrackStats(report) {\n    return {\n        type: 'track',\n        id: report.id,\n        timestamp: Date.parse(report.timestamp),\n        trackIdentifier: report.stat('googTrackId'),\n        remoteSource: undefined,\n        ended: undefined,\n        kind: report.stat('mediaType'),\n        detached: undefined,\n        ssrcIds: undefined,\n        frameWidth: isPresent(report, 'googFrameWidthReceived')\n            ? getInt(report, 'googFrameWidthReceived')\n            : getInt(report, 'googFrameWidthSent'),\n        frameHeight: isPresent(report, 'googFrameHeightReceived')\n            ? getInt(report, 'googFrameHeightReceived')\n            : getInt(report, 'googFrameHeightSent'),\n        framesPerSecond: undefined,\n        framesSent: getInt(report, 'framesEncoded'),\n        framesReceived: undefined,\n        framesDecoded: getInt(report, 'framesDecoded'),\n        framesDropped: undefined,\n        framesCorrupted: undefined,\n        partialFramesLost: undefined,\n        fullFramesLost: undefined,\n        audioLevel: isPresent(report, 'audioOutputLevel')\n            ? getInt(report, 'audioOutputLevel') / OLD_MAX_VOLUME\n            : (getInt(report, 'audioInputLevel') || 0) / OLD_MAX_VOLUME,\n        echoReturnLoss: getFloat(report, 'googEchoCancellationReturnLoss'),\n        echoReturnLossEnhancement: getFloat(report, 'googEchoCancellationReturnLossEnhancement')\n    };\n}\n/**\n * @param {RTCLegacyStatsReport} report\n * @param {boolean} isInbound - Whether to create an inbound stats object, or outbound.\n * @returns {RTCRTPStreamStats}\n */\nfunction createRTCRTPStreamStats(report, isInbound) {\n    return {\n        id: report.id,\n        timestamp: Date.parse(report.timestamp),\n        ssrc: report.stat('ssrc'),\n        associateStatsId: undefined,\n        isRemote: undefined,\n        mediaType: report.stat('mediaType'),\n        trackId: \"track-\" + report.id,\n        transportId: report.stat('transportId'),\n        codecId: \"codec-\" + report.id,\n        firCount: isInbound\n            ? getInt(report, 'googFirsSent')\n            : undefined,\n        pliCount: isInbound\n            ? getInt(report, 'googPlisSent')\n            : getInt(report, 'googPlisReceived'),\n        nackCount: isInbound\n            ? getInt(report, 'googNacksSent')\n            : getInt(report, 'googNacksReceived'),\n        sliCount: undefined,\n        qpSum: getInt(report, 'qpSum')\n    };\n}\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCInboundRTPStreamStats}\n */\nfunction createRTCInboundRTPStreamStats(report) {\n    var rtp = createRTCRTPStreamStats(report, true);\n    Object.assign(rtp, {\n        type: 'inbound-rtp',\n        packetsReceived: getInt(report, 'packetsReceived'),\n        bytesReceived: getInt(report, 'bytesReceived'),\n        packetsLost: getInt(report, 'packetsLost'),\n        jitter: convertMsToSeconds(report.stat('googJitterReceived')),\n        fractionLost: undefined,\n        roundTripTime: convertMsToSeconds(report.stat('googRtt')),\n        packetsDiscarded: undefined,\n        packetsRepaired: undefined,\n        burstPacketsLost: undefined,\n        burstPacketsDiscarded: undefined,\n        burstLossCount: undefined,\n        burstDiscardCount: undefined,\n        burstLossRate: undefined,\n        burstDiscardRate: undefined,\n        gapLossRate: undefined,\n        gapDiscardRate: undefined,\n        framesDecoded: getInt(report, 'framesDecoded')\n    });\n    return rtp;\n}\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCOutboundRTPStreamStats}\n */\nfunction createRTCOutboundRTPStreamStats(report) {\n    var rtp = createRTCRTPStreamStats(report, false);\n    Object.assign(rtp, {\n        type: 'outbound-rtp',\n        remoteTimestamp: undefined,\n        packetsSent: getInt(report, 'packetsSent'),\n        bytesSent: getInt(report, 'bytesSent'),\n        targetBitrate: undefined,\n        framesEncoded: getInt(report, 'framesEncoded')\n    });\n    return rtp;\n}\n/**\n * @param {RTCLegacyStatsReport} report\n * @param {boolean} isRemote - Whether to create for a remote candidate, or local candidate.\n * @returns {RTCIceCandidateStats}\n */\nfunction createRTCIceCandidateStats(report, isRemote) {\n    return {\n        type: isRemote\n            ? 'remote-candidate'\n            : 'local-candidate',\n        id: report.id,\n        timestamp: Date.parse(report.timestamp),\n        transportId: undefined,\n        isRemote: isRemote,\n        ip: report.stat('ipAddress'),\n        port: getInt(report, 'portNumber'),\n        protocol: report.stat('transport'),\n        candidateType: translateCandidateType(report.stat('candidateType')),\n        priority: getFloat(report, 'priority'),\n        url: undefined,\n        relayProtocol: undefined,\n        deleted: undefined\n    };\n}\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCIceCandidatePairStats}\n */\nfunction createRTCIceCandidatePairStats(report) {\n    return {\n        type: 'candidate-pair',\n        id: report.id,\n        timestamp: Date.parse(report.timestamp),\n        transportId: report.stat('googChannelId'),\n        localCandidateId: report.stat('localCandidateId'),\n        remoteCandidateId: report.stat('remoteCandidateId'),\n        state: undefined,\n        priority: undefined,\n        nominated: undefined,\n        writable: getBoolean(report, 'googWritable'),\n        readable: undefined,\n        bytesSent: getInt(report, 'bytesSent'),\n        bytesReceived: getInt(report, 'bytesReceived'),\n        lastPacketSentTimestamp: undefined,\n        lastPacketReceivedTimestamp: undefined,\n        totalRoundTripTime: undefined,\n        currentRoundTripTime: convertMsToSeconds(report.stat('googRtt')),\n        availableOutgoingBitrate: undefined,\n        availableIncomingBitrate: undefined,\n        requestsReceived: getInt(report, 'requestsReceived'),\n        requestsSent: getInt(report, 'requestsSent'),\n        responsesReceived: getInt(report, 'responsesReceived'),\n        responsesSent: getInt(report, 'responsesSent'),\n        retransmissionsReceived: undefined,\n        retransmissionsSent: undefined,\n        consentRequestsSent: getInt(report, 'consentRequestsSent')\n    };\n}\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCIceCertificateStats}\n */\nfunction createRTCCertificateStats(report) {\n    return {\n        type: 'certificate',\n        id: report.id,\n        timestamp: Date.parse(report.timestamp),\n        fingerprint: report.stat('googFingerprint'),\n        fingerprintAlgorithm: report.stat('googFingerprintAlgorithm'),\n        base64Certificate: report.stat('googDerBase64'),\n        issuerCertificateId: report.stat('googIssuerId')\n    };\n}\n/**\n * @param {RTCLegacyStatsReport} report\n * @returns {RTCDataChannelStats}\n */\nfunction createRTCDataChannelStats(report) {\n    return {\n        type: 'data-channel',\n        id: report.id,\n        timestamp: Date.parse(report.timestamp),\n        label: report.stat('label'),\n        protocol: report.stat('protocol'),\n        datachannelid: report.stat('datachannelid'),\n        transportId: report.stat('transportId'),\n        state: report.stat('state'),\n        messagesSent: undefined,\n        bytesSent: undefined,\n        messagesReceived: undefined,\n        bytesReceived: undefined\n    };\n}\n/**\n * @param {number} inMs - A time in milliseconds\n * @returns {number} The time in seconds\n */\nfunction convertMsToSeconds(inMs) {\n    return isNaN(inMs) || inMs === ''\n        ? undefined\n        : parseInt(inMs, 10) / 1000;\n}\n/**\n * @param {string} type - A type in the legacy format\n * @returns {string} The type adjusted to new standards for known naming changes\n */\nfunction translateCandidateType(type) {\n    switch (type) {\n        case 'peerreflexive':\n            return 'prflx';\n        case 'serverreflexive':\n            return 'srflx';\n        case 'host':\n        case 'relay':\n        default:\n            return type;\n    }\n}\nfunction getInt(report, statName) {\n    var stat = report.stat(statName);\n    return isPresent(report, statName)\n        ? parseInt(stat, 10)\n        : undefined;\n}\nfunction getFloat(report, statName) {\n    var stat = report.stat(statName);\n    return isPresent(report, statName)\n        ? parseFloat(stat)\n        : undefined;\n}\nfunction getBoolean(report, statName) {\n    var stat = report.stat(statName);\n    return isPresent(report, statName)\n        ? (stat === 'true' || stat === true)\n        : undefined;\n}\nfunction isPresent(report, statName) {\n    var stat = report.stat(statName);\n    return typeof stat !== 'undefined' && stat !== '';\n}\nmodule.exports = MockRTCStatsReport;\n//# sourceMappingURL=mockrtcstatsreport.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/rtc/mockrtcstatsreport.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/rtc/mos.js":
/*!**********************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/rtc/mos.js ***!
  \**********************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nvar rfactorConstants = {\n  r0: 94.768,\n  is: 1.42611\n};\n\n/**\n * Calculate the mos score of a stats object\n * @param {number} rtt\n * @param {number} jitter\n * @param {number} fractionLost - The fraction of packets that have been lost\n     Calculated by packetsLost / totalPackets\n * @return {number} mos - Calculated MOS, 1.0 through roughly 4.5\n */\nfunction calcMos(rtt, jitter, fractionLost) {\n  if (!isPositiveNumber(rtt) || !isPositiveNumber(jitter) || !isPositiveNumber(fractionLost)) {\n    return null;\n  }\n\n  var rFactor = calculateRFactor(rtt, jitter, fractionLost);\n\n  var mos = 1 + 0.035 * rFactor + 0.000007 * rFactor * (rFactor - 60) * (100 - rFactor);\n\n  // Make sure MOS is in range\n  var isValid = mos >= 1.0 && mos < 4.6;\n  return isValid ? mos : null;\n}\n\nfunction calculateRFactor(rtt, jitter, fractionLost) {\n  var effectiveLatency = rtt + jitter * 2 + 10;\n  var rFactor = 0;\n\n  switch (true) {\n    case effectiveLatency < 160:\n      rFactor = rfactorConstants.r0 - effectiveLatency / 40;\n      break;\n    case effectiveLatency < 1000:\n      rFactor = rfactorConstants.r0 - (effectiveLatency - 120) / 10;\n      break;\n    case effectiveLatency >= 1000:\n      rFactor = rfactorConstants.r0 - effectiveLatency / 100;\n      break;\n  }\n\n  var multiplier = .01;\n  switch (true) {\n    case fractionLost === -1:\n      multiplier = 0;\n      rFactor = 0;\n      break;\n    case fractionLost <= rFactor / 2.5:\n      multiplier = 2.5;\n      break;\n    case fractionLost > rFactor / 2.5 && fractionLost < 100:\n      multiplier = .25;\n      break;\n  }\n\n  rFactor -= fractionLost * multiplier;\n  return rFactor;\n}\n\nfunction isPositiveNumber(n) {\n  return typeof n === 'number' && !isNaN(n) && isFinite(n) && n >= 0;\n}\n\nmodule.exports = {\n  calculate: calcMos\n};\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/rtc/mos.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/rtc/peerconnection.js":
/*!*********************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/rtc/peerconnection.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _require = __webpack_require__(/*! ../errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\"),\n    InvalidArgumentError = _require.InvalidArgumentError,\n    MediaErrors = _require.MediaErrors,\n    NotSupportedError = _require.NotSupportedError,\n    SignalingErrors = _require.SignalingErrors;\n\nvar Log = __webpack_require__(/*! ../log */ \"./node_modules/twilio-client/es5/twilio/log.js\").default;\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/twilio-client/es5/twilio/util.js\");\nvar RTCPC = __webpack_require__(/*! ./rtcpc */ \"./node_modules/twilio-client/es5/twilio/rtc/rtcpc.js\");\n\nvar _require2 = __webpack_require__(/*! ./sdp */ \"./node_modules/twilio-client/es5/twilio/rtc/sdp.js\"),\n    setIceAggressiveNomination = _require2.setIceAggressiveNomination;\n\nvar ICE_GATHERING_TIMEOUT = 15000;\nvar ICE_GATHERING_FAIL_NONE = 'none';\nvar ICE_GATHERING_FAIL_TIMEOUT = 'timeout';\nvar INITIAL_ICE_CONNECTION_STATE = 'new';\nvar VOLUME_INTERVAL_MS = 50;\n\n/**\n * @typedef {Object} PeerConnection\n * @param audioHelper\n * @param pstream\n * @param options\n * @return {PeerConnection}\n * @constructor\n */\nfunction PeerConnection(audioHelper, pstream, getUserMedia, options) {\n  if (!audioHelper || !pstream || !getUserMedia) {\n    throw new InvalidArgumentError('Audiohelper, pstream and getUserMedia are required arguments');\n  }\n\n  if (!(this instanceof PeerConnection)) {\n    return new PeerConnection(audioHelper, pstream, getUserMedia, options);\n  }\n\n  function noop() {}\n  this.onopen = noop;\n  this.onerror = noop;\n  this.onclose = noop;\n  this.ondisconnected = noop;\n  this.onfailed = noop;\n  this.onconnected = noop;\n  this.onreconnected = noop;\n  this.onsignalingstatechange = noop;\n  this.ondtlstransportstatechange = noop;\n  this.onicegatheringfailure = noop;\n  this.onicegatheringstatechange = noop;\n  this.oniceconnectionstatechange = noop;\n  this.onpcconnectionstatechange = noop;\n  this.onicecandidate = noop;\n  this.onselectedcandidatepairchange = noop;\n  this.onvolume = noop;\n  this.version = null;\n  this.pstream = pstream;\n  this.stream = null;\n  this.sinkIds = new Set(['default']);\n  this.outputs = new Map();\n  this.status = 'connecting';\n  this.callSid = null;\n  this.isMuted = false;\n  this.getUserMedia = getUserMedia;\n\n  var AudioContext = typeof window !== 'undefined' && (window.AudioContext || window.webkitAudioContext);\n  this._isSinkSupported = !!AudioContext && typeof HTMLAudioElement !== 'undefined' && HTMLAudioElement.prototype.setSinkId;\n  // NOTE(mmalavalli): Since each Connection creates its own AudioContext,\n  // after 6 instances an exception is thrown. Refer https://www.w3.org/2011/audio/track/issues/3.\n  // In order to get around it, we are re-using the Device's AudioContext.\n  this._audioContext = AudioContext && audioHelper._audioContext;\n  this._hasIceCandidates = false;\n  this._hasIceGatheringFailures = false;\n  this._iceGatheringTimeoutId = null;\n  this._masterAudio = null;\n  this._masterAudioDeviceId = null;\n  this._mediaStreamSource = null;\n  this._dtmfSender = null;\n  this._dtmfSenderUnsupported = false;\n  this._callEvents = [];\n  this._nextTimeToPublish = Date.now();\n  this._onAnswerOrRinging = noop;\n  this._onHangup = noop;\n  this._remoteStream = null;\n  this._shouldManageStream = true;\n  this._iceState = INITIAL_ICE_CONNECTION_STATE;\n  this._isUnifiedPlan = options.isUnifiedPlan;\n\n  this.options = options = options || {};\n  this.navigator = options.navigator || (typeof navigator !== 'undefined' ? navigator : null);\n  this.util = options.util || util;\n  this.codecPreferences = options.codecPreferences;\n\n  this._log = Log.getInstance();\n\n  return this;\n}\n\nPeerConnection.prototype.uri = function () {\n  return this._uri;\n};\n\n/**\n * Open the underlying RTCPeerConnection with a MediaStream obtained by\n *   passed constraints. The resulting MediaStream is created internally\n *   and will therefore be managed and destroyed internally.\n * @param {MediaStreamConstraints} constraints\n */\nPeerConnection.prototype.openWithConstraints = function (constraints) {\n  return this.getUserMedia({ audio: constraints }).then(this._setInputTracksFromStream.bind(this, false));\n};\n\n/**\n * Replace the existing input audio tracks with the audio tracks from the\n *   passed input audio stream. We re-use the existing stream because\n *   the AnalyzerNode is bound to the stream.\n * @param {MediaStream} stream\n */\nPeerConnection.prototype.setInputTracksFromStream = function (stream) {\n  var self = this;\n  return this._setInputTracksFromStream(true, stream).then(function () {\n    self._shouldManageStream = false;\n  });\n};\n\nPeerConnection.prototype._createAnalyser = function (audioContext, options) {\n  options = Object.assign({\n    fftSize: 32,\n    smoothingTimeConstant: 0.3\n  }, options);\n\n  var analyser = audioContext.createAnalyser();\n  for (var field in options) {\n    analyser[field] = options[field];\n  }\n\n  return analyser;\n};\n\nPeerConnection.prototype._setVolumeHandler = function (handler) {\n  this.onvolume = handler;\n};\nPeerConnection.prototype._startPollingVolume = function () {\n  if (!this._audioContext || !this.stream || !this._remoteStream) {\n    return;\n  }\n\n  var audioContext = this._audioContext;\n\n  var inputAnalyser = this._inputAnalyser = this._createAnalyser(audioContext);\n  var inputBufferLength = inputAnalyser.frequencyBinCount;\n  var inputDataArray = new Uint8Array(inputBufferLength);\n  this._inputAnalyser2 = this._createAnalyser(audioContext, {\n    minDecibels: -127,\n    maxDecibels: 0,\n    smoothingTimeConstant: 0\n  });\n\n  var outputAnalyser = this._outputAnalyser = this._createAnalyser(audioContext);\n  var outputBufferLength = outputAnalyser.frequencyBinCount;\n  var outputDataArray = new Uint8Array(outputBufferLength);\n  this._outputAnalyser2 = this._createAnalyser(audioContext, {\n    minDecibels: -127,\n    maxDecibels: 0,\n    smoothingTimeConstant: 0\n  });\n\n  this._updateInputStreamSource(this.stream);\n  this._updateOutputStreamSource(this._remoteStream);\n\n  var self = this;\n  setTimeout(function emitVolume() {\n    if (!self._audioContext) {\n      return;\n    } else if (self.status === 'closed') {\n      self._inputAnalyser.disconnect();\n      self._outputAnalyser.disconnect();\n      self._inputAnalyser2.disconnect();\n      self._outputAnalyser2.disconnect();\n      return;\n    }\n\n    self._inputAnalyser.getByteFrequencyData(inputDataArray);\n    var inputVolume = self.util.average(inputDataArray);\n\n    self._inputAnalyser2.getByteFrequencyData(inputDataArray);\n    var inputVolume2 = self.util.average(inputDataArray);\n\n    self._outputAnalyser.getByteFrequencyData(outputDataArray);\n    var outputVolume = self.util.average(outputDataArray);\n\n    self._outputAnalyser2.getByteFrequencyData(outputDataArray);\n    var outputVolume2 = self.util.average(outputDataArray);\n    self.onvolume(inputVolume / 255, outputVolume / 255, inputVolume2, outputVolume2);\n\n    setTimeout(emitVolume, VOLUME_INTERVAL_MS);\n  }, VOLUME_INTERVAL_MS);\n};\n\nPeerConnection.prototype._stopStream = function _stopStream(stream) {\n  // We shouldn't stop the tracks if they were not created inside\n  //   this PeerConnection.\n  if (!this._shouldManageStream) {\n    return;\n  }\n\n  if (typeof MediaStreamTrack.prototype.stop === 'function') {\n    var audioTracks = typeof stream.getAudioTracks === 'function' ? stream.getAudioTracks() : stream.audioTracks;\n    audioTracks.forEach(function (track) {\n      track.stop();\n    });\n  }\n  // NOTE(mroberts): This is just a fallback to any ancient browsers that may\n  // not implement MediaStreamTrack.stop.\n  else {\n      stream.stop();\n    }\n};\n\n/**\n * Update the stream source with the new input audio stream.\n * @param {MediaStream} stream\n * @private\n */\nPeerConnection.prototype._updateInputStreamSource = function (stream) {\n  if (this._inputStreamSource) {\n    this._inputStreamSource.disconnect();\n  }\n\n  this._inputStreamSource = this._audioContext.createMediaStreamSource(stream);\n  this._inputStreamSource.connect(this._inputAnalyser);\n  this._inputStreamSource.connect(this._inputAnalyser2);\n};\n\n/**\n * Update the stream source with the new ouput audio stream.\n * @param {MediaStream} stream\n * @private\n */\nPeerConnection.prototype._updateOutputStreamSource = function (stream) {\n  if (this._outputStreamSource) {\n    this._outputStreamSource.disconnect();\n  }\n\n  this._outputStreamSource = this._audioContext.createMediaStreamSource(stream);\n  this._outputStreamSource.connect(this._outputAnalyser);\n  this._outputStreamSource.connect(this._outputAnalyser2);\n};\n\n/**\n * Replace the tracks of the current stream with new tracks. We do this rather than replacing the\n *   whole stream because AnalyzerNodes are bound to a stream.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksFromStream = function (shouldClone, newStream) {\n  return this._isUnifiedPlan ? this._setInputTracksForUnifiedPlan(shouldClone, newStream) : this._setInputTracksForPlanB(shouldClone, newStream);\n};\n\n/**\n * Replace the tracks of the current stream with new tracks using the 'plan-b' method.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksForPlanB = function (shouldClone, newStream) {\n  var _this = this;\n\n  if (!newStream) {\n    return Promise.reject(new InvalidArgumentError('Can not set input stream to null while in a call'));\n  }\n\n  if (!newStream.getAudioTracks().length) {\n    return Promise.reject(new InvalidArgumentError('Supplied input stream has no audio tracks'));\n  }\n\n  var localStream = this.stream;\n\n  if (!localStream) {\n    // We can't use MediaStream.clone() here because it stopped copying over tracks\n    //   as of Chrome 61. https://bugs.chromium.org/p/chromium/issues/detail?id=770908\n    this.stream = shouldClone ? cloneStream(newStream) : newStream;\n  } else {\n    this._stopStream(localStream);\n\n    removeStream(this.version.pc, localStream);\n    localStream.getAudioTracks().forEach(localStream.removeTrack, localStream);\n    newStream.getAudioTracks().forEach(localStream.addTrack, localStream);\n    addStream(this.version.pc, newStream);\n\n    this._updateInputStreamSource(this.stream);\n  }\n\n  // Apply mute settings to new input track\n  this.mute(this.isMuted);\n\n  if (!this.version) {\n    return Promise.resolve(this.stream);\n  }\n\n  return new Promise(function (resolve, reject) {\n    _this.version.createOffer(_this.options.maxAverageBitrate, _this.codecPreferences, { audio: true }, function () {\n      _this.version.processAnswer(_this.codecPreferences, _this._answerSdp, function () {\n        resolve(_this.stream);\n      }, reject);\n    }, reject);\n  });\n};\n\n/**\n * Replace the tracks of the current stream with new tracks using the 'unified-plan' method.\n * @param {Boolean} shouldClone - Whether the stream should be cloned if it is the first\n *   stream, or set directly. As a rule of thumb, streams that are passed in externally may have\n *   their lifecycle managed externally, and should be cloned so that we do not tear it or its tracks\n *   down when the call ends. Streams that we create internally (inside PeerConnection) should be set\n *   directly so that when the call ends it is disposed of.\n * @param {MediaStream} newStream - The new stream to copy the tracks over from.\n * @private\n */\nPeerConnection.prototype._setInputTracksForUnifiedPlan = function (shouldClone, newStream) {\n  var _this2 = this;\n\n  if (!newStream) {\n    return Promise.reject(new InvalidArgumentError('Can not set input stream to null while in a call'));\n  }\n\n  if (!newStream.getAudioTracks().length) {\n    return Promise.reject(new InvalidArgumentError('Supplied input stream has no audio tracks'));\n  }\n\n  var localStream = this.stream;\n  var getStreamPromise = function getStreamPromise() {\n    // Apply mute settings to new input track\n    _this2.mute(_this2.isMuted);\n    return Promise.resolve(_this2.stream);\n  };\n\n  if (!localStream) {\n    // We can't use MediaStream.clone() here because it stopped copying over tracks\n    //   as of Chrome 61. https://bugs.chromium.org/p/chromium/issues/detail?id=770908\n    this.stream = shouldClone ? cloneStream(newStream) : newStream;\n  } else {\n    // If the call was started with gUM, and we are now replacing that track with an\n    // external stream's tracks, we should stop the old managed track.\n    if (this._shouldManageStream) {\n      this._stopStream(localStream);\n    }\n\n    if (!this._sender) {\n      this._sender = this.version.pc.getSenders()[0];\n    }\n\n    return this._sender.replaceTrack(newStream.getAudioTracks()[0]).then(function () {\n      _this2._updateInputStreamSource(newStream);\n      return getStreamPromise();\n    });\n  }\n\n  return getStreamPromise();\n};\n\nPeerConnection.prototype._onInputDevicesChanged = function () {\n  if (!this.stream) {\n    return;\n  }\n\n  // If all of our active tracks are ended, then our active input was lost\n  var activeInputWasLost = this.stream.getAudioTracks().every(function (track) {\n    return track.readyState === 'ended';\n  });\n\n  // We only want to act if we manage the stream in PeerConnection (It was created\n  // here, rather than passed in.)\n  if (activeInputWasLost && this._shouldManageStream) {\n    this.openWithConstraints(true);\n  }\n};\n\nPeerConnection.prototype._onIceGatheringFailure = function (type) {\n  this._hasIceGatheringFailures = true;\n  this.onicegatheringfailure(type);\n};\n\nPeerConnection.prototype._onMediaConnectionStateChange = function (newState) {\n  var previousState = this._iceState;\n\n  if (previousState === newState || newState !== 'connected' && newState !== 'disconnected' && newState !== 'failed') {\n    return;\n  }\n  this._iceState = newState;\n\n  var message = void 0;\n  switch (newState) {\n    case 'connected':\n      if (previousState === 'disconnected' || previousState === 'failed') {\n        message = 'ICE liveliness check succeeded. Connection with Twilio restored';\n        this._log.info(message);\n        this.onreconnected(message);\n      } else {\n        message = 'Media connection established.';\n        this._log.info(message);\n        this.onconnected(message);\n      }\n      this._stopIceGatheringTimeout();\n      this._hasIceGatheringFailures = false;\n      break;\n    case 'disconnected':\n      message = 'ICE liveliness check failed. May be having trouble connecting to Twilio';\n      this._log.info(message);\n      this.ondisconnected(message);\n      break;\n    case 'failed':\n      message = 'Connection with Twilio was interrupted.';\n      this._log.info(message);\n      this.onfailed(message);\n      break;\n  }\n};\n\nPeerConnection.prototype._setSinkIds = function (sinkIds) {\n  if (!this._isSinkSupported) {\n    return Promise.reject(new NotSupportedError('Audio output selection is not supported by this browser'));\n  }\n\n  this.sinkIds = new Set(sinkIds.forEach ? sinkIds : [sinkIds]);\n  return this.version ? this._updateAudioOutputs() : Promise.resolve();\n};\n\n/**\n * Start timeout for ICE Gathering\n */\nPeerConnection.prototype._startIceGatheringTimeout = function startIceGatheringTimeout() {\n  var _this3 = this;\n\n  this._stopIceGatheringTimeout();\n  this._iceGatheringTimeoutId = setTimeout(function () {\n    _this3._onIceGatheringFailure(ICE_GATHERING_FAIL_TIMEOUT);\n  }, ICE_GATHERING_TIMEOUT);\n};\n\n/**\n * Stop timeout for ICE Gathering\n */\nPeerConnection.prototype._stopIceGatheringTimeout = function stopIceGatheringTimeout() {\n  clearInterval(this._iceGatheringTimeoutId);\n};\n\nPeerConnection.prototype._updateAudioOutputs = function updateAudioOutputs() {\n  var addedOutputIds = Array.from(this.sinkIds).filter(function (id) {\n    return !this.outputs.has(id);\n  }, this);\n\n  var removedOutputIds = Array.from(this.outputs.keys()).filter(function (id) {\n    return !this.sinkIds.has(id);\n  }, this);\n\n  var self = this;\n  var createOutputPromises = addedOutputIds.map(this._createAudioOutput, this);\n  return Promise.all(createOutputPromises).then(function () {\n    return Promise.all(removedOutputIds.map(self._removeAudioOutput, self));\n  });\n};\n\nPeerConnection.prototype._createAudio = function createAudio(arr) {\n  return new Audio(arr);\n};\n\nPeerConnection.prototype._createAudioOutput = function createAudioOutput(id) {\n  var dest = this._audioContext.createMediaStreamDestination();\n  this._mediaStreamSource.connect(dest);\n\n  var audio = this._createAudio();\n  setAudioSource(audio, dest.stream);\n\n  var self = this;\n  return audio.setSinkId(id).then(function () {\n    return audio.play();\n  }).then(function () {\n    self.outputs.set(id, {\n      audio: audio,\n      dest: dest\n    });\n  });\n};\n\nPeerConnection.prototype._removeAudioOutputs = function removeAudioOutputs() {\n  if (this._masterAudio && typeof this._masterAudioDeviceId !== 'undefined') {\n    this._disableOutput(this, this._masterAudioDeviceId);\n    this.outputs.delete(this._masterAudioDeviceId);\n    this._masterAudioDeviceId = null;\n\n    // Release the audio resources before deleting the audio\n    if (!this._masterAudio.paused) {\n      this._masterAudio.pause();\n    }\n    if (typeof this._masterAudio.srcObject !== 'undefined') {\n      this._masterAudio.srcObject = null;\n    } else {\n      this._masterAudio.src = '';\n    }\n    this._masterAudio = null;\n  }\n\n  return Array.from(this.outputs.keys()).map(this._removeAudioOutput, this);\n};\n\nPeerConnection.prototype._disableOutput = function disableOutput(pc, id) {\n  var output = pc.outputs.get(id);\n  if (!output) {\n    return;\n  }\n\n  if (output.audio) {\n    output.audio.pause();\n    output.audio.src = '';\n  }\n\n  if (output.dest) {\n    output.dest.disconnect();\n  }\n};\n\n/**\n * Disable a non-master output, and update the master output to assume its state. This\n *   is called when the device ID assigned to the master output has been removed from\n *   active devices. We can not simply remove the master audio output, so we must\n *   instead reassign it.\n * @private\n * @param {PeerConnection} pc\n * @param {string} masterId - The current device ID assigned to the master audio element.\n */\nPeerConnection.prototype._reassignMasterOutput = function reassignMasterOutput(pc, masterId) {\n  var masterOutput = pc.outputs.get(masterId);\n  pc.outputs.delete(masterId);\n\n  var self = this;\n  var idToReplace = Array.from(pc.outputs.keys())[0] || 'default';\n  return masterOutput.audio.setSinkId(idToReplace).then(function () {\n    self._disableOutput(pc, idToReplace);\n\n    pc.outputs.set(idToReplace, masterOutput);\n    pc._masterAudioDeviceId = idToReplace;\n  }).catch(function rollback() {\n    pc.outputs.set(masterId, masterOutput);\n    self._log.info('Could not reassign master output. Attempted to roll back.');\n  });\n};\n\nPeerConnection.prototype._removeAudioOutput = function removeAudioOutput(id) {\n  if (this._masterAudioDeviceId === id) {\n    return this._reassignMasterOutput(this, id);\n  }\n\n  this._disableOutput(this, id);\n  this.outputs.delete(id);\n\n  return Promise.resolve();\n};\n\n/**\n * Use an AudioContext to potentially split our audio output stream to multiple\n *   audio devices. This is only available to browsers with AudioContext and\n *   HTMLAudioElement.setSinkId() available. We save the source stream in\n *   _masterAudio, and use it for one of the active audio devices. We keep\n *   track of its ID because we must replace it if we lose its initial device.\n */\nPeerConnection.prototype._onAddTrack = function onAddTrack(pc, stream) {\n  var audio = pc._masterAudio = this._createAudio();\n  setAudioSource(audio, stream);\n  audio.play();\n\n  // Assign the initial master audio element to a random active output device\n  var deviceId = Array.from(pc.outputs.keys())[0] || 'default';\n  pc._masterAudioDeviceId = deviceId;\n  pc.outputs.set(deviceId, {\n    audio: audio\n  });\n\n  pc._mediaStreamSource = pc._audioContext.createMediaStreamSource(stream);\n\n  pc.pcStream = stream;\n  pc._updateAudioOutputs();\n};\n\n/**\n * Use a single audio element to play the audio output stream. This does not\n *   support multiple output devices, and is a fallback for when AudioContext\n *   and/or HTMLAudioElement.setSinkId() is not available to the client.\n */\nPeerConnection.prototype._fallbackOnAddTrack = function fallbackOnAddTrack(pc, stream) {\n  var audio = document && document.createElement('audio');\n  audio.autoplay = true;\n\n  if (!setAudioSource(audio, stream)) {\n    pc._log.info('Error attaching stream to element.');\n  }\n\n  pc.outputs.set('default', {\n    audio: audio\n  });\n};\n\nPeerConnection.prototype._setEncodingParameters = function (enableDscp) {\n  if (!enableDscp || !this._sender || typeof this._sender.getParameters !== 'function' || typeof this._sender.setParameters !== 'function') {\n    return;\n  }\n\n  var params = this._sender.getParameters();\n  if (!params.priority && !(params.encodings && params.encodings.length)) {\n    return;\n  }\n\n  // This is how MDN's RTPSenderParameters defines priority\n  params.priority = 'high';\n\n  // And this is how it's currently implemented in Chrome M72+\n  if (params.encodings && params.encodings.length) {\n    params.encodings.forEach(function (encoding) {\n      encoding.priority = 'high';\n      encoding.networkPriority = 'high';\n    });\n  }\n\n  this._sender.setParameters(params);\n};\n\nPeerConnection.prototype._setupPeerConnection = function (rtcConstraints, rtcConfiguration) {\n  var _this4 = this;\n\n  var self = this;\n  var version = new (this.options.rtcpcFactory || RTCPC)();\n  version.create(rtcConstraints, rtcConfiguration);\n  addStream(version.pc, this.stream);\n\n  var eventName = 'ontrack' in version.pc ? 'ontrack' : 'onaddstream';\n\n  version.pc[eventName] = function (event) {\n    var stream = self._remoteStream = event.stream || event.streams[0];\n\n    if (typeof version.pc.getSenders === 'function') {\n      _this4._sender = version.pc.getSenders()[0];\n    }\n\n    if (self._isSinkSupported) {\n      self._onAddTrack(self, stream);\n    } else {\n      self._fallbackOnAddTrack(self, stream);\n    }\n\n    self._startPollingVolume();\n  };\n  return version;\n};\n\nPeerConnection.prototype._maybeSetIceAggressiveNomination = function (sdp) {\n  return this.options.forceAggressiveIceNomination ? setIceAggressiveNomination(sdp) : sdp;\n};\n\nPeerConnection.prototype._setupChannel = function () {\n  var _this5 = this;\n\n  var pc = this.version.pc;\n\n  // Chrome 25 supports onopen\n  this.version.pc.onopen = function () {\n    _this5.status = 'open';\n    _this5.onopen();\n  };\n\n  // Chrome 26 doesn't support onopen so must detect state change\n  this.version.pc.onstatechange = function () {\n    if (_this5.version.pc && _this5.version.pc.readyState === 'stable') {\n      _this5.status = 'open';\n      _this5.onopen();\n    }\n  };\n\n  // Chrome 27 changed onstatechange to onsignalingstatechange\n  this.version.pc.onsignalingstatechange = function () {\n    var state = pc.signalingState;\n    _this5._log.info('signalingState is \"' + state + '\"');\n\n    if (_this5.version.pc && _this5.version.pc.signalingState === 'stable') {\n      _this5.status = 'open';\n      _this5.onopen();\n    }\n\n    _this5.onsignalingstatechange(pc.signalingState);\n  };\n\n  // Chrome 72+\n  pc.onconnectionstatechange = function () {\n    _this5._log.info('pc.connectionState is \"' + pc.connectionState + '\"');\n    _this5.onpcconnectionstatechange(pc.connectionState);\n    _this5._onMediaConnectionStateChange(pc.connectionState);\n  };\n\n  pc.onicecandidate = function (event) {\n    var candidate = event.candidate;\n\n    if (candidate) {\n      _this5._hasIceCandidates = true;\n      _this5.onicecandidate(candidate);\n      _this5._setupRTCIceTransportListener();\n    }\n\n    _this5._log.info('ICE Candidate: ' + JSON.stringify(candidate));\n  };\n\n  pc.onicegatheringstatechange = function () {\n    var state = pc.iceGatheringState;\n    if (state === 'gathering') {\n      _this5._startIceGatheringTimeout();\n    } else if (state === 'complete') {\n      _this5._stopIceGatheringTimeout();\n\n      // Fail if no candidates found\n      if (!_this5._hasIceCandidates) {\n        _this5._onIceGatheringFailure(ICE_GATHERING_FAIL_NONE);\n      }\n\n      // There was a failure mid-gathering phase. We want to start our timer and issue\n      // an ice restart if we don't get connected after our timeout\n      if (_this5._hasIceCandidates && _this5._hasIceGatheringFailures) {\n        _this5._startIceGatheringTimeout();\n      }\n    }\n\n    _this5._log.info('pc.iceGatheringState is \"' + pc.iceGatheringState + '\"');\n    _this5.onicegatheringstatechange(state);\n  };\n\n  pc.oniceconnectionstatechange = function () {\n    _this5._log.info('pc.iceConnectionState is \"' + pc.iceConnectionState + '\"');\n    _this5.oniceconnectionstatechange(pc.iceConnectionState);\n    _this5._onMediaConnectionStateChange(pc.iceConnectionState);\n  };\n};\nPeerConnection.prototype._initializeMediaStream = function (rtcConstraints, rtcConfiguration) {\n  // if mediastream already open then do nothing\n  if (this.status === 'open') {\n    return false;\n  }\n  if (this.pstream.status === 'disconnected') {\n    this.onerror({ info: {\n        code: 31000,\n        message: 'Cannot establish connection. Client is disconnected',\n        twilioError: new SignalingErrors.ConnectionDisconnected()\n      } });\n    this.close();\n    return false;\n  }\n  this.version = this._setupPeerConnection(rtcConstraints, rtcConfiguration);\n  this._setupChannel();\n  return true;\n};\n\n/**\n * Remove reconnection-related listeners\n * @private\n */\nPeerConnection.prototype._removeReconnectionListeners = function () {\n  if (this.pstream) {\n    this.pstream.removeListener('answer', this._onAnswerOrRinging);\n    this.pstream.removeListener('hangup', this._onHangup);\n  }\n};\n\n/**\n * Setup a listener for RTCDtlsTransport to capture state changes events\n * @private\n */\nPeerConnection.prototype._setupRTCDtlsTransportListener = function () {\n  var _this6 = this;\n\n  var dtlsTransport = this.getRTCDtlsTransport();\n\n  if (!dtlsTransport || dtlsTransport.onstatechange) {\n    return;\n  }\n\n  var handler = function handler() {\n    _this6._log.info('dtlsTransportState is \"' + dtlsTransport.state + '\"');\n    _this6.ondtlstransportstatechange(dtlsTransport.state);\n  };\n\n  // Publish initial state\n  handler();\n  dtlsTransport.onstatechange = handler;\n};\n\n/**\n * Setup a listener for RTCIceTransport to capture selected candidate pair changes\n * @private\n */\nPeerConnection.prototype._setupRTCIceTransportListener = function () {\n  var _this7 = this;\n\n  var iceTransport = this._getRTCIceTransport();\n\n  if (!iceTransport || iceTransport.onselectedcandidatepairchange) {\n    return;\n  }\n\n  iceTransport.onselectedcandidatepairchange = function () {\n    return _this7.onselectedcandidatepairchange(iceTransport.getSelectedCandidatePair());\n  };\n};\n\n/**\n * Restarts ICE for the current connection\n * ICE Restart failures are ignored. Retries are managed in Connection\n * @private\n */\nPeerConnection.prototype.iceRestart = function () {\n  var _this8 = this;\n\n  if (!this.options.enableIceRestart) {\n    return;\n  }\n  this._log.info('Attempting to restart ICE...');\n  this._hasIceCandidates = false;\n  this.version.createOffer(this.options.maxAverageBitrate, this.codecPreferences, { iceRestart: true }).then(function () {\n    _this8._removeReconnectionListeners();\n\n    _this8._onAnswerOrRinging = function (payload) {\n      _this8._removeReconnectionListeners();\n\n      if (!payload.sdp || _this8.version.pc.signalingState !== 'have-local-offer') {\n        var message = 'Invalid state or param during ICE Restart:' + ('hasSdp:' + !!payload.sdp + ', signalingState:' + _this8.version.pc.signalingState);\n        _this8._log.info(message);\n        return;\n      }\n\n      var sdp = _this8._maybeSetIceAggressiveNomination(payload.sdp);\n      _this8._answerSdp = sdp;\n      if (_this8.status !== 'closed') {\n        _this8.version.processAnswer(_this8.codecPreferences, sdp, null, function (err) {\n          var message = err && err.message ? err.message : err;\n          _this8._log.info('Failed to process answer during ICE Restart. Error: ' + message);\n        });\n      }\n    };\n\n    _this8._onHangup = function () {\n      _this8._log.info('Received hangup during ICE Restart');\n      _this8._removeReconnectionListeners();\n    };\n\n    _this8.pstream.on('answer', _this8._onAnswerOrRinging);\n    _this8.pstream.on('hangup', _this8._onHangup);\n    _this8.pstream.reinvite(_this8.version.getSDP(), _this8.callSid);\n  }).catch(function (err) {\n    var message = err && err.message ? err.message : err;\n    _this8._log.info('Failed to createOffer during ICE Restart. Error: ' + message);\n    // CreateOffer failures doesn't transition ice state to failed\n    // We need trigger it so it can be picked up by retries\n    _this8.onfailed(message);\n  });\n};\n\nPeerConnection.prototype.makeOutgoingCall = function (token, params, callsid, rtcConstraints, rtcConfiguration, onMediaStarted) {\n  var _this9 = this;\n\n  if (!this._initializeMediaStream(rtcConstraints, rtcConfiguration)) {\n    return;\n  }\n\n  var self = this;\n  this.callSid = callsid;\n  function onAnswerSuccess() {\n    if (self.options) {\n      self._setEncodingParameters(self.options.dscp);\n    }\n    onMediaStarted(self.version.pc);\n  }\n  function onAnswerError(err) {\n    var errMsg = err.message || err;\n    self.onerror({ info: {\n        code: 31000,\n        message: 'Error processing answer: ' + errMsg,\n        twilioError: new MediaErrors.ClientRemoteDescFailed()\n      } });\n  }\n  this._onAnswerOrRinging = function (payload) {\n    if (!payload.sdp) {\n      return;\n    }\n\n    var sdp = _this9._maybeSetIceAggressiveNomination(payload.sdp);\n    self._answerSdp = sdp;\n    if (self.status !== 'closed') {\n      self.version.processAnswer(_this9.codecPreferences, sdp, onAnswerSuccess, onAnswerError);\n    }\n    self.pstream.removeListener('answer', self._onAnswerOrRinging);\n    self.pstream.removeListener('ringing', self._onAnswerOrRinging);\n  };\n  this.pstream.on('answer', this._onAnswerOrRinging);\n  this.pstream.on('ringing', this._onAnswerOrRinging);\n\n  function onOfferSuccess() {\n    if (self.status !== 'closed') {\n      self.pstream.invite(self.version.getSDP(), self.callSid, self.options.preflight, params);\n      self._setupRTCDtlsTransportListener();\n    }\n  }\n\n  function onOfferError(err) {\n    var errMsg = err.message || err;\n    self.onerror({ info: {\n        code: 31000,\n        message: 'Error creating the offer: ' + errMsg,\n        twilioError: new MediaErrors.ClientLocalDescFailed()\n      } });\n  }\n\n  this.version.createOffer(this.options.maxAverageBitrate, this.codecPreferences, { audio: true }, onOfferSuccess, onOfferError);\n};\nPeerConnection.prototype.answerIncomingCall = function (callSid, sdp, rtcConstraints, rtcConfiguration, onMediaStarted) {\n  if (!this._initializeMediaStream(rtcConstraints, rtcConfiguration)) {\n    return;\n  }\n  sdp = this._maybeSetIceAggressiveNomination(sdp);\n  this._answerSdp = sdp.replace(/^a=setup:actpass$/gm, 'a=setup:passive');\n  this.callSid = callSid;\n  var self = this;\n  function onAnswerSuccess() {\n    if (self.status !== 'closed') {\n      self.pstream.answer(self.version.getSDP(), callSid);\n      if (self.options) {\n        self._setEncodingParameters(self.options.dscp);\n      }\n      onMediaStarted(self.version.pc);\n      self._setupRTCDtlsTransportListener();\n    }\n  }\n  function onAnswerError(err) {\n    var errMsg = err.message || err;\n    self.onerror({ info: {\n        code: 31000,\n        message: 'Error creating the answer: ' + errMsg,\n        twilioError: new MediaErrors.ClientRemoteDescFailed()\n      } });\n  }\n  this.version.processSDP(this.options.maxAverageBitrate, this.codecPreferences, sdp, { audio: true }, onAnswerSuccess, onAnswerError);\n};\nPeerConnection.prototype.close = function () {\n  if (this.version && this.version.pc) {\n    if (this.version.pc.signalingState !== 'closed') {\n      this.version.pc.close();\n    }\n\n    this.version.pc = null;\n  }\n  if (this.stream) {\n    this.mute(false);\n    this._stopStream(this.stream);\n  }\n  this.stream = null;\n  this._removeReconnectionListeners();\n  this._stopIceGatheringTimeout();\n\n  Promise.all(this._removeAudioOutputs()).catch(function () {\n    // We don't need to alert about failures here.\n  });\n  if (this._mediaStreamSource) {\n    this._mediaStreamSource.disconnect();\n  }\n  if (this._inputAnalyser) {\n    this._inputAnalyser.disconnect();\n  }\n  if (this._outputAnalyser) {\n    this._outputAnalyser.disconnect();\n  }\n  if (this._inputAnalyser2) {\n    this._inputAnalyser2.disconnect();\n  }\n  if (this._outputAnalyser2) {\n    this._outputAnalyser2.disconnect();\n  }\n  this.status = 'closed';\n  this.onclose();\n};\nPeerConnection.prototype.reject = function (callSid) {\n  this.callSid = callSid;\n};\nPeerConnection.prototype.ignore = function (callSid) {\n  this.callSid = callSid;\n};\n/**\n * Mute or unmute input audio. If the stream is not yet present, the setting\n *   is saved and applied to future streams/tracks.\n * @params {boolean} shouldMute - Whether the input audio should\n *   be muted or unmuted.\n */\nPeerConnection.prototype.mute = function (shouldMute) {\n  this.isMuted = shouldMute;\n  if (!this.stream) {\n    return;\n  }\n\n  if (this._sender && this._sender.track) {\n    this._sender.track.enabled = !shouldMute;\n  } else {\n    var audioTracks = typeof this.stream.getAudioTracks === 'function' ? this.stream.getAudioTracks() : this.stream.audioTracks;\n\n    audioTracks.forEach(function (track) {\n      track.enabled = !shouldMute;\n    });\n  }\n};\n/**\n * Get or create an RTCDTMFSender for the first local audio MediaStreamTrack\n * we can get from the RTCPeerConnection. Return null if unsupported.\n * @instance\n * @returns ?RTCDTMFSender\n */\nPeerConnection.prototype.getOrCreateDTMFSender = function getOrCreateDTMFSender() {\n  if (this._dtmfSender || this._dtmfSenderUnsupported) {\n    return this._dtmfSender || null;\n  }\n\n  var self = this;\n  var pc = this.version.pc;\n  if (!pc) {\n    this._log.info('No RTCPeerConnection available to call createDTMFSender on');\n    return null;\n  }\n\n  if (typeof pc.getSenders === 'function' && (typeof RTCDTMFSender === 'function' || typeof RTCDtmfSender === 'function')) {\n    var chosenSender = pc.getSenders().find(function (sender) {\n      return sender.dtmf;\n    });\n    if (chosenSender) {\n      this._log.info('Using RTCRtpSender#dtmf');\n      this._dtmfSender = chosenSender.dtmf;\n      return this._dtmfSender;\n    }\n  }\n\n  if (typeof pc.createDTMFSender === 'function' && typeof pc.getLocalStreams === 'function') {\n    var track = pc.getLocalStreams().map(function (stream) {\n      var tracks = self._getAudioTracks(stream);\n      return tracks && tracks[0];\n    })[0];\n\n    if (!track) {\n      this._log.info('No local audio MediaStreamTrack available on the RTCPeerConnection to pass to createDTMFSender');\n      return null;\n    }\n\n    this._log.info('Creating RTCDTMFSender');\n    this._dtmfSender = pc.createDTMFSender(track);\n    return this._dtmfSender;\n  }\n\n  this._log.info('RTCPeerConnection does not support RTCDTMFSender');\n  this._dtmfSenderUnsupported = true;\n  return null;\n};\n\n/**\n * Get the RTCDtlTransport object from the PeerConnection\n * @returns RTCDtlTransport\n */\nPeerConnection.prototype.getRTCDtlsTransport = function getRTCDtlsTransport() {\n  var sender = this.version && this.version.pc && typeof this.version.pc.getSenders === 'function' && this.version.pc.getSenders()[0];\n  return sender && sender.transport || null;\n};\n\nPeerConnection.prototype._canStopMediaStreamTrack = function () {\n  return typeof MediaStreamTrack.prototype.stop === 'function';\n};\n\nPeerConnection.prototype._getAudioTracks = function (stream) {\n  return typeof stream.getAudioTracks === 'function' ? stream.getAudioTracks() : stream.audioTracks;\n};\n\n/**\n * Get the RTCIceTransport object from the PeerConnection\n * @returns RTCIceTransport\n */\nPeerConnection.prototype._getRTCIceTransport = function _getRTCIceTransport() {\n  var dtlsTransport = this.getRTCDtlsTransport();\n  return dtlsTransport && dtlsTransport.iceTransport || null;\n};\n\n// Is PeerConnection.protocol used outside of our SDK? We should remove this if not.\nPeerConnection.protocol = function () {\n  return RTCPC.test() ? new RTCPC() : null;\n}();\n\nfunction addStream(pc, stream) {\n  if (typeof pc.addTrack === 'function') {\n    stream.getAudioTracks().forEach(function (track) {\n      // The second parameters, stream, should not be necessary per the latest editor's\n      //   draft, but FF requires it. https://bugzilla.mozilla.org/show_bug.cgi?id=1231414\n      pc.addTrack(track, stream);\n    });\n  } else {\n    pc.addStream(stream);\n  }\n}\n\nfunction cloneStream(oldStream) {\n  var newStream = typeof MediaStream !== 'undefined' ? new MediaStream()\n  // eslint-disable-next-line\n  : new webkitMediaStream();\n\n  oldStream.getAudioTracks().forEach(newStream.addTrack, newStream);\n  return newStream;\n}\n\nfunction removeStream(pc, stream) {\n  if (typeof pc.removeTrack === 'function') {\n    pc.getSenders().forEach(function (sender) {\n      pc.removeTrack(sender);\n    });\n  } else {\n    pc.removeStream(stream);\n  }\n}\n\n/**\n * Set the source of an HTMLAudioElement to the specified MediaStream\n * @param {HTMLAudioElement} audio\n * @param {MediaStream} stream\n * @returns {boolean} Whether the audio source was set successfully\n */\nfunction setAudioSource(audio, stream) {\n  if (typeof audio.srcObject !== 'undefined') {\n    audio.srcObject = stream;\n  } else if (typeof audio.mozSrcObject !== 'undefined') {\n    audio.mozSrcObject = stream;\n  } else if (typeof audio.src !== 'undefined') {\n    var _window = audio.options.window || window;\n    audio.src = (_window.URL || _window.webkitURL).createObjectURL(stream);\n  } else {\n    return false;\n  }\n\n  return true;\n}\n\nPeerConnection.enabled = RTCPC.test();\n\nmodule.exports = PeerConnection;\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/rtc/peerconnection.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/rtc/rtcpc.js":
/*!************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/rtc/rtcpc.js ***!
  \************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n/* global webkitRTCPeerConnection, mozRTCPeerConnection, mozRTCSessionDescription, mozRTCIceCandidate */\nvar RTCPeerConnectionShim = __webpack_require__(/*! rtcpeerconnection-shim */ \"./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js\");\nvar Log = __webpack_require__(/*! ../log */ \"./node_modules/twilio-client/es5/twilio/log.js\").default;\n\nvar _require = __webpack_require__(/*! ./sdp */ \"./node_modules/twilio-client/es5/twilio/rtc/sdp.js\"),\n    setCodecPreferences = _require.setCodecPreferences,\n    setMaxAverageBitrate = _require.setMaxAverageBitrate;\n\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/twilio-client/es5/twilio/util.js\");\n\nfunction RTCPC() {\n  if (typeof window === 'undefined') {\n    this.log.info('No RTCPeerConnection implementation available. The window object was not found.');\n    return;\n  }\n\n  if (util.isLegacyEdge()) {\n    this.RTCPeerConnection = new RTCPeerConnectionShim(typeof window !== 'undefined' ? window : __webpack_require__.g);\n  } else if (typeof window.RTCPeerConnection === 'function') {\n    this.RTCPeerConnection = window.RTCPeerConnection;\n  } else if (typeof window.webkitRTCPeerConnection === 'function') {\n    this.RTCPeerConnection = webkitRTCPeerConnection;\n  } else if (typeof window.mozRTCPeerConnection === 'function') {\n    this.RTCPeerConnection = mozRTCPeerConnection;\n    window.RTCSessionDescription = mozRTCSessionDescription;\n    window.RTCIceCandidate = mozRTCIceCandidate;\n  } else {\n    this.log.info('No RTCPeerConnection implementation available');\n  }\n}\n\nRTCPC.prototype.create = function (rtcConstraints, rtcConfiguration) {\n  this.log = Log.getInstance();\n  this.pc = new this.RTCPeerConnection(rtcConfiguration, rtcConstraints);\n};\nRTCPC.prototype.createModernConstraints = function (c) {\n  // createOffer differs between Chrome 23 and Chrome 24+.\n  // See https://groups.google.com/forum/?fromgroups=#!topic/discuss-webrtc/JBDZtrMumyU\n  // Unfortunately I haven't figured out a way to detect which format\n  // is required ahead of time, so we'll first try the old way, and\n  // if we get an exception, then we'll try the new way.\n  if (typeof c === 'undefined') {\n    return null;\n  }\n  // NOTE(mroberts): As of Chrome 38, Chrome still appears to expect\n  // constraints under the 'mandatory' key, and with the first letter of each\n  // constraint capitalized. Firefox, on the other hand, has deprecated the\n  // 'mandatory' key and does not expect the first letter of each constraint\n  // capitalized.\n  var nc = Object.assign({}, c);\n  if (typeof webkitRTCPeerConnection !== 'undefined' && !util.isLegacyEdge()) {\n    nc.mandatory = {};\n    if (typeof c.audio !== 'undefined') {\n      nc.mandatory.OfferToReceiveAudio = c.audio;\n    }\n    if (typeof c.video !== 'undefined') {\n      nc.mandatory.OfferToReceiveVideo = c.video;\n    }\n  } else {\n    if (typeof c.audio !== 'undefined') {\n      nc.offerToReceiveAudio = c.audio;\n    }\n    if (typeof c.video !== 'undefined') {\n      nc.offerToReceiveVideo = c.video;\n    }\n  }\n\n  delete nc.audio;\n  delete nc.video;\n\n  return nc;\n};\nRTCPC.prototype.createOffer = function (maxAverageBitrate, codecPreferences, constraints, onSuccess, onError) {\n  var _this = this;\n\n  constraints = this.createModernConstraints(constraints);\n  return promisifyCreate(this.pc.createOffer, this.pc)(constraints).then(function (offer) {\n    if (!_this.pc) {\n      return Promise.resolve();\n    }\n\n    var sdp = setMaxAverageBitrate(offer.sdp, maxAverageBitrate);\n\n    return promisifySet(_this.pc.setLocalDescription, _this.pc)(new RTCSessionDescription({\n      type: 'offer',\n      sdp: setCodecPreferences(sdp, codecPreferences)\n    }));\n  }).then(onSuccess, onError);\n};\nRTCPC.prototype.createAnswer = function (maxAverageBitrate, codecPreferences, constraints, onSuccess, onError) {\n  var _this2 = this;\n\n  constraints = this.createModernConstraints(constraints);\n  return promisifyCreate(this.pc.createAnswer, this.pc)(constraints).then(function (answer) {\n    if (!_this2.pc) {\n      return Promise.resolve();\n    }\n    var sdp = setMaxAverageBitrate(answer.sdp, maxAverageBitrate);\n\n    return promisifySet(_this2.pc.setLocalDescription, _this2.pc)(new RTCSessionDescription({\n      type: 'answer',\n      sdp: setCodecPreferences(sdp, codecPreferences)\n    }));\n  }).then(onSuccess, onError);\n};\nRTCPC.prototype.processSDP = function (maxAverageBitrate, codecPreferences, sdp, constraints, onSuccess, onError) {\n  var _this3 = this;\n\n  sdp = setCodecPreferences(sdp, codecPreferences);\n  var desc = new RTCSessionDescription({ sdp: sdp, type: 'offer' });\n  return promisifySet(this.pc.setRemoteDescription, this.pc)(desc).then(function () {\n    _this3.createAnswer(maxAverageBitrate, codecPreferences, constraints, onSuccess, onError);\n  });\n};\nRTCPC.prototype.getSDP = function () {\n  return this.pc.localDescription.sdp;\n};\nRTCPC.prototype.processAnswer = function (codecPreferences, sdp, onSuccess, onError) {\n  if (!this.pc) {\n    return Promise.resolve();\n  }\n  sdp = setCodecPreferences(sdp, codecPreferences);\n\n  return promisifySet(this.pc.setRemoteDescription, this.pc)(new RTCSessionDescription({ sdp: sdp, type: 'answer' })).then(onSuccess, onError);\n};\n/* NOTE(mroberts): Firefox 18 through 21 include a `mozRTCPeerConnection`\n   object, but attempting to instantiate it will throw the error\n\n       Error: PeerConnection not enabled (did you set the pref?)\n\n   unless the `media.peerconnection.enabled` pref is enabled. So we need to test\n   if we can actually instantiate `mozRTCPeerConnection`; however, if the user\n   *has* enabled `media.peerconnection.enabled`, we need to perform the same\n   test that we use to detect Firefox 24 and above, namely:\n\n       typeof (new mozRTCPeerConnection()).getLocalStreams === 'function'\n\n\n    NOTE(rrowland): We no longer support Legacy Edge as of Sep 1, 2020.\n*/\nRTCPC.test = function () {\n  if ((typeof navigator === 'undefined' ? 'undefined' : _typeof(navigator)) === 'object') {\n    var getUserMedia = navigator.mediaDevices && navigator.mediaDevices.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.getUserMedia;\n\n    if (util.isLegacyEdge(navigator)) {\n      return false;\n    }\n\n    if (getUserMedia && typeof window.RTCPeerConnection === 'function') {\n      return true;\n    } else if (getUserMedia && typeof window.webkitRTCPeerConnection === 'function') {\n      return true;\n    } else if (getUserMedia && typeof window.mozRTCPeerConnection === 'function') {\n      try {\n        // eslint-disable-next-line babel/new-cap\n        var test = new window.mozRTCPeerConnection();\n        if (typeof test.getLocalStreams !== 'function') return false;\n      } catch (e) {\n        return false;\n      }\n      return true;\n    } else if (typeof RTCIceGatherer !== 'undefined') {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction promisify(fn, ctx, areCallbacksFirst) {\n  return function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    return new Promise(function (resolve) {\n      resolve(fn.apply(ctx, args));\n    }).catch(function () {\n      return new Promise(function (resolve, reject) {\n        fn.apply(ctx, areCallbacksFirst ? [resolve, reject].concat(args) : args.concat([resolve, reject]));\n      });\n    });\n  };\n}\n\nfunction promisifyCreate(fn, ctx) {\n  return promisify(fn, ctx, true);\n}\n\nfunction promisifySet(fn, ctx) {\n  return promisify(fn, ctx, false);\n}\n\nmodule.exports = RTCPC;\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/rtc/rtcpc.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/rtc/sdp.js":
/*!**********************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/rtc/sdp.js ***!
  \**********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar util = __webpack_require__(/*! ../util */ \"./node_modules/twilio-client/es5/twilio/util.js\");\n\nvar ptToFixedBitrateAudioCodecName = {\n  0: 'PCMU',\n  8: 'PCMA'\n};\n\nvar defaultOpusId = 111;\nvar BITRATE_MAX = 510000;\nvar BITRATE_MIN = 6000;\n\nfunction getPreferredCodecInfo(sdp) {\n  var _ref = /a=rtpmap:(\\d+) (\\S+)/m.exec(sdp) || [null, '', ''],\n      _ref2 = _slicedToArray(_ref, 3),\n      codecId = _ref2[1],\n      codecName = _ref2[2];\n\n  var regex = new RegExp('a=fmtp:' + codecId + ' (\\\\S+)', 'm');\n\n  var _ref3 = regex.exec(sdp) || [null, ''],\n      _ref4 = _slicedToArray(_ref3, 2),\n      codecParams = _ref4[1];\n\n  return { codecName: codecName, codecParams: codecParams };\n}\n\nfunction setIceAggressiveNomination(sdp) {\n  // This only works on Chrome. We don't want any side effects on other browsers\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=1024096\n  // https://issues.corp.twilio.com/browse/CLIENT-6911\n  if (!util.isChrome(window, window.navigator)) {\n    return sdp;\n  }\n\n  return sdp.split('\\n').filter(function (line) {\n    return line.indexOf('a=ice-lite') === -1;\n  }).join('\\n');\n}\n\nfunction setMaxAverageBitrate(sdp, maxAverageBitrate) {\n  if (typeof maxAverageBitrate !== 'number' || maxAverageBitrate < BITRATE_MIN || maxAverageBitrate > BITRATE_MAX) {\n    return sdp;\n  }\n\n  var matches = /a=rtpmap:(\\d+) opus/m.exec(sdp);\n  var opusId = matches && matches.length ? matches[1] : defaultOpusId;\n  var regex = new RegExp('a=fmtp:' + opusId);\n  var lines = sdp.split('\\n').map(function (line) {\n    return regex.test(line) ? line + (';maxaveragebitrate=' + maxAverageBitrate) : line;\n  });\n\n  return lines.join('\\n');\n}\n\n/**\n * Return a new SDP string with the re-ordered codec preferences.\n * @param {string} sdp\n * @param {Array<AudioCodec>} preferredCodecs - If empty, the existing order\n *   of audio codecs is preserved\n * @returns {string} Updated SDP string\n */\nfunction setCodecPreferences(sdp, preferredCodecs) {\n  var mediaSections = getMediaSections(sdp);\n  var session = sdp.split('\\r\\nm=')[0];\n  return [session].concat(mediaSections.map(function (section) {\n    // Codec preferences should not be applied to m=application sections.\n    if (!/^m=(audio|video)/.test(section)) {\n      return section;\n    }\n    var kind = section.match(/^m=(audio|video)/)[1];\n    var codecMap = createCodecMapForMediaSection(section);\n    var payloadTypes = getReorderedPayloadTypes(codecMap, preferredCodecs);\n    var newSection = setPayloadTypesInMediaSection(payloadTypes, section);\n\n    var pcmaPayloadTypes = codecMap.get('pcma') || [];\n    var pcmuPayloadTypes = codecMap.get('pcmu') || [];\n    var fixedBitratePayloadTypes = kind === 'audio' ? new Set(pcmaPayloadTypes.concat(pcmuPayloadTypes)) : new Set();\n\n    return fixedBitratePayloadTypes.has(payloadTypes[0]) ? newSection.replace(/\\r\\nb=(AS|TIAS):([0-9]+)/g, '') : newSection;\n  })).join('\\r\\n');\n}\n\n/**\n * Get the m= sections of a particular kind and direction from an sdp.\n * @param {string} sdp - SDP string\n * @param {string} [kind] - Pattern for matching kind\n * @param {string} [direction] - Pattern for matching direction\n * @returns {Array<string>} mediaSections\n */\nfunction getMediaSections(sdp, kind, direction) {\n  return sdp.replace(/\\r\\n\\r\\n$/, '\\r\\n').split('\\r\\nm=').slice(1).map(function (mediaSection) {\n    return 'm=' + mediaSection;\n  }).filter(function (mediaSection) {\n    var kindPattern = new RegExp('m=' + (kind || '.*'), 'gm');\n    var directionPattern = new RegExp('a=' + (direction || '.*'), 'gm');\n    return kindPattern.test(mediaSection) && directionPattern.test(mediaSection);\n  });\n}\n\n/**\n * Create a Codec Map for the given m= section.\n * @param {string} section - The given m= section\n * @returns {Map<Codec, Array<PT>>}\n */\nfunction createCodecMapForMediaSection(section) {\n  return Array.from(createPtToCodecName(section)).reduce(function (codecMap, pair) {\n    var pt = pair[0];\n    var codecName = pair[1];\n    var pts = codecMap.get(codecName) || [];\n    return codecMap.set(codecName, pts.concat(pt));\n  }, new Map());\n}\n\n/**\n * Create the reordered Codec Payload Types based on the preferred Codec Names.\n * @param {Map<Codec, Array<PT>>} codecMap - Codec Map\n * @param {Array<Codec>} preferredCodecs - Preferred Codec Names\n * @returns {Array<PT>} Reordered Payload Types\n */\nfunction getReorderedPayloadTypes(codecMap, preferredCodecs) {\n  preferredCodecs = preferredCodecs.map(function (codecName) {\n    return codecName.toLowerCase();\n  });\n\n  var preferredPayloadTypes = util.flatMap(preferredCodecs, function (codecName) {\n    return codecMap.get(codecName) || [];\n  });\n\n  var remainingCodecs = util.difference(Array.from(codecMap.keys()), preferredCodecs);\n  var remainingPayloadTypes = util.flatMap(remainingCodecs, function (codecName) {\n    return codecMap.get(codecName);\n  });\n\n  return preferredPayloadTypes.concat(remainingPayloadTypes);\n}\n\n/**\n * Set the given Codec Payload Types in the first line of the given m= section.\n * @param {Array<PT>} payloadTypes - Payload Types\n * @param {string} section - Given m= section\n * @returns {string} - Updated m= section\n */\nfunction setPayloadTypesInMediaSection(payloadTypes, section) {\n  var lines = section.split('\\r\\n');\n  var mLine = lines[0];\n  var otherLines = lines.slice(1);\n  mLine = mLine.replace(/([0-9]+\\s?)+$/, payloadTypes.join(' '));\n  return [mLine].concat(otherLines).join('\\r\\n');\n}\n\n/**\n * Create a Map from PTs to codec names for the given m= section.\n * @param {string} mediaSection - The given m= section.\n * @returns {Map<PT, Codec>} ptToCodecName\n */\nfunction createPtToCodecName(mediaSection) {\n  return getPayloadTypesInMediaSection(mediaSection).reduce(function (ptToCodecName, pt) {\n    var rtpmapPattern = new RegExp('a=rtpmap:' + pt + ' ([^/]+)');\n    var matches = mediaSection.match(rtpmapPattern);\n    var codecName = matches ? matches[1].toLowerCase() : ptToFixedBitrateAudioCodecName[pt] ? ptToFixedBitrateAudioCodecName[pt].toLowerCase() : '';\n    return ptToCodecName.set(pt, codecName);\n  }, new Map());\n}\n\n/**\n * Get the Codec Payload Types present in the first line of the given m= section\n * @param {string} section - The m= section\n * @returns {Array<PT>} Payload Types\n */\nfunction getPayloadTypesInMediaSection(section) {\n  var mLine = section.split('\\r\\n')[0];\n\n  // In \"m=<kind> <port> <proto> <payload_type_1> <payload_type_2> ... <payload_type_n>\",\n  // the regex matches <port> and the PayloadTypes.\n  var matches = mLine.match(/([0-9]+)/g);\n\n  // This should not happen, but in case there are no PayloadTypes in\n  // the m= line, return an empty array.\n  if (!matches) {\n    return [];\n  }\n\n  // Since only the PayloadTypes are needed, we discard the <port>.\n  return matches.slice(1).map(function (match) {\n    return parseInt(match, 10);\n  });\n}\n\nmodule.exports = {\n  getPreferredCodecInfo: getPreferredCodecInfo,\n  setCodecPreferences: setCodecPreferences,\n  setIceAggressiveNomination: setIceAggressiveNomination,\n  setMaxAverageBitrate: setMaxAverageBitrate\n};\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/rtc/sdp.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/rtc/stats.js":
/*!************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/rtc/stats.js ***!
  \************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval("var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\n/* eslint-disable no-fallthrough */\nvar _a = __webpack_require__(/*! ../errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\"), NotSupportedError = _a.NotSupportedError, InvalidArgumentError = _a.InvalidArgumentError;\nvar MockRTCStatsReport = __webpack_require__(/*! ./mockrtcstatsreport */ \"./node_modules/twilio-client/es5/twilio/rtc/mockrtcstatsreport.js\");\nvar ERROR_PEER_CONNECTION_NULL = 'PeerConnection is null';\nvar ERROR_WEB_RTC_UNSUPPORTED = 'WebRTC statistics are unsupported';\n/**\n * Generate WebRTC statistics report for the given {@link PeerConnection}\n * @param {PeerConnection} peerConnection - Target connection.\n * @return {Promise<RTCStatsReport>} WebRTC RTCStatsReport object\n */\nfunction getRTCStatsReport(peerConnection) {\n    if (!peerConnection) {\n        return Promise.reject(new InvalidArgumentError(ERROR_PEER_CONNECTION_NULL));\n    }\n    if (typeof peerConnection.getStats !== 'function') {\n        return Promise.reject(new NotSupportedError(ERROR_WEB_RTC_UNSUPPORTED));\n    }\n    var promise;\n    try {\n        promise = peerConnection.getStats();\n    }\n    catch (e) {\n        promise = new Promise(function (resolve) { return peerConnection.getStats(resolve); }).then(MockRTCStatsReport.fromRTCStatsResponse);\n    }\n    return promise;\n}\n/**\n * @typedef {Object} StatsOptions\n * Used for testing to inject and extract methods.\n * @property {function} [createRTCSample] - Method for parsing an RTCStatsReport\n */\n/**\n * Collects any WebRTC statistics for the given {@link PeerConnection}\n * @param {PeerConnection} peerConnection - Target connection.\n * @param {StatsOptions} options - List of custom options.\n * @return {Promise<RTCSample>} Universally-formatted version of RTC stats.\n */\nfunction getRTCStats(peerConnection, options) {\n    options = Object.assign({\n        createRTCSample: createRTCSample\n    }, options);\n    return getRTCStatsReport(peerConnection).then(options.createRTCSample);\n}\n/**\n * Generate WebRTC stats report containing relevant information about ICE candidates for the given {@link PeerConnection}\n * @param {PeerConnection} peerConnection - Target connection.\n * @return {Promise<RTCIceCandidateStatsReport>} RTCIceCandidateStatsReport object\n */\nfunction getRTCIceCandidateStatsReport(peerConnection) {\n    return getRTCStatsReport(peerConnection).then(function (report) {\n        // Find the relevant information needed to determine selected candidates later\n        var _a = Array.from(report.values()).reduce(function (rval, stat) {\n            ['candidatePairs', 'localCandidates', 'remoteCandidates'].forEach(function (prop) {\n                if (!rval[prop]) {\n                    rval[prop] = [];\n                }\n            });\n            switch (stat.type) {\n                case 'candidate-pair':\n                    rval.candidatePairs.push(stat);\n                    break;\n                case 'local-candidate':\n                    rval.localCandidates.push(stat);\n                    break;\n                case 'remote-candidate':\n                    rval.remoteCandidates.push(stat);\n                    break;\n                case 'transport':\n                    // This transport is the one being used if selectedCandidatePairId is populated\n                    if (stat.selectedCandidatePairId) {\n                        rval.transport = stat;\n                    }\n                    break;\n            }\n            return rval;\n        }, {}), candidatePairs = _a.candidatePairs, localCandidates = _a.localCandidates, remoteCandidates = _a.remoteCandidates, transport = _a.transport;\n        // This is a report containing information about the selected candidates, such as IDs\n        // This is coming from WebRTC stats directly and doesn't contain the actual ICE Candidates info\n        var selectedCandidatePairReport = candidatePairs.find(function (pair) {\n            // Firefox\n            return pair.selected ||\n                // Spec-compliant way\n                (transport && pair.id === transport.selectedCandidatePairId);\n        });\n        var selectedIceCandidatePairStats;\n        if (selectedCandidatePairReport) {\n            selectedIceCandidatePairStats = {\n                localCandidate: localCandidates.find(function (candidate) { return candidate.id === selectedCandidatePairReport.localCandidateId; }),\n                remoteCandidate: remoteCandidates.find(function (candidate) { return candidate.id === selectedCandidatePairReport.remoteCandidateId; }),\n            };\n        }\n        // Build the return object\n        return {\n            iceCandidateStats: __spreadArrays(localCandidates, remoteCandidates),\n            selectedIceCandidatePairStats: selectedIceCandidatePairStats,\n        };\n    });\n}\n/**\n * @typedef {Object} RTCSample - A sample containing relevant WebRTC stats information.\n * @property {Number} [timestamp]\n * @property {String} [codecName] - MimeType name of the codec being used by the outbound audio stream\n * @property {Number} [rtt] - Round trip time\n * @property {Number} [jitter]\n * @property {Number} [packetsSent]\n * @property {Number} [packetsLost]\n * @property {Number} [packetsReceived]\n * @property {Number} [bytesReceived]\n * @property {Number} [bytesSent]\n * @property {Number} [localAddress]\n * @property {Number} [remoteAddress]\n */\nfunction RTCSample() { }\n/**\n * Create an RTCSample object from an RTCStatsReport\n * @private\n * @param {RTCStatsReport} statsReport\n * @returns {RTCSample}\n */\nfunction createRTCSample(statsReport) {\n    var activeTransportId = null;\n    var sample = new RTCSample();\n    var fallbackTimestamp;\n    Array.from(statsReport.values()).forEach(function (stats) {\n        // Skip isRemote tracks which will be phased out completely and break in FF66.\n        if (stats.isRemote) {\n            return;\n        }\n        // Firefox hack -- Older firefox doesn't have dashes in type names\n        var type = stats.type.replace('-', '');\n        fallbackTimestamp = fallbackTimestamp || stats.timestamp;\n        // (rrowland) As I understand it, this is supposed to come in on remote-inbound-rtp but it's\n        // currently coming in on remote-outbound-rtp, so I'm leaving this outside the switch until\n        // the appropriate place to look is cleared up.\n        if (stats.remoteId) {\n            var remote = statsReport.get(stats.remoteId);\n            if (remote && remote.roundTripTime) {\n                sample.rtt = remote.roundTripTime * 1000;\n            }\n        }\n        switch (type) {\n            case 'inboundrtp':\n                sample.timestamp = sample.timestamp || stats.timestamp;\n                sample.jitter = stats.jitter * 1000;\n                sample.packetsLost = stats.packetsLost;\n                sample.packetsReceived = stats.packetsReceived;\n                sample.bytesReceived = stats.bytesReceived;\n                break;\n            case 'outboundrtp':\n                sample.timestamp = stats.timestamp;\n                sample.packetsSent = stats.packetsSent;\n                sample.bytesSent = stats.bytesSent;\n                if (stats.codecId) {\n                    var codec = statsReport.get(stats.codecId);\n                    sample.codecName = codec\n                        ? codec.mimeType && codec.mimeType.match(/(.*\\/)?(.*)/)[2]\n                        : stats.codecId;\n                }\n                break;\n            case 'transport':\n                activeTransportId = stats.id;\n                break;\n        }\n    });\n    if (!sample.timestamp) {\n        sample.timestamp = fallbackTimestamp;\n    }\n    var activeTransport = statsReport.get(activeTransportId);\n    if (!activeTransport) {\n        return sample;\n    }\n    var selectedCandidatePair = statsReport.get(activeTransport.selectedCandidatePairId);\n    if (!selectedCandidatePair) {\n        return sample;\n    }\n    var localCandidate = statsReport.get(selectedCandidatePair.localCandidateId);\n    var remoteCandidate = statsReport.get(selectedCandidatePair.remoteCandidateId);\n    if (!sample.rtt) {\n        sample.rtt = selectedCandidatePair &&\n            (selectedCandidatePair.currentRoundTripTime * 1000);\n    }\n    Object.assign(sample, {\n        localAddress: localCandidate && localCandidate.ip,\n        remoteAddress: remoteCandidate && remoteCandidate.ip,\n    });\n    return sample;\n}\nmodule.exports = {\n    getRTCStats: getRTCStats,\n    getRTCIceCandidateStatsReport: getRTCIceCandidateStatsReport,\n};\n//# sourceMappingURL=stats.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/rtc/stats.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/shims/eventtarget.js":
/*!********************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/shims/eventtarget.js ***!
  \********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var EventEmitter = __webpack_require__(/*! events */ \"./node_modules/events/events.js\").EventEmitter;\nfunction EventTarget() {\n    Object.defineProperties(this, {\n        _eventEmitter: {\n            value: new EventEmitter()\n        },\n        _handlers: {\n            value: {}\n        },\n    });\n}\nEventTarget.prototype.dispatchEvent = function dispatchEvent(event) {\n    return this._eventEmitter.emit(event.type, event);\n};\nEventTarget.prototype.addEventListener = function addEventListener() {\n    var _a;\n    return (_a = this._eventEmitter).addListener.apply(_a, arguments);\n};\nEventTarget.prototype.removeEventListener = function removeEventListener() {\n    var _a;\n    return (_a = this._eventEmitter).removeListener.apply(_a, arguments);\n};\nEventTarget.prototype._defineEventHandler = function _defineEventHandler(eventName) {\n    var self = this;\n    Object.defineProperty(this, \"on\" + eventName, {\n        get: function () {\n            return self._handlers[eventName];\n        },\n        set: function (newHandler) {\n            var oldHandler = self._handlers[eventName];\n            if (oldHandler\n                && (typeof newHandler === 'function'\n                    || typeof newHandler === 'undefined'\n                    || newHandler === null)) {\n                self._handlers[eventName] = null;\n                self.removeEventListener(eventName, oldHandler);\n            }\n            if (typeof newHandler === 'function') {\n                self._handlers[eventName] = newHandler;\n                self.addEventListener(eventName, newHandler);\n            }\n        }\n    });\n};\nmodule.exports = EventTarget;\n//# sourceMappingURL=eventtarget.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/shims/eventtarget.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/shims/mediadeviceinfo.js":
/*!************************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/shims/mediadeviceinfo.js ***!
  \************************************************************************/
/***/ ((module) => {

"use strict";
eval("\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar MediaDeviceInfoShim = function MediaDeviceInfoShim(options) {\n  _classCallCheck(this, MediaDeviceInfoShim);\n\n  Object.defineProperties(this, {\n    deviceId: {\n      get: function get() {\n        return options.deviceId;\n      }\n    },\n    groupId: {\n      get: function get() {\n        return options.groupId;\n      }\n    },\n    kind: {\n      get: function get() {\n        return options.kind;\n      }\n    },\n    label: {\n      get: function get() {\n        return options.label;\n      }\n    }\n  });\n};\n\nmodule.exports = MediaDeviceInfoShim;\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/shims/mediadeviceinfo.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/shims/mediadevices.js":
/*!*********************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/shims/mediadevices.js ***!
  \*********************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var EventTarget = __webpack_require__(/*! ./eventtarget */ \"./node_modules/twilio-client/es5/twilio/shims/eventtarget.js\");\nvar inherits = __webpack_require__(/*! util */ \"./node_modules/util/util.js\").inherits;\nvar POLL_INTERVAL_MS = 500;\nvar nativeMediaDevices = typeof navigator !== 'undefined' && navigator.mediaDevices;\n/**\n * Make a custom MediaDevices object, and proxy through existing functionality. If\n *   devicechange is present, we simply reemit the event. If not, we will do the\n *   detection ourselves and fire the event when necessary. The same logic exists\n *   for deviceinfochange for consistency, however deviceinfochange is our own event\n *   so it is unlikely that it will ever be native. The w3c spec for devicechange\n *   is unclear as to whether MediaDeviceInfo changes (such as label) will\n *   trigger the devicechange event. We have an open question on this here:\n *   https://bugs.chromium.org/p/chromium/issues/detail?id=585096\n */\nfunction MediaDevicesShim() {\n    EventTarget.call(this);\n    this._defineEventHandler('devicechange');\n    this._defineEventHandler('deviceinfochange');\n    var knownDevices = [];\n    Object.defineProperties(this, {\n        _deviceChangeIsNative: {\n            value: reemitNativeEvent(this, 'devicechange')\n        },\n        _deviceInfoChangeIsNative: {\n            value: reemitNativeEvent(this, 'deviceinfochange')\n        },\n        _knownDevices: {\n            value: knownDevices\n        },\n        _pollInterval: {\n            value: null,\n            writable: true\n        }\n    });\n    if (typeof nativeMediaDevices.enumerateDevices === 'function') {\n        nativeMediaDevices.enumerateDevices().then(function (devices) {\n            devices.sort(sortDevicesById).forEach([].push, knownDevices);\n        });\n    }\n    this._eventEmitter.on('newListener', function maybeStartPolling(eventName) {\n        if (eventName !== 'devicechange' && eventName !== 'deviceinfochange') {\n            return;\n        }\n        this._pollInterval = this._pollInterval\n            || setInterval(sampleDevices.bind(null, this), POLL_INTERVAL_MS);\n    }.bind(this));\n    this._eventEmitter.on('removeListener', function maybeStopPolling() {\n        if (this._pollInterval && !hasChangeListeners(this)) {\n            clearInterval(this._pollInterval);\n            this._pollInterval = null;\n        }\n    }.bind(this));\n}\ninherits(MediaDevicesShim, EventTarget);\nif (nativeMediaDevices && typeof nativeMediaDevices.enumerateDevices === 'function') {\n    MediaDevicesShim.prototype.enumerateDevices = function enumerateDevices() {\n        return nativeMediaDevices.enumerateDevices.apply(nativeMediaDevices, arguments);\n    };\n}\nMediaDevicesShim.prototype.getUserMedia = function getUserMedia() {\n    return nativeMediaDevices.getUserMedia.apply(nativeMediaDevices, arguments);\n};\nfunction deviceInfosHaveChanged(newDevices, oldDevices) {\n    var oldLabels = oldDevices.reduce(function (map, device) { return map.set(device.deviceId, device.label || null); }, new Map());\n    return newDevices.some(function (newDevice) {\n        var oldLabel = oldLabels.get(newDevice.deviceId);\n        return typeof oldLabel !== 'undefined' && oldLabel !== newDevice.label;\n    });\n}\nfunction devicesHaveChanged(newDevices, oldDevices) {\n    return newDevices.length !== oldDevices.length\n        || propertyHasChanged('deviceId', newDevices, oldDevices);\n}\nfunction hasChangeListeners(mediaDevices) {\n    return ['devicechange', 'deviceinfochange'].reduce(function (count, event) { return count + mediaDevices._eventEmitter.listenerCount(event); }, 0) > 0;\n}\n/**\n * Sample the current set of devices and emit devicechange event if a device has been\n *   added or removed, and deviceinfochange if a device's label has changed.\n * @param {MediaDevicesShim} mediaDevices\n * @private\n */\nfunction sampleDevices(mediaDevices) {\n    nativeMediaDevices.enumerateDevices().then(function (newDevices) {\n        var knownDevices = mediaDevices._knownDevices;\n        var oldDevices = knownDevices.slice();\n        // Replace known devices in-place\n        [].splice.apply(knownDevices, [0, knownDevices.length]\n            .concat(newDevices.sort(sortDevicesById)));\n        if (!mediaDevices._deviceChangeIsNative\n            && devicesHaveChanged(knownDevices, oldDevices)) {\n            mediaDevices.dispatchEvent(new Event('devicechange'));\n        }\n        if (!mediaDevices._deviceInfoChangeIsNative\n            && deviceInfosHaveChanged(knownDevices, oldDevices)) {\n            mediaDevices.dispatchEvent(new Event('deviceinfochange'));\n        }\n    });\n}\n/**\n * Accepts two sorted arrays and the name of a property to compare on objects from each.\n *   Arrays should also be of the same length.\n * @param {string} propertyName - Name of the property to compare on each object\n * @param {Array<Object>} as - The left-side array of objects to compare.\n * @param {Array<Object>} bs - The right-side array of objects to compare.\n * @private\n * @returns {boolean} True if the property of any object in array A is different than\n *   the same property of its corresponding object in array B.\n */\nfunction propertyHasChanged(propertyName, as, bs) {\n    return as.some(function (a, i) { return a[propertyName] !== bs[i][propertyName]; });\n}\n/**\n * Re-emit the native event, if the native mediaDevices has the corresponding property.\n * @param {MediaDevicesShim} mediaDevices\n * @param {string} eventName - Name of the event\n * @private\n * @returns {boolean} Whether the native mediaDevice had the corresponding property\n */\nfunction reemitNativeEvent(mediaDevices, eventName) {\n    var methodName = \"on\" + eventName;\n    function dispatchEvent(event) {\n        mediaDevices.dispatchEvent(event);\n    }\n    if (methodName in nativeMediaDevices) {\n        // Use addEventListener if it's available so we don't stomp on any other listeners\n        // for this event. Currently, navigator.mediaDevices.addEventListener does not exist in Safari.\n        if ('addEventListener' in nativeMediaDevices) {\n            nativeMediaDevices.addEventListener(eventName, dispatchEvent);\n        }\n        else {\n            nativeMediaDevices[methodName] = dispatchEvent;\n        }\n        return true;\n    }\n    return false;\n}\nfunction sortDevicesById(a, b) {\n    return a.deviceId < b.deviceId;\n}\nmodule.exports = (function shimMediaDevices() {\n    return nativeMediaDevices ? new MediaDevicesShim() : null;\n})();\n//# sourceMappingURL=mediadevices.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/shims/mediadevices.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/sound.js":
/*!********************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/sound.js ***!
  \********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar AsyncQueue = __webpack_require__(/*! ./asyncQueue */ \"./node_modules/twilio-client/es5/twilio/asyncQueue.js\").AsyncQueue;\nvar AudioPlayer = __webpack_require__(/*! @twilio/audioplayer */ \"./node_modules/@twilio/audioplayer/es5/index.js\");\nvar InvalidArgumentError = __webpack_require__(/*! ./errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\").InvalidArgumentError;\n\n/**\n * @class\n * @param {string} name - Name of the sound\n * @param {string} url - URL of the sound\n * @param {Sound#ConstructorOptions} options\n * @property {boolean} isPlaying - Whether the Sound is currently playing audio.\n * @property {string} name - Name of the sound\n * @property {string} url - URL of the sound\n * @property {AudioContext} audioContext - The AudioContext to use if available for AudioPlayer.\n */ /**\n    * @typedef {Object} Sound#ConstructorOptions\n    * @property {number} [maxDuration=0] - The maximum length of time to play the sound\n    *   before stopping it.\n    * @property {Boolean} [shouldLoop=false] - Whether the sound should be looped.\n    */\nfunction Sound(name, url, options) {\n  if (!(this instanceof Sound)) {\n    return new Sound(name, url, options);\n  }\n\n  if (!name || !url) {\n    throw new InvalidArgumentError('name and url are required arguments');\n  }\n\n  options = Object.assign({\n    AudioFactory: typeof Audio !== 'undefined' ? Audio : null,\n    maxDuration: 0,\n    shouldLoop: false\n  }, options);\n\n  options.AudioPlayer = options.audioContext ? AudioPlayer.bind(AudioPlayer, options.audioContext) : options.AudioFactory;\n\n  Object.defineProperties(this, {\n    _activeEls: {\n      value: new Map()\n    },\n    _Audio: {\n      value: options.AudioPlayer\n    },\n    _isSinkSupported: {\n      value: options.AudioFactory !== null && typeof options.AudioFactory.prototype.setSinkId === 'function'\n    },\n    _maxDuration: {\n      value: options.maxDuration\n    },\n    _maxDurationTimeout: {\n      value: null,\n      writable: true\n    },\n    _operations: {\n      value: new AsyncQueue()\n    },\n    _playPromise: {\n      value: null,\n      writable: true\n    },\n    _shouldLoop: {\n      value: options.shouldLoop\n    },\n    _sinkIds: {\n      value: ['default']\n    },\n    isPlaying: {\n      enumerable: true,\n      get: function get() {\n        return !!this._playPromise;\n      }\n    },\n    name: {\n      enumerable: true,\n      value: name\n    },\n    url: {\n      enumerable: true,\n      value: url\n    }\n  });\n\n  if (this._Audio) {\n    // Play it (muted and should not loop) as soon as possible so that it does not get incorrectly caught by Chrome's\n    // \"gesture requirement for media playback\" feature.\n    // https://plus.google.com/+FrancoisBeaufort/posts/6PiJQqJzGqX\n    this._play(true, false);\n  }\n}\n\nfunction destroyAudioElement(audioElement) {\n  if (audioElement) {\n    audioElement.pause();\n    audioElement.src = '';\n    audioElement.srcObject = null;\n    audioElement.load();\n  }\n}\n\n/**\n * Plays the audio element that was initialized using the speficied sinkId\n */\nSound.prototype._playAudioElement = function _playAudioElement(sinkId, isMuted, shouldLoop) {\n  var _this = this;\n\n  var audioElement = this._activeEls.get(sinkId);\n\n  if (!audioElement) {\n    throw new InvalidArgumentError('sinkId: \"' + sinkId + '\" doesn\\'t have an audio element');\n  }\n\n  audioElement.muted = !!isMuted;\n  audioElement.loop = !!shouldLoop;\n\n  return audioElement.play().then(function () {\n    return audioElement;\n  }).catch(function (reason) {\n    destroyAudioElement(audioElement);\n    _this._activeEls.delete(sinkId);\n    throw reason;\n  });\n};\n\n/**\n * Start playing the sound. Will stop the currently playing sound first.\n * If it exists, the audio element that was initialized for the sinkId will be used\n */\nSound.prototype._play = function _play(forceIsMuted, forceShouldLoop) {\n  if (this.isPlaying) {\n    this._stop();\n  }\n\n  if (this._maxDuration > 0) {\n    this._maxDurationTimeout = setTimeout(this._stop.bind(this), this._maxDuration);\n  }\n\n  forceShouldLoop = typeof forceShouldLoop === 'boolean' ? forceShouldLoop : this._shouldLoop;\n  var self = this;\n  var playPromise = this._playPromise = Promise.all(this._sinkIds.map(function createAudioElement(sinkId) {\n    if (!self._Audio) {\n      return Promise.resolve();\n    }\n\n    var audioElement = self._activeEls.get(sinkId);\n    if (audioElement) {\n      return self._playAudioElement(sinkId, forceIsMuted, forceShouldLoop);\n    }\n\n    audioElement = new self._Audio(self.url);\n\n    // Make sure the browser always retrieves the resource using CORS.\n    // By default when using media tags, origin header is not sent to server\n    // which causes the server to not return CORS headers. When this caches\n    // on the CDN or browser, it causes issues to future requests that needs CORS,\n    // which is true when using AudioContext. Please note that we won't have to do this\n    // once we migrate to CloudFront.\n    if (typeof audioElement.setAttribute === 'function') {\n      audioElement.setAttribute('crossorigin', 'anonymous');\n    }\n\n    /**\n     * (rrowland) Bug in Chrome 53 & 54 prevents us from calling Audio.setSinkId without\n     *   crashing the tab. https://bugs.chromium.org/p/chromium/issues/detail?id=655342\n     */\n    return new Promise(function (resolve) {\n      audioElement.addEventListener('canplaythrough', resolve);\n    }).then(function () {\n      return (self._isSinkSupported ? audioElement.setSinkId(sinkId) : Promise.resolve()).then(function setSinkIdSuccess() {\n        self._activeEls.set(sinkId, audioElement);\n\n        // Stop has been called, bail out\n        if (!self._playPromise) {\n          return Promise.resolve();\n        }\n        return self._playAudioElement(sinkId, forceIsMuted, forceShouldLoop);\n      });\n    });\n  }));\n\n  return playPromise;\n};\n\n/**\n * Stop playing the sound.\n */\nSound.prototype._stop = function _stop() {\n  var _this2 = this;\n\n  this._activeEls.forEach(function (audioEl, sinkId) {\n    if (_this2._sinkIds.includes(sinkId)) {\n      audioEl.pause();\n      audioEl.currentTime = 0;\n    } else {\n      // Destroy the ones that are not used anymore\n      destroyAudioElement(audioEl);\n      _this2._activeEls.delete(sinkId);\n    }\n  });\n\n  clearTimeout(this._maxDurationTimeout);\n\n  this._playPromise = null;\n  this._maxDurationTimeout = null;\n};\n\n/**\n * Update the sinkIds of the audio output devices this sound should play through.\n */\nSound.prototype.setSinkIds = function setSinkIds(ids) {\n  if (!this._isSinkSupported) {\n    return;\n  }\n\n  ids = ids.forEach ? ids : [ids];\n  [].splice.apply(this._sinkIds, [0, this._sinkIds.length].concat(ids));\n};\n\n/**\n * Add a stop operation to the queue\n */\nSound.prototype.stop = function stop() {\n  var _this3 = this;\n\n  this._operations.enqueue(function () {\n    _this3._stop();\n    return Promise.resolve();\n  });\n};\n\n/**\n * Add a play operation to the queue\n */\nSound.prototype.play = function play() {\n  var _this4 = this;\n\n  return this._operations.enqueue(function () {\n    return _this4._play();\n  });\n};\n\nmodule.exports = Sound;\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/sound.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/statsMonitor.js":
/*!***************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/statsMonitor.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @packageDocumentation\n * @module Voice\n * @internalapi\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\");\nvar util_1 = __webpack_require__(/*! ./util */ \"./node_modules/twilio-client/es5/twilio/util.js\");\nvar getRTCStats = __webpack_require__(/*! ./rtc/stats */ \"./node_modules/twilio-client/es5/twilio/rtc/stats.js\").getRTCStats;\nvar Mos = __webpack_require__(/*! ./rtc/mos */ \"./node_modules/twilio-client/es5/twilio/rtc/mos.js\");\n// How many samples we use when testing metric thresholds\nvar SAMPLE_COUNT_METRICS = 5;\n// How many samples that need to cross the threshold to\n// raise or clear a warning.\nvar SAMPLE_COUNT_CLEAR = 0;\nvar SAMPLE_COUNT_RAISE = 3;\nvar SAMPLE_INTERVAL = 1000;\nvar WARNING_TIMEOUT = 5 * 1000;\nvar DEFAULT_THRESHOLDS = {\n    audioInputLevel: { minStandardDeviation: 327.67, sampleCount: 10 },\n    audioOutputLevel: { minStandardDeviation: 327.67, sampleCount: 10 },\n    bytesReceived: { clearCount: 2, min: 1, raiseCount: 3, sampleCount: 3 },\n    bytesSent: { clearCount: 2, min: 1, raiseCount: 3, sampleCount: 3 },\n    jitter: { max: 30 },\n    mos: { min: 3 },\n    packetsLostFraction: [{\n            max: 1,\n        }, {\n            clearValue: 1,\n            maxAverage: 3,\n            sampleCount: 7,\n        }],\n    rtt: { max: 400 },\n};\n/**\n * Count the number of values that cross the max threshold.\n * @private\n * @param max - The max allowable value.\n * @param values - The values to iterate over.\n * @returns The amount of values in which the stat crossed the threshold.\n */\nfunction countHigh(max, values) {\n    return values.reduce(function (highCount, value) { return highCount += (value > max) ? 1 : 0; }, 0);\n}\n/**\n * Count the number of values that cross the min threshold.\n * @private\n * @param min - The minimum allowable value.\n * @param values - The values to iterate over.\n * @returns The amount of values in which the stat crossed the threshold.\n */\nfunction countLow(min, values) {\n    return values.reduce(function (lowCount, value) { return lowCount += (value < min) ? 1 : 0; }, 0);\n}\n/**\n * Calculate the standard deviation from a list of numbers.\n * @private\n * @param values The list of numbers to calculate the standard deviation from.\n * @returns The standard deviation of a list of numbers.\n */\nfunction calculateStandardDeviation(values) {\n    if (values.length <= 0) {\n        return null;\n    }\n    var valueAverage = values.reduce(function (partialSum, value) { return partialSum + value; }, 0) / values.length;\n    var diffSquared = values.map(function (value) { return Math.pow(value - valueAverage, 2); });\n    var stdDev = Math.sqrt(diffSquared.reduce(function (partialSum, value) { return partialSum + value; }, 0) / diffSquared.length);\n    return stdDev;\n}\n/**\n * Flatten a set of numerical sample sets into a single array of samples.\n * @param sampleSets\n */\nfunction flattenSamples(sampleSets) {\n    return sampleSets.reduce(function (flat, current) { return __spreadArrays(flat, current); }, []);\n}\n/**\n * {@link StatsMonitor} polls a peerConnection via PeerConnection.getStats\n * and emits warnings when stats cross the specified threshold values.\n */\nvar StatsMonitor = /** @class */ (function (_super) {\n    __extends(StatsMonitor, _super);\n    /**\n     * @constructor\n     * @param [options] - Optional settings\n     */\n    function StatsMonitor(options) {\n        var _this = _super.call(this) || this;\n        /**\n         * A map of warnings with their raised time\n         */\n        _this._activeWarnings = new Map();\n        /**\n         * A map of stats with the number of exceeded thresholds\n         */\n        _this._currentStreaks = new Map();\n        /**\n         * Keeps track of input volumes in the last second\n         */\n        _this._inputVolumes = [];\n        /**\n         * Keeps track of output volumes in the last second\n         */\n        _this._outputVolumes = [];\n        /**\n         * Sample buffer. Saves most recent samples\n         */\n        _this._sampleBuffer = [];\n        /**\n         * Keeps track of supplemental sample values.\n         *\n         * Currently used for constant audio detection. Contains an array of volume\n         * samples for each sample interval.\n         */\n        _this._supplementalSampleBuffers = {\n            audioInputLevel: [],\n            audioOutputLevel: [],\n        };\n        /**\n         * Whether warnings should be enabled\n         */\n        _this._warningsEnabled = true;\n        options = options || {};\n        _this._getRTCStats = options.getRTCStats || getRTCStats;\n        _this._mos = options.Mos || Mos;\n        _this._peerConnection = options.peerConnection;\n        _this._thresholds = __assign(__assign({}, DEFAULT_THRESHOLDS), options.thresholds);\n        var thresholdSampleCounts = Object.values(_this._thresholds)\n            .map(function (threshold) { return threshold.sampleCount; })\n            .filter(function (sampleCount) { return !!sampleCount; });\n        _this._maxSampleCount = Math.max.apply(Math, __spreadArrays([SAMPLE_COUNT_METRICS], thresholdSampleCounts));\n        if (_this._peerConnection) {\n            _this.enable(_this._peerConnection);\n        }\n        return _this;\n    }\n    /**\n     * Called when a volume sample is available\n     * @param inputVolume - Input volume level from 0 to 32767\n     * @param outputVolume - Output volume level from 0 to 32767\n     */\n    StatsMonitor.prototype.addVolumes = function (inputVolume, outputVolume) {\n        this._inputVolumes.push(inputVolume);\n        this._outputVolumes.push(outputVolume);\n    };\n    /**\n     * Stop sampling RTC statistics for this {@link StatsMonitor}.\n     * @returns The current {@link StatsMonitor}.\n     */\n    StatsMonitor.prototype.disable = function () {\n        clearInterval(this._sampleInterval);\n        delete this._sampleInterval;\n        return this;\n    };\n    /**\n     * Disable warnings for this {@link StatsMonitor}.\n     * @returns The current {@link StatsMonitor}.\n     */\n    StatsMonitor.prototype.disableWarnings = function () {\n        if (this._warningsEnabled) {\n            this._activeWarnings.clear();\n        }\n        this._warningsEnabled = false;\n        return this;\n    };\n    /**\n     * Start sampling RTC statistics for this {@link StatsMonitor}.\n     * @param peerConnection - A PeerConnection to monitor.\n     * @returns The current {@link StatsMonitor}.\n     */\n    StatsMonitor.prototype.enable = function (peerConnection) {\n        if (peerConnection) {\n            if (this._peerConnection && peerConnection !== this._peerConnection) {\n                throw new errors_1.InvalidArgumentError('Attempted to replace an existing PeerConnection in StatsMonitor.enable');\n            }\n            this._peerConnection = peerConnection;\n        }\n        if (!this._peerConnection) {\n            throw new errors_1.InvalidArgumentError('Can not enable StatsMonitor without a PeerConnection');\n        }\n        this._sampleInterval = this._sampleInterval ||\n            setInterval(this._fetchSample.bind(this), SAMPLE_INTERVAL);\n        return this;\n    };\n    /**\n     * Enable warnings for this {@link StatsMonitor}.\n     * @returns The current {@link StatsMonitor}.\n     */\n    StatsMonitor.prototype.enableWarnings = function () {\n        this._warningsEnabled = true;\n        return this;\n    };\n    /**\n     * Check if there is an active warning for a specific stat and threshold\n     * @param statName - The name of the stat to check\n     * @param thresholdName - The name of the threshold to check\n     * @returns Whether there is an active warning for a specific stat and threshold\n     */\n    StatsMonitor.prototype.hasActiveWarning = function (statName, thresholdName) {\n        var warningId = statName + \":\" + thresholdName;\n        return !!this._activeWarnings.get(warningId);\n    };\n    /**\n     * Add a sample to our sample buffer and remove the oldest if we are over the limit.\n     * @param sample - Sample to add\n     */\n    StatsMonitor.prototype._addSample = function (sample) {\n        var samples = this._sampleBuffer;\n        samples.push(sample);\n        // We store 1 extra sample so that we always have (current, previous)\n        // available for all {sampleBufferSize} threshold validations.\n        if (samples.length > this._maxSampleCount) {\n            samples.splice(0, samples.length - this._maxSampleCount);\n        }\n    };\n    /**\n     * Clear an active warning.\n     * @param statName - The name of the stat to clear.\n     * @param thresholdName - The name of the threshold to clear\n     * @param [data] - Any relevant sample data.\n     */\n    StatsMonitor.prototype._clearWarning = function (statName, thresholdName, data) {\n        var warningId = statName + \":\" + thresholdName;\n        var activeWarning = this._activeWarnings.get(warningId);\n        if (!activeWarning || Date.now() - activeWarning.timeRaised < WARNING_TIMEOUT) {\n            return;\n        }\n        this._activeWarnings.delete(warningId);\n        this.emit('warning-cleared', __assign(__assign({}, data), { name: statName, threshold: {\n                name: thresholdName,\n                value: this._thresholds[statName][thresholdName],\n            } }));\n    };\n    /**\n     * Create a sample object from a stats object using the previous sample, if available.\n     * @param stats - Stats retrieved from getStatistics\n     * @param [previousSample=null] - The previous sample to use to calculate deltas.\n     * @returns A universally-formatted version of RTC stats.\n     */\n    StatsMonitor.prototype._createSample = function (stats, previousSample) {\n        var previousBytesSent = previousSample && previousSample.totals.bytesSent || 0;\n        var previousBytesReceived = previousSample && previousSample.totals.bytesReceived || 0;\n        var previousPacketsSent = previousSample && previousSample.totals.packetsSent || 0;\n        var previousPacketsReceived = previousSample && previousSample.totals.packetsReceived || 0;\n        var previousPacketsLost = previousSample && previousSample.totals.packetsLost || 0;\n        var currentBytesSent = stats.bytesSent - previousBytesSent;\n        var currentBytesReceived = stats.bytesReceived - previousBytesReceived;\n        var currentPacketsSent = stats.packetsSent - previousPacketsSent;\n        var currentPacketsReceived = stats.packetsReceived - previousPacketsReceived;\n        var currentPacketsLost = stats.packetsLost - previousPacketsLost;\n        var currentInboundPackets = currentPacketsReceived + currentPacketsLost;\n        var currentPacketsLostFraction = (currentInboundPackets > 0) ?\n            (currentPacketsLost / currentInboundPackets) * 100 : 0;\n        var totalInboundPackets = stats.packetsReceived + stats.packetsLost;\n        var totalPacketsLostFraction = (totalInboundPackets > 0) ?\n            (stats.packetsLost / totalInboundPackets) * 100 : 100;\n        var rttValue = (typeof stats.rtt === 'number' || !previousSample) ? stats.rtt : previousSample.rtt;\n        var audioInputLevelValues = this._inputVolumes.splice(0);\n        this._supplementalSampleBuffers.audioInputLevel.push(audioInputLevelValues);\n        var audioOutputLevelValues = this._outputVolumes.splice(0);\n        this._supplementalSampleBuffers.audioOutputLevel.push(audioOutputLevelValues);\n        return {\n            audioInputLevel: Math.round(util_1.average(audioInputLevelValues)),\n            audioOutputLevel: Math.round(util_1.average(audioOutputLevelValues)),\n            bytesReceived: currentBytesReceived,\n            bytesSent: currentBytesSent,\n            codecName: stats.codecName,\n            jitter: stats.jitter,\n            mos: this._mos.calculate(rttValue, stats.jitter, previousSample && currentPacketsLostFraction),\n            packetsLost: currentPacketsLost,\n            packetsLostFraction: currentPacketsLostFraction,\n            packetsReceived: currentPacketsReceived,\n            packetsSent: currentPacketsSent,\n            rtt: rttValue,\n            timestamp: stats.timestamp,\n            totals: {\n                bytesReceived: stats.bytesReceived,\n                bytesSent: stats.bytesSent,\n                packetsLost: stats.packetsLost,\n                packetsLostFraction: totalPacketsLostFraction,\n                packetsReceived: stats.packetsReceived,\n                packetsSent: stats.packetsSent,\n            },\n        };\n    };\n    /**\n     * Get stats from the PeerConnection and add it to our list of samples.\n     */\n    StatsMonitor.prototype._fetchSample = function () {\n        var _this = this;\n        this._getSample().then(function (sample) {\n            _this._addSample(sample);\n            _this._raiseWarnings();\n            _this.emit('sample', sample);\n        }).catch(function (error) {\n            _this.disable();\n            // We only bubble up any errors coming from pc.getStats()\n            // No need to attach a twilioError\n            _this.emit('error', error);\n        });\n    };\n    /**\n     * Get stats from the PeerConnection.\n     * @returns A universally-formatted version of RTC stats.\n     */\n    StatsMonitor.prototype._getSample = function () {\n        var _this = this;\n        return this._getRTCStats(this._peerConnection).then(function (stats) {\n            var previousSample = null;\n            if (_this._sampleBuffer.length) {\n                previousSample = _this._sampleBuffer[_this._sampleBuffer.length - 1];\n            }\n            return _this._createSample(stats, previousSample);\n        });\n    };\n    /**\n     * Raise a warning and log its raised time.\n     * @param statName - The name of the stat to raise.\n     * @param thresholdName - The name of the threshold to raise\n     * @param [data] - Any relevant sample data.\n     */\n    StatsMonitor.prototype._raiseWarning = function (statName, thresholdName, data) {\n        var warningId = statName + \":\" + thresholdName;\n        if (this._activeWarnings.has(warningId)) {\n            return;\n        }\n        this._activeWarnings.set(warningId, { timeRaised: Date.now() });\n        var thresholds = this._thresholds[statName];\n        var thresholdValue;\n        if (Array.isArray(thresholds)) {\n            var foundThreshold = thresholds.find(function (threshold) { return thresholdName in threshold; });\n            if (foundThreshold) {\n                thresholdValue = foundThreshold[thresholdName];\n            }\n        }\n        else {\n            thresholdValue = this._thresholds[statName][thresholdName];\n        }\n        this.emit('warning', __assign(__assign({}, data), { name: statName, threshold: {\n                name: thresholdName,\n                value: thresholdValue,\n            } }));\n    };\n    /**\n     * Apply our thresholds to our array of RTCStat samples.\n     */\n    StatsMonitor.prototype._raiseWarnings = function () {\n        var _this = this;\n        if (!this._warningsEnabled) {\n            return;\n        }\n        Object.keys(this._thresholds).forEach(function (name) { return _this._raiseWarningsForStat(name); });\n    };\n    /**\n     * Apply thresholds for a given stat name to our array of\n     * RTCStat samples and raise or clear any associated warnings.\n     * @param statName - Name of the stat to compare.\n     */\n    StatsMonitor.prototype._raiseWarningsForStat = function (statName) {\n        var _this = this;\n        var limits = Array.isArray(this._thresholds[statName])\n            ? this._thresholds[statName]\n            : [this._thresholds[statName]];\n        limits.forEach(function (limit) {\n            var samples = _this._sampleBuffer;\n            var clearCount = limit.clearCount || SAMPLE_COUNT_CLEAR;\n            var raiseCount = limit.raiseCount || SAMPLE_COUNT_RAISE;\n            var sampleCount = limit.sampleCount || _this._maxSampleCount;\n            var relevantSamples = samples.slice(-sampleCount);\n            var values = relevantSamples.map(function (sample) { return sample[statName]; });\n            // (rrowland) If we have a bad or missing value in the set, we don't\n            // have enough information to throw or clear a warning. Bail out.\n            var containsNull = values.some(function (value) { return typeof value === 'undefined' || value === null; });\n            if (containsNull) {\n                return;\n            }\n            var count;\n            if (typeof limit.max === 'number') {\n                count = countHigh(limit.max, values);\n                if (count >= raiseCount) {\n                    _this._raiseWarning(statName, 'max', { values: values, samples: relevantSamples });\n                }\n                else if (count <= clearCount) {\n                    _this._clearWarning(statName, 'max', { values: values, samples: relevantSamples });\n                }\n            }\n            if (typeof limit.min === 'number') {\n                count = countLow(limit.min, values);\n                if (count >= raiseCount) {\n                    _this._raiseWarning(statName, 'min', { values: values, samples: relevantSamples });\n                }\n                else if (count <= clearCount) {\n                    _this._clearWarning(statName, 'min', { values: values, samples: relevantSamples });\n                }\n            }\n            if (typeof limit.maxDuration === 'number' && samples.length > 1) {\n                relevantSamples = samples.slice(-2);\n                var prevValue = relevantSamples[0][statName];\n                var curValue = relevantSamples[1][statName];\n                var prevStreak = _this._currentStreaks.get(statName) || 0;\n                var streak = (prevValue === curValue) ? prevStreak + 1 : 0;\n                _this._currentStreaks.set(statName, streak);\n                if (streak >= limit.maxDuration) {\n                    _this._raiseWarning(statName, 'maxDuration', { value: streak });\n                }\n                else if (streak === 0) {\n                    _this._clearWarning(statName, 'maxDuration', { value: prevStreak });\n                }\n            }\n            if (typeof limit.minStandardDeviation === 'number') {\n                var sampleSets = _this._supplementalSampleBuffers[statName];\n                if (!sampleSets || sampleSets.length < limit.sampleCount) {\n                    return;\n                }\n                if (sampleSets.length > limit.sampleCount) {\n                    sampleSets.splice(0, sampleSets.length - limit.sampleCount);\n                }\n                var flatSamples = flattenSamples(sampleSets.slice(-sampleCount));\n                var stdDev = calculateStandardDeviation(flatSamples);\n                if (typeof stdDev !== 'number') {\n                    return;\n                }\n                if (stdDev < limit.minStandardDeviation) {\n                    _this._raiseWarning(statName, 'minStandardDeviation', { value: stdDev });\n                }\n                else {\n                    _this._clearWarning(statName, 'minStandardDeviation', { value: stdDev });\n                }\n            }\n            [\n                ['maxAverage', function (x, y) { return x > y; }],\n                ['minAverage', function (x, y) { return x < y; }],\n            ].forEach(function (_a) {\n                var thresholdName = _a[0], comparator = _a[1];\n                if (typeof limit[thresholdName] === 'number' && values.length >= sampleCount) {\n                    var avg = util_1.average(values);\n                    if (comparator(avg, limit[thresholdName])) {\n                        _this._raiseWarning(statName, thresholdName, { values: values, samples: relevantSamples });\n                    }\n                    else if (!comparator(avg, limit.clearValue || limit[thresholdName])) {\n                        _this._clearWarning(statName, thresholdName, { values: values, samples: relevantSamples });\n                    }\n                }\n            });\n        });\n    };\n    return StatsMonitor;\n}(events_1.EventEmitter));\nexports.default = StatsMonitor;\n//# sourceMappingURL=statsMonitor.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/statsMonitor.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/util.js":
/*!*******************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/util.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/**\n * Exception class.\n * @class\n * @name Exception\n * @exports Exception as Twilio.Exception\n * @memberOf Twilio\n * @param {string} message The exception message\n */\nfunction TwilioException(message) {\n    if (!(this instanceof TwilioException)) {\n        return new TwilioException(message);\n    }\n    this.message = message;\n}\n/**\n * Returns the exception message.\n *\n * @return {string} The exception message.\n */\nTwilioException.prototype.toString = function () {\n    return \"Twilio.Exception: \" + this.message;\n};\nfunction average(values) {\n    return values && values.length ? values.reduce(function (t, v) { return t + v; }) / values.length : 0;\n}\nfunction difference(lefts, rights, getKey) {\n    getKey = getKey || (function (a) { return a; });\n    var rightKeys = new Set(rights.map(getKey));\n    return lefts.filter(function (left) { return !rightKeys.has(getKey(left)); });\n}\nfunction isElectron(navigator) {\n    return !!navigator.userAgent.match('Electron');\n}\nfunction isChrome(window, navigator) {\n    var isCriOS = !!navigator.userAgent.match('CriOS');\n    var isHeadlessChrome = !!navigator.userAgent.match('HeadlessChrome');\n    var isGoogle = typeof window.chrome !== 'undefined'\n        && navigator.vendor === 'Google Inc.'\n        && navigator.userAgent.indexOf('OPR') === -1\n        && navigator.userAgent.indexOf('Edge') === -1;\n    return isCriOS || isElectron(navigator) || isGoogle || isHeadlessChrome;\n}\nfunction isFirefox(navigator) {\n    navigator = navigator || (typeof window === 'undefined'\n        ? __webpack_require__.g.navigator : window.navigator);\n    return !!(navigator) && typeof navigator.userAgent === 'string'\n        && /firefox|fxios/i.test(navigator.userAgent);\n}\nfunction isLegacyEdge(navigator) {\n    navigator = navigator || (typeof window === 'undefined'\n        ? __webpack_require__.g.navigator : window.navigator);\n    return !!(navigator) && typeof navigator.userAgent === 'string'\n        && /edge\\/\\d+/i.test(navigator.userAgent);\n}\nfunction isSafari(navigator) {\n    return !!(navigator.vendor) && navigator.vendor.indexOf('Apple') !== -1\n        && navigator.userAgent\n        && navigator.userAgent.indexOf('CriOS') === -1\n        && navigator.userAgent.indexOf('FxiOS') === -1;\n}\nfunction isUnifiedPlanDefault(window, navigator, PeerConnection, RtpTransceiver) {\n    if (typeof window === 'undefined'\n        || typeof navigator === 'undefined'\n        || typeof PeerConnection === 'undefined'\n        || typeof RtpTransceiver === 'undefined'\n        || typeof PeerConnection.prototype === 'undefined'\n        || typeof RtpTransceiver.prototype === 'undefined') {\n        return false;\n    }\n    if (isChrome(window, navigator) && PeerConnection.prototype.addTransceiver) {\n        var pc = new PeerConnection();\n        var isUnifiedPlan = true;\n        try {\n            pc.addTransceiver('audio');\n        }\n        catch (e) {\n            isUnifiedPlan = false;\n        }\n        pc.close();\n        return isUnifiedPlan;\n    }\n    else if (isFirefox(navigator)) {\n        return true;\n    }\n    else if (isSafari(navigator)) {\n        return 'currentDirection' in RtpTransceiver.prototype;\n    }\n    // Edge currently does not support unified plan.\n    // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/17733189/\n    // https://wpdev.uservoice.com/forums/257854-microsoft-edge-developer/suggestions/34451998-sdp-unified-plan\n    return false;\n}\nfunction queryToJson(params) {\n    if (!params) {\n        return '';\n    }\n    return params.split('&').reduce(function (output, pair) {\n        var parts = pair.split('=');\n        var key = parts[0];\n        var value = decodeURIComponent((parts[1] || '').replace(/\\+/g, '%20'));\n        if (key) {\n            output[key] = value;\n        }\n        return output;\n    }, {});\n}\n/**\n * Map a list to an array of arrays, and return the flattened result.\n * @param {Array<*>|Set<*>|Map<*>} list\n * @param {function(*): Array<*>} [mapFn]\n * @returns Array<*>\n */\nfunction flatMap(list, mapFn) {\n    var listArray = list instanceof Map || list instanceof Set\n        ? Array.from(list.values())\n        : list;\n    mapFn = mapFn || (function (item) { return item; });\n    return listArray.reduce(function (flattened, item) {\n        var mapped = mapFn(item);\n        return flattened.concat(mapped);\n    }, []);\n}\nexports.Exception = TwilioException;\nexports.average = average;\nexports.difference = difference;\nexports.isElectron = isElectron;\nexports.isChrome = isChrome;\nexports.isFirefox = isFirefox;\nexports.isLegacyEdge = isLegacyEdge;\nexports.isSafari = isSafari;\nexports.isUnifiedPlanDefault = isUnifiedPlanDefault;\nexports.queryToJson = queryToJson;\nexports.flatMap = flatMap;\n//# sourceMappingURL=util.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/util.js?");

/***/ }),

/***/ "./node_modules/twilio-client/es5/twilio/wstransport.js":
/*!**************************************************************!*\
  !*** ./node_modules/twilio-client/es5/twilio/wstransport.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("\n/**\n * @packageDocumentation\n * @module Tools\n * @internalapi\n */\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar events_1 = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\nvar WebSocket = __webpack_require__(/*! ws */ \"./node_modules/twilio-client/browser/ws.js\");\nvar errors_1 = __webpack_require__(/*! ./errors */ \"./node_modules/twilio-client/es5/twilio/errors/index.js\");\nvar log_1 = __webpack_require__(/*! ./log */ \"./node_modules/twilio-client/es5/twilio/log.js\");\n// tslint:disable-next-line\nvar Backoff = __webpack_require__(/*! backoff */ \"./node_modules/backoff/index.js\");\nvar CONNECT_SUCCESS_TIMEOUT = 10000;\nvar CONNECT_TIMEOUT = 5000;\nvar HEARTBEAT_TIMEOUT = 15000;\n/**\n * All possible states of WSTransport.\n */\nvar WSTransportState;\n(function (WSTransportState) {\n    /**\n     * The WebSocket is not open but is trying to connect.\n     */\n    WSTransportState[\"Connecting\"] = \"connecting\";\n    /**\n     * The WebSocket is not open and is not trying to connect.\n     */\n    WSTransportState[\"Closed\"] = \"closed\";\n    /**\n     * The underlying WebSocket is open and active.\n     */\n    WSTransportState[\"Open\"] = \"open\";\n})(WSTransportState = exports.WSTransportState || (exports.WSTransportState = {}));\n/**\n * WebSocket Transport\n */\nvar WSTransport = /** @class */ (function (_super) {\n    __extends(WSTransport, _super);\n    /**\n     * @constructor\n     * @param uris - List of URI of the endpoints to connect to.\n     * @param [options] - Constructor options.\n     */\n    function WSTransport(uris, options) {\n        if (options === void 0) { options = {}; }\n        var _this = _super.call(this) || this;\n        /**\n         * The current state of the WSTransport.\n         */\n        _this.state = WSTransportState.Closed;\n        /**\n         * An instance of Logger to use.\n         */\n        _this._log = log_1.default.getInstance();\n        /**\n         * Whether we should attempt to fallback if we receive an applicable error\n         * when trying to connect to a signaling endpoint.\n         */\n        _this._shouldFallback = false;\n        /**\n         * The current uri index that the transport is connected to.\n         */\n        _this._uriIndex = 0;\n        /**\n         * Move the uri index to the next index\n         * If the index is at the end, the index goes back to the first one.\n         */\n        _this._moveUriIndex = function () {\n            _this._uriIndex++;\n            if (_this._uriIndex >= _this._uris.length) {\n                _this._uriIndex = 0;\n            }\n        };\n        /**\n         * Called in response to WebSocket#close event.\n         */\n        _this._onSocketClose = function (event) {\n            _this._log.info(\"Received websocket close event code: \" + event.code + \". Reason: \" + event.reason);\n            // 1006: Abnormal close. When the server is unreacheable\n            // 1015: TLS Handshake error\n            if (event.code === 1006 || event.code === 1015) {\n                _this.emit('error', {\n                    code: 31005,\n                    message: event.reason ||\n                        'Websocket connection to Twilio\\'s signaling servers were ' +\n                            'unexpectedly ended. If this is happening consistently, there may ' +\n                            'be an issue resolving the hostname provided. If a region or an ' +\n                            'edge is being specified in Device setup, ensure it is valid.',\n                    twilioError: new errors_1.SignalingErrors.ConnectionError(),\n                });\n                var wasConnected = (\n                // Only in Safari and certain Firefox versions, on network interruption, websocket drops right away with 1006\n                // Let's check current state if it's open, meaning we should not fallback\n                // because we're coming from a previously connected session\n                _this.state === WSTransportState.Open ||\n                    // But on other browsers, websocket doesn't drop\n                    // but our heartbeat catches it, setting the internal state to \"Connecting\".\n                    // With this, we should check the previous state instead.\n                    _this._previousState === WSTransportState.Open);\n                // Only fallback if this is not the first error\n                // and if we were not connected previously\n                if (_this._shouldFallback || !wasConnected) {\n                    _this._moveUriIndex();\n                }\n                _this._shouldFallback = true;\n            }\n            _this._closeSocket();\n        };\n        /**\n         * Called in response to WebSocket#error event.\n         */\n        _this._onSocketError = function (err) {\n            _this._log.info(\"WebSocket received error: \" + err.message);\n            _this.emit('error', {\n                code: 31000,\n                message: err.message || 'WSTransport socket error',\n                twilioError: new errors_1.SignalingErrors.ConnectionDisconnected(),\n            });\n        };\n        /**\n         * Called in response to WebSocket#message event.\n         */\n        _this._onSocketMessage = function (message) {\n            // Clear heartbeat timeout on any incoming message, as they\n            // all indicate an active connection.\n            _this._setHeartbeatTimeout();\n            // Filter and respond to heartbeats\n            if (_this._socket && message.data === '\\n') {\n                _this._socket.send('\\n');\n                return;\n            }\n            _this.emit('message', message);\n        };\n        /**\n         * Called in response to WebSocket#open event.\n         */\n        _this._onSocketOpen = function () {\n            _this._log.info('WebSocket opened successfully.');\n            _this._timeOpened = Date.now();\n            _this._shouldFallback = false;\n            _this._setState(WSTransportState.Open);\n            clearTimeout(_this._connectTimeout);\n            _this._setHeartbeatTimeout();\n            _this.emit('open');\n        };\n        _this._connectTimeoutMs = options.connectTimeoutMs || CONNECT_TIMEOUT;\n        var initialDelay = 100;\n        if (uris && uris.length > 1) {\n            // We only want a random initial delay if there are any fallback edges\n            // Initial delay between 1s and 5s both inclusive\n            initialDelay = Math.floor(Math.random() * (5000 - 1000 + 1)) + 1000;\n        }\n        var backoffConfig = {\n            factor: 2.0,\n            initialDelay: initialDelay,\n            maxDelay: typeof options.backoffMaxMs === 'number'\n                ? Math.max(options.backoffMaxMs, 3000)\n                : 20000,\n            randomisationFactor: 0.40,\n        };\n        _this._log.info('Initializing transport backoff using config: ', backoffConfig);\n        _this._backoff = Backoff.exponential(backoffConfig);\n        _this._uris = uris;\n        _this._WebSocket = options.WebSocket || WebSocket;\n        // Called when a backoff timer is started.\n        _this._backoff.on('backoff', function (_, delay) {\n            if (_this.state === WSTransportState.Closed) {\n                return;\n            }\n            _this._log.info(\"Will attempt to reconnect WebSocket in \" + delay + \"ms\");\n        });\n        // Called when a backoff timer ends. We want to try to reconnect\n        // the WebSocket at this point.\n        _this._backoff.on('ready', function (attempt) {\n            if (_this.state === WSTransportState.Closed) {\n                return;\n            }\n            _this._connect(attempt + 1);\n        });\n        return _this;\n    }\n    /**\n     * Close the WebSocket, and don't try to reconnect.\n     */\n    WSTransport.prototype.close = function () {\n        this._log.info('WSTransport.close() called...');\n        this._close();\n    };\n    /**\n     * Attempt to open a WebSocket connection.\n     */\n    WSTransport.prototype.open = function () {\n        this._log.info('WSTransport.open() called...');\n        if (this._socket &&\n            (this._socket.readyState === WebSocket.CONNECTING ||\n                this._socket.readyState === WebSocket.OPEN)) {\n            this._log.info('WebSocket already open.');\n            return;\n        }\n        this._connect();\n    };\n    /**\n     * Send a message through the WebSocket connection.\n     * @param message - A message to send to the endpoint.\n     * @returns Whether the message was sent.\n     */\n    WSTransport.prototype.send = function (message) {\n        // We can't send the message if the WebSocket isn't open\n        if (!this._socket || this._socket.readyState !== WebSocket.OPEN) {\n            return false;\n        }\n        try {\n            this._socket.send(message);\n        }\n        catch (e) {\n            // Some unknown error occurred. Reset the socket to get a fresh session.\n            this._log.info('Error while sending message:', e.message);\n            this._closeSocket();\n            return false;\n        }\n        return true;\n    };\n    /**\n     * Close the WebSocket, and don't try to reconnect.\n     */\n    WSTransport.prototype._close = function () {\n        this._setState(WSTransportState.Closed);\n        this._closeSocket();\n    };\n    /**\n     * Close the WebSocket and remove all event listeners.\n     */\n    WSTransport.prototype._closeSocket = function () {\n        clearTimeout(this._connectTimeout);\n        clearTimeout(this._heartbeatTimeout);\n        this._log.info('Closing and cleaning up WebSocket...');\n        if (!this._socket) {\n            this._log.info('No WebSocket to clean up.');\n            return;\n        }\n        this._socket.removeEventListener('close', this._onSocketClose);\n        this._socket.removeEventListener('error', this._onSocketError);\n        this._socket.removeEventListener('message', this._onSocketMessage);\n        this._socket.removeEventListener('open', this._onSocketOpen);\n        if (this._socket.readyState === WebSocket.CONNECTING ||\n            this._socket.readyState === WebSocket.OPEN) {\n            this._socket.close();\n        }\n        // Reset backoff counter if connection was open for long enough to be considered successful\n        if (this._timeOpened && Date.now() - this._timeOpened > CONNECT_SUCCESS_TIMEOUT) {\n            this._backoff.reset();\n        }\n        this._backoff.backoff();\n        delete this._socket;\n        this.emit('close');\n    };\n    /**\n     * Attempt to connect to the endpoint via WebSocket.\n     * @param [retryCount] - Retry number, if this is a retry. Undefined if\n     *   first attempt, 1+ if a retry.\n     */\n    WSTransport.prototype._connect = function (retryCount) {\n        var _this = this;\n        if (retryCount) {\n            this._log.info(\"Attempting to reconnect (retry #\" + retryCount + \")...\");\n        }\n        else {\n            this._log.info('Attempting to connect...');\n        }\n        this._closeSocket();\n        this._setState(WSTransportState.Connecting);\n        var socket = null;\n        try {\n            socket = new this._WebSocket(this._uris[this._uriIndex]);\n        }\n        catch (e) {\n            this._log.info('Could not connect to endpoint:', e.message);\n            this._close();\n            this.emit('error', {\n                code: 31000,\n                message: e.message || \"Could not connect to \" + this._uris[this._uriIndex],\n                twilioError: new errors_1.SignalingErrors.ConnectionDisconnected(),\n            });\n            return;\n        }\n        delete this._timeOpened;\n        this._connectTimeout = setTimeout(function () {\n            _this._log.info('WebSocket connection attempt timed out.');\n            _this._moveUriIndex();\n            _this._closeSocket();\n        }, this._connectTimeoutMs);\n        socket.addEventListener('close', this._onSocketClose);\n        socket.addEventListener('error', this._onSocketError);\n        socket.addEventListener('message', this._onSocketMessage);\n        socket.addEventListener('open', this._onSocketOpen);\n        this._socket = socket;\n    };\n    /**\n     * Set a timeout to reconnect after HEARTBEAT_TIMEOUT milliseconds\n     *   have passed without receiving a message over the WebSocket.\n     */\n    WSTransport.prototype._setHeartbeatTimeout = function () {\n        var _this = this;\n        clearTimeout(this._heartbeatTimeout);\n        this._heartbeatTimeout = setTimeout(function () {\n            _this._log.info(\"No messages received in \" + HEARTBEAT_TIMEOUT / 1000 + \" seconds. Reconnecting...\");\n            _this._shouldFallback = true;\n            _this._closeSocket();\n        }, HEARTBEAT_TIMEOUT);\n    };\n    /**\n     * Set the current and previous state\n     */\n    WSTransport.prototype._setState = function (state) {\n        this._previousState = this.state;\n        this.state = state;\n    };\n    Object.defineProperty(WSTransport.prototype, \"uri\", {\n        /**\n         * The uri the transport is currently connected to\n         */\n        get: function () {\n            return this._uris[this._uriIndex];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return WSTransport;\n}(events_1.EventEmitter));\nexports.default = WSTransport;\n//# sourceMappingURL=wstransport.js.map\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/es5/twilio/wstransport.js?");

/***/ }),

/***/ "./node_modules/twilio-client/node_modules/loglevel/lib/loglevel.js":
/*!**************************************************************************!*\
  !*** ./node_modules/twilio-client/node_modules/loglevel/lib/loglevel.js ***!
  \**************************************************************************/
/***/ (function(module, exports, __webpack_require__) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (true) {\n        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n    } else {}\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/twilio-client/node_modules/loglevel/lib/loglevel.js?");

/***/ }),

/***/ "./src/public/fonts/cerebrisans/cerebrisans-medium.eot":
/*!*************************************************************!*\
  !*** ./src/public/fonts/cerebrisans/cerebrisans-medium.eot ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:application/vnd.ms-fontobject;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/public/fonts/cerebrisans/cerebrisans-medium.eot?");

/***/ }),

/***/ "./src/public/fonts/cerebrisans/cerebrisans-medium.ttf":
/*!*************************************************************!*\
  !*** ./src/public/fonts/cerebrisans/cerebrisans-medium.ttf ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:font/ttf;base64,AAEAAAAPAIAAAwBwRkZUTX9ZAv8AAYPcAAAAHEdERUYerCCnAAEUMAAAALJHUE9TxSykBQABIYwAAGJOR1NVQpOGdnMAARTkAAAMpk9TLzJvJ5vUAAABeAAAAGBjbWFwPI9IxQAACuwAAAQ2Z2FzcP//AAMAARQoAAAACGdseWZkObfyAAATzAAA54RoZWFkDte1wQAAAPwAAAA2aGhlYQxKCksAAAE0AAAAJGhtdHiWv3E1AAAB2AAACRJsb2Nht5jxsAAADyQAAASobWF4cAKcAGQAAAFYAAAAIG5hbWUfmKFwAAD7UAAAB0Fwb3N0y6Ox9QABApQAABGSAAEAAAABAABmBcBQXw889QALCAAAAAAA1Zo07AAAAADVmjTs+Y/9ygr1CSIAAAAIAAIAAAAAAAAAAQAAB8P9mgAAC4T5j/72CvUAAQAAAAAAAAAAAAAAAAAAAjYAAQAAAlMAYQAHAAAAAAACAAAAAQABAAAAQAAAAAAAAAADBLkB9AAFAAAFMwTMAAAAmQUzBMwAAALMAGYCWwAAAAAGAAAAAAAAACAAAAcAAAAAAAAAAAAAAABBTU1QAEAAIPsCBgD+AAC0B8MCZiAAAZMAAAAAA+4FkgAAACAACgTiALYAAAAAAqoAAAIUAAAClgC9BAMA1QYBAFsFVwCDBlMAaAYLAG4CiADZAq8AZQKvACAD5AB/BLEAdAKUAKUECgCfApMAvASh//IEpABiBKQA6QSkAGQEpABeBKQALQSkAHIEpABSBKQAaASkAF4EpABTAn4AsQKSAIMFVwBlBR8A9AVXAIcEHgBVBvgAhgWYAC0FEQDMBg4AaQXBAMwEYgDMBD0AzAZkAGkGDQDMAocAzAPeACUFZwDMA8QAzAeEAJMGTQDMBnIAaQUJAMwGjABnBRsAzAUEAFgEDwAwBZMArgV0AC0IPAA5BcoAKwTaAB8E0ABeAqUAowSh//ICoAArBYAAVgU9AJ8B5ABBBFgAWgUDAKMEeABOBQMAUgSGAFICuQAdBOgASwSyAKMCLQCLAi//yQRWAKMCLgCjBt4AowSzAKMEwwBQBQMAowUCAFIC3ACjA8kATwLtABYEsgCOBCgADwaKABoEZAAXBCMAEQOcAC0CjwA4AnsA9AKMAD4FfwCzApYAvQSWAIsFOQCZBXQAzAWcAHUCewD0BSwAjAOmAHwG0QCHA70AbQQbADkGggB6BAoAnwbwAJcDzQCfA7MAsAToAIkB5AAuBUsA9ASoAGACXwDEAlsARANyAGgEGwBFBicAAgZcAAIHAAAkBB4AVQWYAC0FmAAtBZgALQWYAC0FmAAtBZgALQciAC0GDgBpBGIAzARiAMwEYgDMBGIAzAKHABgChwDMAocAHAKH/+wFwQAuBk0AzAZyAGkGcgBpBnIAaQZyAGkGcgBpBDEAhQZyAGkFkwCuBZMArgWTAK4FkwCuBNoAHwTJAMwE4QCjBFgAWgRYAFoEWABaBFgAWgRYAFoEWABaBvIAWgR4AE4EhgBSBIYAUgSGAFIEhgBSAi3/7QItAKMCLf/xAi3/wQSYAE0EswCjBMMAUATDAFAEwwBQBMMAUATDAFAEHwBzBMMAUASyAI4EsgCOBLIAjgSyAI4EIwARBQMAowQjABEFmAAtBFgAWgWYAC0EWABaBZgALQRYAFoGDgBpBHgATgYOAGkEeABOBg4AaQR4AE4FwQDMBbgAVQXBAC4FAwBSBGIAzASGAFIEYgDMBIYAUgRiAMwEhgBSBGIAzASGAFIGZABpBOgASwZkAGkE6ABLBmQAaQToAEsGDQBFBLIAIgKH/+wCLf/pAof//AIt/9EChwCGAi0AVAKHALYCLQCjBWcAzARWAKMDxADMAi4AowPEAMwCLgAMBDQAzALXAKMDxAAmAi7/8AZNAMwEswCjBk0AzASzAKMGTQDMBLMAowZkAMwEtACjBnIAaQTDAFAGcgBpBMMAUAe7AGkHxgBQBRsAzALcAKMFGwDMAtwADAUbAMwC3AA9BQQAWAPJAE8FBABYA8kATwUEAFgDyQBPBA8AMALtABYEDwAwAscABQQPADAC7QAWBZMArgSyAI4FkwCuBLIAjgWTAK4EsgCOBZMArgSyAI4FkwCuBLIAjgg8ADkGigAaBNoAHwQjABEE2gAfBNAAXgOcAC0E0ABeA5wALQTQAF4DnAAtBBkAmAZyAGkEwwBQBZMArgSyAI4FmAAtBFgAWgKHABwCLf/xBnIAaQTDAFAFkwCuBLIAjgWTAK4EsgCOBZMArgSyAI4FkwCuBLIAjgWTAK4EsgCOBQQAWAPJAE8EDwAwAu0AFgIv/8kCvwA5AsYAPAOEAGECEwB8ApoAbAIJAFIDYwB5A1UALgAA/l0AAP5KAAD9egAA/RYAAPzS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VVWSiAAC/NYGH/+iCJEAHAAqAAABIiYnLgIjIgYVIzQ2MhceBTMyNjUzFAYDIiY1MxQWMzI2NTMUBv7JPkwgExIoFi4ye3TIQwMXCBUPFwwtL31y+qO9iXNkZXSIvQeEMCgaFhhRQXGOUwMdCRQIB01DcI7+m4mRVVVVVZKIAAAAAv16Bh//yAkDAAMACgAACQEXCwEjEzMTIyf+UgEBdeHZlNuX25STB6gBW1T++f53ASn+170AAAAC/XUGH//HCQMAAwAKAAABAzcBAyMTMxMjJ/5W4XQBAdyU25fblJMHqAEHVP6l/ncBKf7XvQAAAAL9egYf/8cJIgARABgAAAE1NjU0JiMiByc2MzIWFRQHFQMjEzMTIyf+bHMpJS8nO0FYV2iAypTbl9uUkweJfxZRIisjUzZfTXYnUP6WASn+170AAAL9SQYfAAoItwAcACMAAAMiJicuAiMiBhUjNDYyFx4FMzI2NTMUBgEjEzMTIyfPPkwgExIoFi4ye3TIQwMXCBUPFwwtL31y/naU25fblJMHqjAoGhYYUUFxjlMDHQkUCAdNQ3CO/nUBKf7XvQAAAAAAACABhgABAAAAAAAAAFoAtgABAAAAAAABABMBOQABAAAAAAACAAcBXQABAAAAAAADAB0BoQABAAAAAAAEABMB5wABAAAAAAAFAAEB/wABAAAAAAAGABICJwABAAAAAAAHAEkCzgABAAAAAAAIABQDQgABAAAAAAAJABQDgQABAAAAAAAKAE0EMgABAAAAAAALAB4EvgABAAAAAAAMAB4FGwABAAAAAAAOABYFaAABAAAAAAAQAAwFmQABAAAAAAARAAYFtAADAAEECQAAALQAAAADAAEECQABACYBEQADAAEECQACAA4BTQADAAEECQADADoBZQADAAEECQAEACYBvwADAAEECQAFAAIB+wADAAEECQAGACQCAQADAAEECQAHAJICOgADAAEECQAIACgDGAADAAEECQAJACgDVwADAAEECQAKAJoDlgADAAEECQALADwEgAADAAEECQAMADwE3QADAAEECQAOACwFOgADAAEECQAQABgFfwADAAEECQARAAwFpgBDAG8AcAB5AHIAaQBnAGgAdAAgAKkAMgAwADEANgAuACAAQwBlAHIAZQBiAHIAaQAgAFMAYQBuAHMAIABpAHMAIABhACAAdABy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AIAAgQDsAO4AugEEAQUBBgEHAQgBCQD9AP4BCgELAP8BAAEMAQ0BDgEBAQ8BEAERARIBEwEUARUBFgD4APkBFwEYARkBGgEbARwBHQEeAR8BIAEhASIA+gDXASMBJAElASYBJwEoASkBKgDiAOMBKwEsAS0BLgEvATABMQEyATMBNAE1ATYAsACxATcBOAE5AToBOwE8AT0BPgD7APwA5ADlAT8BQAFBAUIBQwFEAUUBRgFHAUgBSQFKAUsBTAFNAU4BTwFQAVEBUgC7AVMBVAFVAVYA5gDnAKYBVwFYAVkBWgFbAVwBXQFeAV8BYAFhAWIBYwFkAWUBZgFnAWgBaQFqAWsBbAFtAW4BbwDYAOEA2wDcAN0A4ADZAN8BcAFxAXIBcwF0AXUBdgF3AXgBeQF6AXsBfAF9AX4BfwGAAYEBggGDAYQBhQGGAYcBiACbAYkBigGLAYwBjQGOAY8BkAGRAZIBkwGUAZUBlgGXAZgBmQGaAZsBnAGdAZ4BnwGgAaEBogGjAaQBpQGmAacBqAGpAaoBqwGsAa0BrgGvAbABsQGyAbMBtAG1AbYBtwG4AbkBugG7AbwBvQG+Ab8BwAHBAcIBwwHEAcUBxgHHAcgByQHKAcsBzAHNAc4BzwHQAdEB0gHTAdQB1QHWAdcB2AHZAdoB2wHcAd0B3gHfAeAB4QHiAeMB5AHlAeYB5wHoALIAswC2ALcAxAC0ALUAxQCCAMIAhwCrAMYAvgC/ALwB6QHqAesAjAHsAJgB7QCaAJkA7wClAJIAnACnAI8AlACVALkB7gDAAMEB7wHwAfEB8gHzAfQB9QH2AfcB+AH5AfoB+wH8Af0B/gH/AgACAQICAgMCBAIFAgYCBwIIAgkCCgILAgwCDQIOAg8CEAIRAhICEwIUAhUCFgIXAhgCGQIaAhsCHAIdAh4CHwIgAiECIgIjAiQCJQImAicCKAIpAioCKwIsAi0CLgIvAjACMQIyAjMCNAI1AjYCNwI4AjkCOgI7AjwCPQI+Aj8CQAJBAkICQwJEAkUCRgJHAkgCSQJKAksCTAJNAk4CTwJQAlECUgJTAlQCVQJWAlcCWAJZAloCWwd1bmkwMEFEB3VuaTAwQjUHQW1hY3JvbgdhbWFjcm9uBkFicmV2ZQZhYnJldmUHQW9nb25lawdhb2dvbmVrCkNkb3RhY2NlbnQKY2RvdGFjY2VudAZEY2Fyb24GZGNhcm9uBkRjcm9hdAdFbWFjcm9uB2VtYWNyb24KRWRvdGFjY2VudAplZG90YWNjZW50B0VvZ29uZWsHZW9nb25lawZFY2Fyb24GZWNhcm9uCkdkb3RhY2NlbnQKZ2RvdGFjY2VudAxHY29tbWFhY2NlbnQMZ2NvbW1hYWNjZW50BEhiYXIEaGJhcgZJdGlsZGUGaXRpbGRlB0ltYWNyb24HaW1hY3JvbgdJb2dvbmVrB2lvZ29uZWsMS2NvbW1hYWNjZW50DGtjb21tYWFjY2VudAZMYWN1dGUGbGFjdXRlDExjb21tYWFjY2VudAxsY29tbWFhY2NlbnQGTGNhcm9uBmxjYXJvbgZOYWN1dGUGbmFjdXRlDE5jb21tYWFjY2VudAxuY29tbWFhY2NlbnQGTmNhcm9uBm5jYXJvbgNFbmcDZW5nB09tYWNyb24Hb21hY3Jvbg1PaHVuZ2FydW1sYXV0DW9odW5nYXJ1bWxhdXQGUmFjdXRlBnJhY3V0ZQxSY29tbWFhY2NlbnQMcmNvbW1hYWNjZW50BlJjYXJvbgZyY2Fyb24GU2FjdXRlBnNhY3V0ZQd1bmkwMTYyB3VuaTAxNjMGVGNhcm9uBnRjYXJvbgRUYmFyBHRiYXIGVXRpbGRlBnV0aWxkZQdVbWFjcm9uB3VtYWNyb24FVXJpbmcFdXJpbmcNVWh1bmdhcnVtbGF1dA11aHVuZ2FydW1sYXV0B1VvZ29uZWsHdW9nb25lawtXY2lyY3VtZmxleAt3Y2lyY3VtZmxleAtZY2lyY3VtZmxleAt5Y2lyY3VtZmxleAZaYWN1dGUGemFjdXRlClpkb3RhY2NlbnQKemRvdGFjY2VudAVPaG9ybgVvaG9ybgVVaG9ybgV1aG9ybgd1bmkwMUNEB3VuaTAxQ0UHdW5pMDFDRgd1bmkwMUQwB3VuaTAxRDEHdW5pMDFEMgd1bmkwMUQzB3VuaTAxRDQHdW5pMDFENQd1bmkwMUQ2B3VuaTAxRDcHdW5pMDFEOAd1bmkwMUQ5B3VuaTAxREEHdW5pMDFEQgd1bmkwMURDDFNjb21tYWFjY2VudAxzY29tbWFhY2NlbnQHdW5pMDIxQQd1bmkwMjFCB3VuaTAyMzcJZ3JhdmVjb21iCWFjdXRlY29tYgd1bmkwMzAyCXRpbGRlY29tYgd1bmkwMzA0B3VuaTAzMDYHdW5pMDMwNwd1bmkwMzA4DWhvb2thYm92ZWNvbWIHdW5pMDMwQQd1bmkwMzBCB3VuaTAzMEMHdW5pMDMxMgd1bmkwMzFCDGRvdGJlbG93Y29tYgd1bmkwMzI2B3VuaTAzMjcHdW5pMDMyOAd1bmkwMzM1B3VuaTAzMzYHdW5pMDMzNwd1bmkwMzM4B3VuaTAzOTQHdW5pMDNBOQd1bmkwM0JDBldncmF2ZQZ3Z3JhdmUGV2FjdXRlBndhY3V0ZQlXZGllcmVzaXMJd2RpZXJlc2lzB3VuaTFFQTAHdW5pMUVBMQd1bmkxRUEyB3VuaTFFQTMHdW5pMUVBNAd1bmkxRUE1B3VuaTFFQTYHdW5pMUVBNwd1bmkxRUE4B3VuaTFFQTkHdW5pMUVBQQd1bmkxRUFCB3VuaTFFQUMHdW5pMUVBRAd1bmkxRUFFB3VuaTFFQUYHdW5pMUVCMAd1bmkxRUIxB3VuaTFFQjIHdW5pMUVCMwd1bmkxRUI0B3VuaTFFQjUHdW5pMUVCNgd1bmkxRUI3B3VuaTFFQjgHdW5pMUVCOQd1bmkxRUJBB3VuaTFFQkIHdW5pMUVCQwd1bmkxRUJEB3VuaTFFQkUHdW5pMUVCRgd1bmkxRUMwB3VuaTFFQzEHdW5pMUVDMgd1bmkxRUMzB3VuaTFFQzQHdW5pMUVDNQd1bmkxRUM2B3VuaTFFQzcHdW5pMUVDOAd1bmkxRUM5B3VuaTFFQ0EHdW5pMUVDQgd1bmkxRUNDB3VuaTFFQ0QHdW5pMUVDRQd1bmkxRUNGB3VuaTFFRDAHdW5pMUVEMQd1bmkxRUQyB3VuaTFFRDMHdW5pMUVENAd1bmkxRUQ1B3VuaTFFRDYHdW5pMUVENwd1bmkxRUQ4B3VuaTFFRDkHdW5pMUVEQQd1bmkxRURCB3VuaTFFREMHdW5pMUVERAd1bmkxRURFB3VuaTFFREYHdW5pMUVFMAd1bmkxRUUxB3VuaTFFRTIHdW5pMUVFMwd1bmkxRUU0B3VuaTFFRTUHdW5pMUVFNgd1bmkxRUU3B3VuaTFFRTgHdW5pMUVFOQd1bmkxRUVBB3VuaTFFRUIHdW5pMUVFQwd1bmkxRUVEB3VuaTFFRUUHdW5pMUVFRgd1bmkxRUYwB3VuaTFFRjEGWWdyYXZlBnlncmF2ZQd1bmkxRUY0B3VuaTFFRjUHdW5pMUVGNgd1bmkxRUY3B3VuaTFFRjgHdW5pMUVGOQRFdXJvB3VuaTIxMTMHdW5pMjExNgllc3RpbWF0ZWQIZW1wdHlzZXQHdW5pRjhGRgZHLnNzMDILR2JyZXZlLnNzMDIRR2NvbW1hYWNjZW50LnNzMDIPR2RvdGFjY2VudC5zczAyBkcuc3MwMwtHYnJldmUuc3MwMxFHY29tbWFhY2NlbnQuc3MwMw9HZG90YWNjZW50LnNzMDMJaS5sb2NsVFJLBmcuc3MwMQtnYnJldmUuc3MwMRFnY29tbWFhY2NlbnQuc3MwMQ9nZG90YWNjZW50LnNzMDEGYS5zczAyC2FhY3V0ZS5zczAyC2FicmV2ZS5zczAyDHVuaTFFQUYuc3MwMgx1bmkxRUI3LnNzMDIMdW5pMUVCMS5zczAyDHVuaTFFQjMuc3MwMgx1bmkxRUI1LnNzMDIMdW5pMDFDRS5zczAyEGFjaXJjdW1mbGV4LnNzMDIMdW5pMUVBNS5zczAyDHVuaTFFQUQuc3MwMgx1bmkxRUE3LnNzMDIMdW5pMUVBOS5zczAyDHVuaTFFQUIuc3MwMg5hZGllcmVzaXMuc3MwMgx1bmkxRUExLnNzMDILYWdyYXZlLnNzMDIMdW5pMUVBMy5zczAyDGFtYWNyb24uc3MwMgxhb2dvbmVrLnNzMDIKYXJpbmcuc3MwMgthdGlsZGUuc3MwMgNmX2YDZl90A3RfdAl6ZXJvLnN1YnMIb25lLnN1YnMIdHdvLnN1YnMKdGhyZWUuc3Vicwlmb3VyLnN1YnMJZml2ZS5zdWJzCHNpeC5zdWJzCnNldmVuLnN1YnMKZWlnaHQuc3VicwluaW5lLnN1YnMJemVyby5kbm9tCG9uZS5kbm9tCHR3by5kbm9tCnRocmVlLmRub20JZm91ci5kbm9tCWZpdmUuZG5vbQhzaXguZG5vbQpzZXZlbi5kbm9tCmVpZ2h0LmRub20JbmluZS5kbm9tCXplcm8ubnVtcghvbmUubnVtcgh0d28ubnVtcgp0aHJlZS5udW1yCWZvdXIubnVtcglmaXZlLm51bXIIc2l4Lm51bXIKc2V2ZW4ubnVtcgplaWdodC5udW1yCW5pbmUubnVtcgl6ZXJvLnN1cHMIb25lLnN1cHMIdHdvLnN1cHMKdGhyZWUuc3Vwcwlmb3VyLnN1cHMJZml2ZS5zdXBzCHNpeC5zdXBzCnNldmVuLnN1cHMKZWlnaHQuc3VwcwluaW5lLnN1cHMMdW5pMDMwOC5jYXNlDHVuaTAzMDcuY2FzZQ5ncmF2ZWNvbWIuY2FzZQ5hY3V0ZWNvbWIuY2FzZQx1bmkwMzBCLmNhc2UMdW5pMDMwMi5jYXNlDHVuaTAzMEMuY2FzZQx1bmkwMzA2LmNhc2UMdW5pMDMwQS5jYXNlDnRpbGRlY29tYi5jYXNlDHVuaTAzMDQuY2FzZRJob29rYWJvdmVjb21iLmNhc2UMdW5pMDMxMi5jYXNlDHVuaTAzMzguY2FzZQt1bmkwMzA2MDMwMQt1bmkwMzA2MDMwMAt1bmkwMzA2MDMwOQt1bmkwMzA2MDMwMwt1bmkwMzAyMDMwMQt1bmkwMzAyMDMwMAt1bmkwMzAyMDMwOQt1bmkwMzAyMDMwMxB1bmkwMzA2MDMwMS5jYXNlEHVuaTAzMDYwMzAwLmNhc2UQdW5pMDMwNjAzMDkuY2FzZRB1bmkwMzA2MDMwMy5jYXNlEHVuaTAzMDIwMzAxLmNhc2UQdW5pMDMwMjAzMDAuY2FzZRB1bmkwMzAyMDMwOS5jYXNlEHVuaTAzMDIwMzAzLmNhc2UAAAAAAAH//wACAAEAAAAMAAAAiACQAAIAFAABAGgAAQBpAGkAAwBqAG8AAQBwAHAAAwBxAHIAAQBzAHMAAwB0AHYAAQB3AHcAAwB4AT4AAQE/AUIAAwFDAUQAAQFFAUUAAwFGAUYAAQFHAVwAAwFdAeMAAQHkAeUAAgHmAgkAAQIKAgwAAgINAjQAAQI1AlIAAwAEAAAAAgAAAAIABQFHAVMAAgFUAVQAAwFVAVcAAQI1AkEAAgJDAlIAAgAAAAEAAAAKAa4C3gACREZMVAAObGF0bgA4AAQAAAAA//8AEAAAAAEAAgAEAAUABgAHAA8AEAARABIAEwAUABUAFgAXAC4AB0FaRSAAVENSVCAAfEtBWiAApE1PTCAAzFJPTSAA9FRBVCABHFRSSyABRAAA//8AEAAAAAEAAwAEAAUABgAHAA8AEAARABIAEwAUABUAFgAXAAD//wARAAAAAQACAAQABQAGAAcACAAPABAAEQASABMAFAAVABYAFwAA//8AEQAAAAEAAgAEAAUABgAHAAkADwAQABEAEgATABQAFQAWABcAAP//ABEAAAABAAIABAAFAAYABwAKAA8AEAARABIAEwAUABUAFgAXAAD//wARAAAAAQACAAQABQAGAAcACwAPABAAEQASABMAFAAVABYAFwAA//8AEQAAAAEAAgAEAAUABgAHAAwADwAQABEAEgATABQAFQAWABcAAP//ABEAAAABAAIABAAFAAYABwANAA8AEAARABIAEwAUABUAFgAXAAD//wARAAAAAQACAAQABQAGAAcADgAPABAAEQASABMAFAAVABYAFwAYYWFsdACSY2FzZQCaY2NtcACgY2NtcACoZGxpZwCyZG5vbQC4ZnJhYwC+bGlnYQDIbG9jbADObG9jbADUbG9jbADabG9jbADgbG9jbADmbG9jbADsbG9jbADybnVtcgD4b3JkbgD+c2FsdAEGc2luZgEMc3MwMQESc3MwMgEYc3MwMwEec3VicwEkc3VwcwEqAAAAAgAAAAEAAAABABYAAAACAAIAAwAAAAMAAgADAAQAAAABABcAAAABABAAAAADABEAEgATAAAAAQAYAAAAAQALAAAAAQAKAAAAAQAHAAAAAQAGAAAAAQAFAAAAAQAIAAAAAQAJAAAAAQAPAAAAAgAUABUAAAABABkAAAABAA0AAAABABoAAAABABsAAAABABwAAAABAAwAAAABAA4AHgA+AEYATgBcAGYAbgB2AH4AhgCOAJYAngCmAK4AtgC+AMYAzgDWAN4A6ADyAPoBAgEKARIBGgEiASoBMgABAAAAAQD8AAMAAAABAgoABgAAAAQC1AL4Ay4DbAAGAAAAAgTuBSYABAAAAAEFVAABAAAAAQXuAAEAAAABBgAAAQAAAAEGEgABAAAAAQYWAAEAAAABBhoAAQAAAAEGHgABAAAAAQYiAAEAAAABBiYAAQAAAAEGLgABAAAAAQY2AAEAAAABBj4AAQAAAAEGRgABAAAAAQZOAAEAAAABBlIABgAAAAIGWgZ8AAYAAAACBpgGvAAEAAAAAQbWAAEAAAABBugABAAAAAEHKAAEAAAAAQdGAAEAAAABB2YAAQAAAAEHeAABAAAAAQeKAAEAAAABB/gAAQAAAAEICgACAIwAQwHQAGsAeAHvAT4AeAIEAfQB/AIJAgICCAIGAfUCBwHwAfIB8QE6ATsBPAE9AfsCNwI4AjoCPgI/AjwCNgI1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EDoQQBBGEEwQUhBYEF4QZBBqEHAQdhB8EIIQiBCOEJQQmhCgEKYQrBCyELgQvhDEEMoQ0BDWENwQ4hDoEO4Q9BD6EQARBhEMERIRGBEeESQRKhEwETYRPBFCEUgRThFUEVoRYBFmEWwRchF4EX4RhBGKEZARlhGcEaIRqBGuEbQRuhHAEcYRzBHSEdgR3hHkEeoR8BH2EfwSAhIIEg4SFBIaEiASJhIsEjISOBI+EkQSShJQElYSXBJiEmgSbhJ0EnoSgBKGEowSkhKYEp4SpBKqErASthK8EsISyBLOEtQS2hLgEuYS7BLyEvgS/hMEEwoTEBMWExwTIhMoEy4TNBM6E0ATRhNME1ITWBNeE2QTahNwE3YTfBOCE4gTjhOUE5oToBOmE6wTshO4E74TxBPKE9AT1hPcE+IT6BPuE/QT+hQAFAYUDBQSFBgUHhQkFCoUMBQ2FDwUQhRIFE4UVBRaFGAUZhRsFHIUeBR+FIQUihSQFJYUnBSiFKgUrhS0FLoUwBTGFMwU0hTYFN4U5BTqFPAU9hT8FQIVCBUOFRQVGhUgFSYVLBUyFTgVPhVEFUoVUBVWFVwVYhVoFW4VdBV6FYAVhhWMFZIVmBWeFaQVqhWwFbYVvBXCFcgVzhXUFdoV4BXmFewV8hX4Ff4WBBYKFhAWFhYcFiIWKBYuFjQWOhZAFkYWTBZSFlgWXhZkFmoWcBZ2FnwWghaIFo4WlBaaFqAWphasFrIWuBa+FsQWyhbQFtYW3BbiFugW7hb0FvoXABcGFwwXEhcYFx4XJBcqFzAXNhc8F0IXSBdOF1QXWhdgF2YXbBdyF3gXfheEF4oXkBeWF5wXoheoF64XtBe6F8AXxhfMF9IX2BfeF+QX6hfwF/YX/BgCGAgYDhgUGBoYIBgmGCwYMhg4GD4YRBhKGFAYVhhcGGIYaBhuGHQYehiAGIYYjBiSGJgYnhikGKoYsBi2GLwYwhjIGM4Y1BjaGOAY5hjsGPIY+Bj+GQQZChkQGRYZHBkiGSgZLhk0GToZQBlGGUwZUhlYGV4ZZBlqGXAZdhl8GYIZiBmOGZQZmhmgGaYZrBmyGbgZvhnEGcoZ0BnWGdwZ4hnoGe4Z9Bn6GgAaBhoMGhIaGBoeGiQaKhowGjYaPBpCGkgaThpUGloaYBpmGmwachp4Gn4ahBqKGpAalhqcGqIaqBquGrQauhrAGsYazBrSGtga3hrkGuoa8Br2GvwbAhsIGw4bFBsaGyAbJhssGzIbOBs+G0QbShtQG1YbXBtiG2gbbht0G3obgBuGG4wbkhuYG54bpBuqG7Abthu8G8IbyBvOG9Qb2hvgG+Yb7BvyG/gb/hwEHAocEBwWHBwcIhwoHC4cNBw6HEAcRhxMHFIcWBxeHGQcahxwHHYcfByCHIgcjhyUHJocoBymHKwcshy4HL4cxBzKHNAc1hzcHOIc6BzuHPQc+h0AHQYdDB0SHRgdHh0kHSodMB02HTwdQh1IHU4dVB1aHWAdZh1sHXIdeB1+HYQdih2QHZYdnB2iHagdrh20HbodwB3GHcwd0h3YHd4d5B3qHfAd9h38HgIeCB4OHhQeGh4gHiYeLB4yHjgePh5EHkoeUB5WHlweYh5oHm4edB56HoAehh6MHpIemB6eHqQeqh6wHrYevB7CHsgezh7UHtoe4B7mHuwe8h74Hv4fBB8KHxAfFh8cHyIfKB8uHzQfOh9AH0YfTB9SH1gfXh9kH2ofcB92H3wfgh+IH44flB+aH6Afph+sH7IfuB++H8Qfyh/QH9Yf3B/iH+gf7h/0H/ogACAGIAwgEiAYIB4gJCAqIDAgNiA8IEIgSCBOIFQgWiBgIGYgbCByIHggfiCEIIogkCCWIJwgoiCoIK4gtCC6IMAgxiDMINIg2CDeIOQg6iDwIPYg/CECIQghDiEUIRohICEmISwhMiE4IT4hRCFKIVAhViFcIWIhaCFuIXQheiGAIYYhjCGSIZghniGkIaohsCG2IbwhwiHIIc4h1CHaIeAh5iHsIfIh+CH+IgQiCiIQIhYiHCIiIigiLiI0IjoiQCJGIkwiUiJYIl4iZCJqInAidiJ8IoIiiCKOIpQimiKgIqYirCKyIrgiviLEIsoi0CLWItwi4iLoIu4i9CL6IwAjBiMMIxIjGCMeIyQjKiMwIzYjPCNCI0gjTiNUI1ojYCNmI2wjciN4I34jhCOKI5AjliOcI6IjqCOuI7QjuiPAI8YjzCPSI9gj3iPkI+oj8CP2I/wkAiQIJA4kFCQaJCAkJiQsJDIkOCQ+JEQkSiRQJFYkXCRiJGgkbiR0JHokgCSGJIwkkiSYJJ4kpCSqJLAktiS8JMIkyCTOJNQk2iTgJOYk7CTyJPgk/iUEJQolECUWJRwlIiUoJS4lNCU6JUAlRiVMJVIlWCVeJWQlaiVwJXYlfCWCJYgljiWUJZoloCWmJawlsiW4Jb4lxCXKJdAl1iXcJeIl6CXuJfQl+iYAJgYmDCYSJhgmHiYkJiomMCY2JjwmQiZIJk4mVCZaJmAmZiZsJnImeCZ+JoQmiiaQJpYmnCaiJqgmria0JromwCbGJswm0ibYJt4m5CbqJvAm9ib8JwInCCcOJxQnGicgJyYnLCcyJzgnPidEJ0onUCdWJ1wnYidoJ24ndCd6J4AnhieMJ5InmCeeJ6QnqiewJ7YnvCfCJ8gnzifUJ9on4CfmJ+wn8if4J/4oBCgKKBAoFigcKCIoKCguKDQoOihAKEYoTChSKFgoXihkKGoocCh2KHwogiiIKI4olCiaKKAopiisKLIouCi+KMQoyijQKNYo3CjiKOgo7ij0KPopACkGKQwpEikYKR4pJCkqKTApNik8KUIpSClOKVQpWilgKWYpbClyKXgpfimEKYopkCmWKZwpoimoKa4ptCm6KcApxinMKdIp2CneKeQp6inwKfYp/CoCKggqDioUKhoqIComKiwqMio4Kj4qRCpKKlAqVipcKmIqaCpuKnQqeiqAKoYqjCqSKpgqniqkKqoqsCq2KrwqwirIKs4q1CraKuAq5irsKvIq+Cr+KwQrCisQKxYrHCsiKygrLis0KzorQCtGK0wrUitYK14rZCtqK3Ardit8K4IriCuOK5QrmiugK6YrrCuyK7grvivEK8or0CvWK9wr4ivoK+4r9Cv6LAAsBiwMLBIsGCweLCQsKiwwLDYsPCxCLEgsTixULFosYCxmLGwscix4LH4shCyKLJAsliycLKIsqCyuLLQsuizALMYszCzSLNgs3izkLOos8Cz2LPwtAi0ILQ4tFC0aLSAtJi0sLTItOC0+LUQtSi1QLVYtXC1iLWgtbi10LXotgC2GLYwtki2YLZ4tpC2qLbAtti28LcItyC3OLdQt2i3gLeYt7C3yLfgt/i4ELgouEC4WLhwuIi4oLi4uNC46LkAuRi5MLlIuWC5eLmQuai5wLnYufC6CLoguji6ULpouoC6mLqwusi64Lr4uxC7KLtAu1i7cLuIu6C7uLvQu+i8ALwYvDC8SLxgvHi8kLyovMC82LzwvQi9IL04vVC9aL2AvZi9sL3IveC9+L4Qvii+QL5YvnC+iL6gvri+0L7ovwC/GL8wv0i/Y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AAEENwPyAAECyf4AAAED4AAyAAECyQWSAAEAAAAAAAEFSwWSAAECW/4AAAEEDwAAAAECWwPuAAEAAAAAAAEEeAPuAAECyQAAAAED4AAyAAEC1QeZAAEAAAAAAAEFSwWSAAECWwAAAAEEDwAAAAECYgXVAAEAAAAAAAEEeAPuAAECyQAAAAED4AAyAAEDNgd6AAEAAAAAAAEFXgWSAAECWwAAAAEEDwAAAAECyAXlAAEAAAAAAAEEiwPuAAECyQAAAAED4AAyAAECWQd6AAEAAAAAAAEFXgWSAAECWwAAAAEEDwAAAAECWwPuAAEAAAAAAAEEiwPuAAECyQAAAAED4AAyAAEC1QeZAAEAAAAAAAEFXgWSAAECWwAAAAEEDwAAAAECYgXVAAEAAAAAAAEEiwPuAAECyQAAAAED4AAyAAEC0gc4AAEAAAAAAAEFXgWSAAECWwAAAAEEDwAAAAECZQWEAAEAAAAAAAEEiwPuAAECyf4AAAED4AAyAAECyQWSAAEAAAAAAAEFXgWSAAECW/4AAAEEDwAAAAECWwPuAAEAAAAAAAEEiwPuAAECbwAAAAEAAAAAAAEB/gd6AAEAAAAAAAEAAAAAAAEDdAAAAAEAAAAAAAECEgPuAAEAAAAAAAEAAAAAAAECb/4AAAEAAAAAAAECbgWSAAEAAAAAAAEAAAAAAAEDdP4AAAEAAAAAAAECEgPuAAEAAAAAAAEAAAAAAAECbwAAAAEAAAAAAAECegeZAAEAAAAAAAEAAAAAAAEDdAAAAAEAAAAAAAECGQXVAAEAAAAAAAEAAAAAAAECbwAAAAEAAAAAAAECdwc4AAEAAAAAAAEAAAAAAAEDdAAAAAEAAAAAAAECHAWEAAEAAAAAAAEAAAAAAAEDMQAAAAEAAAAAAAEDMgWSAAEAAAAAAAEAAAAAAAEDMQAAAAEAAAAAAAEDMwb1AAEAAAAAAAEAAAAAAAEC3v3KAAEAAAAAAAEDMgWSAAEAAAAAAAEAAAAAAAEDMQAAAAEAAAAAAAEDMgcaAAEAAAAAAAEAAAAAAAEDMQAAAAEAAAAAAAEDMgWSAAEAAAAAAAEAAAAAAAEDMQAAAAEAAAAAAAEDMwb1AAEAAAAAAAEAAAAAAAEC3v3KAAEAAAAAAAEDMgWSAAEAAAAAAAEAAAAAAAEDMQAAAAEAAAAAAAEDMgcaAAEAAAAA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\");\n\n//# sourceURL=webpack://unified-sso/./src/public/fonts/cerebrisans/cerebrisans-medium.ttf?");

/***/ }),

/***/ "./src/public/fonts/cerebrisans/cerebrisans-medium.woff":
/*!**************************************************************!*\
  !*** ./src/public/fonts/cerebrisans/cerebrisans-medium.woff ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:font/woff;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/public/fonts/cerebrisans/cerebrisans-medium.woff?");

/***/ }),

/***/ "./src/public/fonts/cerebrisans/cerebrisans-regular.eot":
/*!**************************************************************!*\
  !*** ./src/public/fonts/cerebrisans/cerebrisans-regular.eot ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:application/vnd.ms-fontobject;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/public/fonts/cerebrisans/cerebrisans-regular.eot?");

/***/ }),

/***/ "./src/public/fonts/cerebrisans/cerebrisans-regular.ttf":
/*!**************************************************************!*\
  !*** ./src/public/fonts/cerebrisans/cerebrisans-regular.ttf ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:font/ttf;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/public/fonts/cerebrisans/cerebrisans-regular.ttf?");

/***/ }),

/***/ "./src/public/fonts/cerebrisans/cerebrisans-regular.woff":
/*!***************************************************************!*\
  !*** ./src/public/fonts/cerebrisans/cerebrisans-regular.woff ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:font/woff;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/public/fonts/cerebrisans/cerebrisans-regular.woff?");

/***/ }),

/***/ "./src/public/fonts/cerebrisans/cerebrisans-semibold.eot":
/*!***************************************************************!*\
  !*** ./src/public/fonts/cerebrisans/cerebrisans-semibold.eot ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:application/vnd.ms-fontobject;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/public/fonts/cerebrisans/cerebrisans-semibold.eot?");

/***/ }),

/***/ "./src/public/fonts/cerebrisans/cerebrisans-semibold.ttf":
/*!***************************************************************!*\
  !*** ./src/public/fonts/cerebrisans/cerebrisans-semibold.ttf ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:font/ttf;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/public/fonts/cerebrisans/cerebrisans-semibold.ttf?");

/***/ }),

/***/ "./src/public/fonts/cerebrisans/cerebrisans-semibold.woff":
/*!****************************************************************!*\
  !*** ./src/public/fonts/cerebrisans/cerebrisans-semibold.woff ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:font/woff;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/public/fonts/cerebrisans/cerebrisans-semibold.woff?");

/***/ }),

/***/ "./src/widget/feather/fonts/Feather.ttf":
/*!**********************************************!*\
  !*** ./src/widget/feather/fonts/Feather.ttf ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:font/ttf;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/widget/feather/fonts/Feather.ttf?");

/***/ }),

/***/ "./src/widget/feather/fonts/Feather.ttf?sdxovp":
/*!*****************************************************!*\
  !*** ./src/widget/feather/fonts/Feather.ttf?sdxovp ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:font/ttf;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/widget/feather/fonts/Feather.ttf?");

/***/ }),

/***/ "./src/widget/feather/fonts/Feather.woff?sdxovp":
/*!******************************************************!*\
  !*** ./src/widget/feather/fonts/Feather.woff?sdxovp ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (\"data:font/woff;base64,\");\n\n//# sourceURL=webpack://unified-sso/./src/widget/feather/fonts/Feather.woff?");

/***/ }),

/***/ "./node_modules/util/support/isBufferBrowser.js":
/*!******************************************************!*\
  !*** ./node_modules/util/support/isBufferBrowser.js ***!
  \******************************************************/
/***/ ((module) => {

eval("module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}\n\n//# sourceURL=webpack://unified-sso/./node_modules/util/support/isBufferBrowser.js?");

/***/ }),

/***/ "./node_modules/util/support/types.js":
/*!********************************************!*\
  !*** ./node_modules/util/support/types.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n\n\nvar isArgumentsObject = __webpack_require__(/*! is-arguments */ \"./node_modules/is-arguments/index.js\");\nvar isGeneratorFunction = __webpack_require__(/*! is-generator-function */ \"./node_modules/is-generator-function/index.js\");\nvar whichTypedArray = __webpack_require__(/*! which-typed-array */ \"./node_modules/which-typed-array/index.js\");\nvar isTypedArray = __webpack_require__(/*! is-typed-array */ \"./node_modules/is-typed-array/index.js\");\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/util/support/types.js?");

/***/ }),

/***/ "./node_modules/util/util.js":
/*!***********************************!*\
  !*** ./node_modules/util/util.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("/* provided dependency */ var process = __webpack_require__(/*! process/browser */ \"./node_modules/process/browser.js\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = __webpack_require__(/*! ./support/types */ \"./node_modules/util/support/types.js\");\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = __webpack_require__(/*! ./support/isBuffer */ \"./node_modules/util/support/isBufferBrowser.js\");\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = __webpack_require__(/*! inherits */ \"./node_modules/inherits/inherits_browser.js\");\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/util/util.js?");

/***/ }),

/***/ "./node_modules/which-typed-array/index.js":
/*!*************************************************!*\
  !*** ./node_modules/which-typed-array/index.js ***!
  \*************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("\n\nvar forEach = __webpack_require__(/*! foreach */ \"./node_modules/foreach/index.js\");\nvar availableTypedArrays = __webpack_require__(/*! available-typed-arrays */ \"./node_modules/available-typed-arrays/index.js\");\nvar callBound = __webpack_require__(/*! call-bind/callBound */ \"./node_modules/call-bind/callBound.js\");\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = __webpack_require__(/*! has-tostringtag/shams */ \"./node_modules/has-tostringtag/shams.js\")();\n\nvar g = typeof globalThis === 'undefined' ? __webpack_require__.g : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = __webpack_require__(/*! es-abstract/helpers/getOwnPropertyDescriptor */ \"./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js\");\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = __webpack_require__(/*! is-typed-array */ \"./node_modules/is-typed-array/index.js\");\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n\n\n//# sourceURL=webpack://unified-sso/./node_modules/which-typed-array/index.js?");

/***/ }),

/***/ "./src/apps.json":
/*!***********************!*\
  !*** ./src/apps.json ***!
  \***********************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse(\"[{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Transactional Email\\\",\\\"description\\\":\\\"SendGrid's cloud-based email infrastructure relieves businesses of the cost and complexity of maintaining custom email systems\\\",\\\"name\\\":\\\"SendGrid\\\",\\\"id\\\":\\\"sendgrid\\\"},{\\\"api\\\":\\\"username,password,domain\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"description\\\":\\\"Zendesk makes better experiences for agents, admins, and customers. As employees, we encourage each other to grow and innovate. As a company, we roll up our sleeves to plant roots in the communities we call home. Our customer service and engagement platform is powerful and flexible, and scales to meet the needs of any business. Even yours.\\\",\\\"name\\\":\\\"Zendesk\\\",\\\"id\\\":\\\"zendesk\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,refreshtoken_url\\\",\\\"category\\\":\\\"File Management & Storage\\\",\\\"description\\\":\\\"Google Drive is a personal cloud storage service from Google that lets users store and synchronize digital content across computers, laptops and mobile devices, including Android-powered tablet and smartphone devices.\\\",\\\"name\\\":\\\"Google Drive\\\",\\\"id\\\":\\\"google-drive\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url,calendar_id,event_id\\\",\\\"category\\\":\\\"Scheduling & Bookings\\\",\\\"description\\\":\\\"Google Calendar is a free web and mobile calendar that lets you keep track of your own events and share your calendars with others. Its the ideal tool for managing personal and professional schedules. It is both simple to use and very powerful. If you have a Google account, you have access to Google Calendar.\\\",\\\"name\\\":\\\"Google Calendar\\\",\\\"id\\\":\\\"google-calendar\\\"},{\\\"api\\\":\\\"api_key,app_id\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"An all-in-one business and marketing platform designed for information marketers, experts, and coaches.\\\",\\\"name\\\":\\\"Ontraport\\\",\\\"id\\\":\\\"ontraport\\\"},{\\\"api\\\":\\\"subdomain,api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"CompanyHub is a highly customizable CRM that you can customize, write custom logic, and create automated alerts for and more without a single line of code\\\",\\\"name\\\":\\\"CompanyHub\\\",\\\"id\\\":\\\"companyhub\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url,party_id\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Capsule CRM is customer relationship management software that lets you manage all your contacts and documents, as well as your sales pipeline. You can attach notes, tasks, and emails and customize fields according to your needs.\\\",\\\"name\\\":\\\"Capsule CRM\\\",\\\"id\\\":\\\"capsule-crm\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Upselling is a sales technique where a seller induces the customer to purchase more expensive items, upgrades or other add-ons in an attempt to make a more profitable sale. While it usually involves marketing more profitable services or products,[1] it can be simply exposing the customer to other options that were perhaps not considered\\\",\\\"name\\\":\\\"Upsales\\\",\\\"id\\\":\\\"upsales\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Float is an online cash management and forecasting application designed too aid businesses stay on top of their cash flow. This tool helps companies, particularly owners, business advisors, and finance department heads, project their cash in the bank\\\",\\\"name\\\":\\\"Float\\\",\\\"id\\\":\\\"float\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"KanbanFlow is a Lean project management tool for you and your team. Its intuitive user interface will get you up and running in a few minutes. It has a built-in task timer with support for the Pomodoro technique.\\\",\\\"name\\\":\\\"KanbanFlow\\\",\\\"id\\\":\\\"kanbanflow\\\"},{\\\"api\\\":\\\"api_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"ClickUp is project management software with natural language processing. You can set recurring tasks, manage comments, and stay updated with the activity stream.\\\",\\\"name\\\":\\\"ClickUp\\\",\\\"id\\\":\\\"clickup\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Google Tasks is a task list manager that helps keep track of your daily to-do list and deadlines. You can create tasks, organize them into lists, and add notes and due dates.\\\",\\\"name\\\":\\\"Google Tasks\\\",\\\"id\\\":\\\"google-tasks\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Teamdeck is resource management software that lets you track timesheets, assign bookings to teammates based on availability, and handle time off requests.\\\",\\\"name\\\":\\\"Teamdeck\\\",\\\"id\\\":\\\"teamdeck\\\"},{\\\"api\\\":\\\"email,password\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Paymo is task and project management software. You can monitor activities, track invoices, and manage resources with charts and calendars.\\\",\\\"name\\\":\\\"Paymo\\\",\\\"id\\\":\\\"paymo\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Pivotal Tracker is a project management tool for developers. You can customize notifications; follow up on every event in a project's history; organize with tasks, labels, and workspaces; and even share files.\\\",\\\"name\\\":\\\"Pivotal Tracker\\\",\\\"id\\\":\\\"pivotal-tracker\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Time Tracking\\\",\\\"description\\\":\\\"Toggl tracks time based on tasks and projects, either through an interactive task timer or through manual entry.\\\",\\\"name\\\":\\\"Toggl\\\",\\\"id\\\":\\\"toggl\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Phone & SMS\\\",\\\"description\\\":\\\"VoxDesk provides a resilient core call center software that allows agents to manage the flow of calls seamlessly.\\\",\\\"name\\\":\\\"VoxDesk\\\",\\\"id\\\":\\\"voxdesk\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"description\\\":\\\"Intercom is a customer communication platform that enables targeted communication with customers on your website, inside your web and mobile apps, and by email.\\\",\\\"name\\\":\\\"Intercom\\\",\\\"id\\\":\\\"intercom\\\"},{\\\"api\\\":\\\"account_key,user_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Trigger is cloud software for project management collaboration and time tracking. Closely integrated with Xero you can import your customers accounts and tracking categories then send invoices Task titles become lineitems timesheets become invoices our workflow is coherent and saves you time.\\\",\\\"name\\\":\\\"TriggerApp\\\",\\\"id\\\":\\\"triggerapp\\\"},{\\\"api\\\":\\\"email,api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Sprintly makes project management easy.\\\",\\\"name\\\":\\\"Sprintly\\\",\\\"id\\\":\\\"sprintly\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"LiquidPlanner is project management software for teams. Manage time and resources flexibly, set dependencies, and ensure punctual delivery with deadline alerts.\\\",\\\"name\\\":\\\"LiquidPlanner\\\",\\\"id\\\":\\\"liquidplanner\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Emails\\\",\\\"description\\\":\\\"Microsoft Outlook is a web-based suite of webmail, contacts,  and calendaring services.\\\",\\\"name\\\":\\\"Microsoft Outlook\\\",\\\"id\\\":\\\"microsoft-outlook\\\"},{\\\"api\\\":\\\"api_key,domain\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Hiveage is online invoicing software for small businesses. You can send branded invoices, track expenses, and enable recurring invoices to manage subscriptions.\\\",\\\"name\\\":\\\"Hiveage\\\",\\\"id\\\":\\\"hiveage\\\"},{\\\"api\\\":\\\"api_key,domain\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Quaderno is accounting software that you can use to calculate taxes in real time, send automatic receipts, and file tax returns.\\\",\\\"name\\\":\\\"Quaderno\\\",\\\"id\\\":\\\"quaderno\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Email Newsletters\\\",\\\"description\\\":\\\"MailerLite is an email marketing service provider with focus on simplicity and beautiful email design.\\\",\\\"name\\\":\\\"MailerLite\\\",\\\"id\\\":\\\"mailerlite\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Email Newsletters\\\",\\\"description\\\":\\\"GetResponse is an email marketing tool that lets you create landing pages, maintain updated contact lists, and analyze the activity patterns of your audience.\\\",\\\"name\\\":\\\"GetResponse\\\",\\\"id\\\":\\\"getresponse\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Breeze is a simple project management tool that enables teams to plan, track and organize their work.\\\",\\\"name\\\":\\\"Breeze\\\",\\\"id\\\":\\\"breeze\\\"},{\\\"api\\\":\\\"email,password,domain\\\",\\\"category\\\":\\\"Product Management\\\",\\\"description\\\":\\\"Aha is a project management tool that helps you track releases and ideas. You can set goals, build roadmaps, and consolidate information into a knowledge base.\\\",\\\"name\\\":\\\"Aha\\\",\\\"id\\\":\\\"aha\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Emails\\\",\\\"description\\\":\\\"Office 365 is a line of subscription services offered by Microsoft as part of the Microsoft Office product line. The brand encompasses plans that allow use of the Microsoft Office software suite over the life of the subscription, as well as cloud-based software as a service products for business environments, such as hosted Exchange Server, Skype for Business Server, and SharePoint, among others. All Office 365 plans include automatic updates to their respective software at no additional charge\\\",\\\"name\\\":\\\"Microsoft Office 365\\\",\\\"id\\\":\\\"microsoft-office 365\\\"},{\\\"api\\\":\\\"api_key,email\\\",\\\"category\\\":\\\"Email Newsletters\\\",\\\"description\\\":\\\"Sendinblue is a SaaS solution for relationship marketing.The company was founded in 2012 by Armand Thiberge and Kapil Sharma,and offers a cloud-based marketing communication software suite with email marketing,transactional email,marketing automation,customer-relationship management,landing pages,Facebook ads,retargeting ads,SMS marketing,and more.\\\",\\\"name\\\":\\\"Sendinblue\\\",\\\"id\\\":\\\"sendinblue\\\"},{\\\"api\\\":\\\"domain,apiKey\\\",\\\"category\\\":\\\"Marketing Automation\\\",\\\"description\\\":\\\"ActiveCampaign is a marketing platform that helps you send campaigns, design newsletters, automate channels, and close deals faster. You can segment emails, add dynamic data, perform split testing, and manage your text-messaging marketing.\\\",\\\"name\\\":\\\"ActiveCampaign\\\",\\\"id\\\":\\\"activecampaign\\\"},{\\\"api\\\":\\\"apiKey\\\",\\\"category\\\":\\\"Forms & Surveys\\\",\\\"description\\\":\\\"The newly redesigned JotForm lets you build forms faster than ever, with powerful widgets and a responsive editor that works offlineâ€”without even needing to sign up for an account.\\\",\\\"name\\\":\\\"JotForm\\\",\\\"id\\\":\\\"jotform\\\"},{\\\"api\\\":\\\"domain,apiKey\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Freshsales is CRM with built-in phone and email. You can manage leads and deals, track customer activities on website, and customize reports for better insights.\\\",\\\"name\\\":\\\"Freshsales\\\",\\\"id\\\":\\\"freshsales\\\"},{\\\"api\\\":\\\"domain,apiKey\\\",\\\"category\\\":\\\"Forms & Surveys\\\",\\\"description\\\":\\\"Wufoo is an online form builder with cloud storage database build custom online forms that you can use to collect data, payments and to automate your workflows.\\\",\\\"name\\\":\\\"Wufoo\\\",\\\"id\\\":\\\"wufoo\\\"},{\\\"api\\\":\\\"clientId,clientSecret,refreshToken,tokenUrl\\\",\\\"category\\\":\\\"Ads and Conversion\\\",\\\"description\\\":\\\"Google Analytics lets you measure your advertising ROI as well as track your Flash, video, and social networking sites and applications.\\\",\\\"name\\\":\\\"Google Analytics\\\",\\\"id\\\":\\\"google-analytics\\\"},{\\\"api\\\":\\\"apiKey\\\",\\\"category\\\":\\\"Contact Management\\\",\\\"description\\\":\\\"Hunter is a contacts tool that you can use to search domains, find, and verify email addresses.\\\",\\\"name\\\":\\\"Hunter\\\",\\\"id\\\":\\\"hunter\\\"},{\\\"api\\\":\\\"client_id,client_screte,token,token_url\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Zoho Crm is a customer relationship management platform (CRM) at its core and comes packaged with marketing automation, web analytics and a complete social suite â€“ making it an all-in-one sales and marketing software for small and growing businesses\\\",\\\"name\\\":\\\"Zoho CRM\\\",\\\"id\\\":\\\"zoho-crm\\\"},{\\\"api\\\":\\\"account_id,access_token\\\",\\\"category\\\":\\\"Time Tracking\\\",\\\"description\\\":\\\"Harvest is online time tracking software that lets you track expenses, manage projects, and automatically create invoices from expenses and billable time.\\\",\\\"name\\\":\\\"Harvest\\\",\\\"id\\\":\\\"harvest\\\"},{\\\"api\\\":\\\"client_id,client_secret,token,token_url\\\",\\\"category\\\":\\\"Email Newsletters\\\",\\\"description\\\":\\\"Zoho Campaigns lets you send email and social media campaigns to your subscribers.\\\",\\\"name\\\":\\\"Zoho Campaigns\\\",\\\"id\\\":\\\"zoho-campaigns\\\"},{\\\"api\\\":\\\"auth_id,auth_token\\\",\\\"category\\\":\\\"Phone & SMS\\\",\\\"description\\\":\\\"Plivo's voice and messaging platform enables businesses to create and deliver better customer experiences.\\\",\\\"name\\\":\\\"Plivo\\\",\\\"id\\\":\\\"plivo\\\"},{\\\"api\\\":\\\"domain,apiKey\\\",\\\"category\\\":\\\"Payment Processing\\\",\\\"description\\\":\\\"Chargebee is a simple and easy to use subscription management software that takes care of all your billing requirements.\\\",\\\"name\\\":\\\"Chargebee\\\",\\\"id\\\":\\\"chargebee\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Contactually is a Customer relationship management software and service company based in downtown Washington. Founded in 2011 Contactually is a large provider of streamlined customer relationship software for various industries including Real Estate. Since 2011 it has expanded the niche of customer relationship tools and has positioned itself as a streamlined cost-effective alternative to larger CRM tool providers\\\",\\\"name\\\":\\\"Contactually\\\",\\\"id\\\":\\\"contactually\\\"},{\\\"api\\\":\\\"client_id,client_secret,token,token_url\\\",\\\"category\\\":\\\"Spreadsheets\\\",\\\"description\\\":\\\"Microsoft's Excel is a spreadsheet application used by millions of users across the world. It is part of the Office ecosystem and is considered the industry standard for spreadsheets. Only files on OneDrive for Business (available with Office 365 and Sharepoint server) \\\",\\\"name\\\":\\\"Microsoft Excel\\\",\\\"id\\\":\\\"microsoft-excel\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Payment Processing\\\",\\\"description\\\":\\\"Stripe is a technology company based in San Francisco, California. Its software allows individuals and businesses to make and receive payments over the Internet.\\\",\\\"name\\\":\\\"Stripe\\\",\\\"id\\\":\\\"stripe\\\"},{\\\"api\\\":\\\"consumerKey,consumerSecret,domain\\\",\\\"category\\\":\\\"Forms & Surveys\\\",\\\"description\\\":\\\"Gravity forms is the easiest, most trusted tool to create advanced forms for your website.\\\",\\\"name\\\":\\\"Gravity Forms\\\",\\\"id\\\":\\\"gravity-forms\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Zoho Expense is a platform which transforms expense reporting and monitoring, and turns it into an enjoyable experience.\\\",\\\"name\\\":\\\"Zoho Expense\\\",\\\"id\\\":\\\"zoho-expense\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Spreadsheets\\\",\\\"description\\\":\\\"Smartsheet is a leading cloud-based platform for work execution, enabling teams and organizations to plan, capture, manage, automate, and report on work at scale, resulting in more efficient processes and better business outcomes.\\\",\\\"name\\\":\\\"Smartsheet\\\",\\\"id\\\":\\\"smartsheet\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Social\\\",\\\"description\\\":\\\"Dribbble is a place to show and tell, promote, discover, and explore design\\\",\\\"name\\\":\\\"Dribbble\\\",\\\"id\\\":\\\"dribbble\\\"},{\\\"api\\\":\\\"clientId,clientSecret,refreshToken,tokenUrl\\\",\\\"category\\\":\\\"Forms & Surveys\\\",\\\"description\\\":\\\"Zoho Forms is a free online form builder that lets you create custom forms, receive responses by email, and collaborate with your team.\\\",\\\"name\\\":\\\"Zoho Forms\\\",\\\"id\\\":\\\"zoho-forms\\\"},{\\\"api\\\":\\\"user_id,api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"OnePageCRM converts the complexity of CRM into a simple to-do list. Built using GTD (Getting Things Done) productivity principles, its streamlined approach to sales helps you convert leads to customers, reach targets and grow your business fast. By focusing on that one Next Action, your sales team are organized and empowered to move a deal forward. OnePageCRM strives to offer a product that is as easy to use as email and helps your company achieve zero admin.\\\",\\\"name\\\":\\\"OnepageCRM\\\",\\\"id\\\":\\\"onepagecrm\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Simple and useful CRM software in the cloud. Sell more today with sales tracking software. Our CRM software will help organize, track, and manage your deals, leads, and contacts.\\\",\\\"name\\\":\\\"PipelineDeals\\\",\\\"id\\\":\\\"pipelinedeals\\\"},{\\\"api\\\":\\\"clientId,clientSecret,refreshToken,tokenUrl\\\",\\\"category\\\":\\\"Emails\\\",\\\"description\\\":\\\"Zoho Mail is a collaborative business communication platform for the modern workforce. It is a blend of classic email and the modern collaboration tools using comments, likes and sharing.\\\",\\\"name\\\":\\\"Zoho Mail\\\",\\\"id\\\":\\\"zoho-mail\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Email Newsletters\\\",\\\"description\\\":\\\"Campaign Monitor is an email marketing tool built for designers. Campaign Monitor makes it easy to send beautiful emails, manage lists and subscribers, and track the results of your campaigns.\\\",\\\"name\\\":\\\"Campaign Monitor\\\",\\\"id\\\":\\\"campaign-monitor\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Invoiced is accounting software with flexible billing formats. Let your customers manage personal data, break balances into customized installment plans, and track balances.\\\",\\\"name\\\":\\\"Invoiced\\\",\\\"id\\\":\\\"invoiced\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Scheduling & Bookings\\\",\\\"description\\\":\\\"ScheduleOnce is an end-to-end solution for scheduling with prospects and customers through all phases of the customer lifecycle.\\\",\\\"name\\\":\\\"ScheduleOnce\\\",\\\"id\\\":\\\"scheduleonce\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Documents\\\",\\\"description\\\":\\\"Google Docs is an online word processor that lets you create and format text documents. Collaboratively edit documents with other people in real time.\\\",\\\"name\\\":\\\"Google Docs\\\",\\\"id\\\":\\\"google-docs\\\"},{\\\"api\\\":\\\"domain,api_key\\\",\\\"category\\\":\\\"Email Newsletters\\\",\\\"description\\\":\\\"Mailchimp is the ultimate software that will change the way you market your product on the internet. Mailchimp is a simple email marketing software (EMS) which gives you a number of easy options for designing, sending and saving templates of your email.\\\",\\\"name\\\":\\\"Mailchimp\\\",\\\"id\\\":\\\"mailchimp\\\"},{\\\"api\\\":\\\"username,password\\\",\\\"category\\\":\\\"Team Chat\\\",\\\"description\\\":\\\"Flowdock is your team's inbox, but with chat. Get updates from all the apps you use, but then easily have discussions around those items.\\\",\\\"name\\\":\\\"Flowdock\\\",\\\"id\\\":\\\"flowdock\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Product Management\\\",\\\"description\\\":\\\"Canny is a user feedback tool that lets you keep track of all of your user feedback in one organized place.\\\",\\\"name\\\":\\\"Canny\\\",\\\"id\\\":\\\"canny\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"URL Shortener\\\",\\\"description\\\":\\\"Bitly is a link management and shortener platform.\\\",\\\"name\\\":\\\"Bitly\\\",\\\"id\\\":\\\"bitly\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Product Management\\\",\\\"description\\\":\\\"ProdPad is a tool that helps you achieve better products through better product management.\\\",\\\"name\\\":\\\"ProdPad\\\",\\\"id\\\":\\\"prodpad\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Managing millions of tasks, Todoist is an online task management app and todo list. It has Web, iPhone, Android, Chrome, Firefox, Outlook flavors (and more!).\\\",\\\"name\\\":\\\"Todoist\\\",\\\"id\\\":\\\"todoist\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Forms & Surveys\\\",\\\"description\\\":\\\"Delighted is the easiest and most beautiful way to measure customer happiness.\\\",\\\"name\\\":\\\"Delighted\\\",\\\"id\\\":\\\"delighted\\\"},{\\\"api\\\":\\\"domain,email,api_key\\\",\\\"auth\\\":\\\"basic\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Agile CRM offers contact management, marketing automation, telephony, analytics, web engagement, real-time alerts and social suite. Track, nurture, and sell like a pro.\\\",\\\"name\\\":\\\"Agile CRM\\\",\\\"id\\\":\\\"agile-crm\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Developer Tools\\\",\\\"description\\\":\\\"GitHub is the perfect place to share code and work collaboratively on private and open source software.\\\",\\\"name\\\":\\\"GitHub\\\",\\\"id\\\":\\\"github\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Forms & Surveys\\\",\\\"description\\\":\\\"SurveyMonkey is the easiest way to create surveys and get answers. SurveyMonkey lets you whip up a survey quickly and get targeted answers from the audience you want to ask.\\\",\\\"name\\\":\\\"Survey Monkey\\\",\\\"id\\\":\\\"survey-monkey\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Scheduling & Bookings\\\",\\\"description\\\":\\\"Easy online appointment scheduling software. Save time by having clients book appointments, complete custom intake forms, and pay in advance 24/7 anywhere in the world.\\\",\\\"name\\\":\\\"Acuity Scheduling\\\",\\\"id\\\":\\\"acuity-scheduling\\\"},{\\\"api\\\":\\\"domain,api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Teamwork is an easy-to-use online teamwork & project management software application that helps managers, staff and clients work together more productively online.\\\",\\\"name\\\":\\\"Teamwork\\\",\\\"id\\\":\\\"teamwork\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Emails\\\",\\\"description\\\":\\\"One of the most popular email services, Gmail keeps track of all your emails with threaded conversations, tags, and Google-powered search to find any message you need.\\\",\\\"name\\\":\\\"Gmail\\\",\\\"id\\\":\\\"gmail\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Mavenlink’s project collaboration suite allows you to manage your business relationships, share files, and track project activity online from anywhere in the world. Within a project workspace in Mavenlink, you can agree on budget & schedule, track time, send invoices, get paid via PayPal, and complete work.\\\",\\\"name\\\":\\\"Mavenlink\\\",\\\"id\\\":\\\"mavenlink\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Social\\\",\\\"description\\\":\\\"LinkedIn is the world's largest social network for professionals. Manage your professional identity. Build and engage with your professional network. Access knowledge, insights and opportunities.\\\",\\\"name\\\":\\\"LinkedIn\\\",\\\"id\\\":\\\"linkedin\\\"},{\\\"api\\\":\\\"consumer_key,consumer_secret,token_secret,access_token\\\",\\\"category\\\":\\\"Social\\\",\\\"description\\\":\\\"Twitter is the social network that shows what's happening around the world in real time. Share your ideas in Tweets, follow hashtags to keep up with trends, and join in the global conversation.\\\",\\\"name\\\":\\\"Twitter\\\",\\\"id\\\":\\\"twitter\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Microsoft To-Do is an intelligent task management app that makes it easy to plan and manage your day. With its intelligent Suggestions, To-Do removes all the clutter and empowers you to focus on what's important, when it's important.\\\",\\\"name\\\":\\\"Microsoft To-Do\\\",\\\"id\\\":\\\"microsoft-to-do\\\"},{\\\"api\\\":\\\"domain,api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Pipedrive is sales pipeline and CRM software for deal makers. Get super-organized. Close deals in less time. iOS and Android apps let you take your pipeline with you anywhere.\\\",\\\"name\\\":\\\"Pipedrive\\\",\\\"id\\\":\\\"pipedrive\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Forms & Survey\\\",\\\"description\\\":\\\"Unbounce is a landing page platform that helps you convert more visitors into leads, sales, and customers. Unbounce Conversion Intelligence™ is AI powered-functionality that works with your marketing intuition to ensure the best campaign performance every time.\\\",\\\"name\\\":\\\"Unbounce\\\",\\\"id\\\":\\\"unbounce\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Spreadsheets\\\",\\\"description\\\":\\\"Create, edit, and share spreadsheets wherever you are with Google Sheets, and get automated insights from your data.\\\",\\\"name\\\":\\\"Google Sheets\\\",\\\"id\\\":\\\"google-sheets\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Transactional Email\\\",\\\"description\\\":\\\"Mailgun is a tool with powerful APIs that allow you to send, receive, track and store email effortlessly. Except, with Zapier you don't have to write any code!\\\",\\\"name\\\":\\\"Mailgun\\\",\\\"id\\\":\\\"mailgun\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Drip Emails\\\",\\\"description\\\":\\\"Automate your ecommerce marketing at scale. Drip is your ecommerce marketing engine. Build personalized customer experiences, drive more revenue, and take your marketing strategy to the next level with Drip.\\\",\\\"name\\\":\\\"Drip\\\",\\\"id\\\":\\\"drip\\\"},{\\\"api\\\":\\\"username,api_key\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Create invoices, quotations and delivery notes with Easybill's cloud-based accounting software.\\\",\\\"name\\\":\\\"EasyBill\\\",\\\"id\\\":\\\"easybill\\\"},{\\\"api\\\":\\\"email,api_key\\\",\\\"category\\\":\\\"Developer Tools\\\",\\\"description\\\":\\\"Bitbucket is a popular hosted source control system that uses both mercurial and git behind the scenes.\\\",\\\"name\\\":\\\"Bitbucket\\\",\\\"id\\\":\\\"bitbucket\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Zoho Books is cloud-based accounting software in which you can record, audit and analyze all financial transactions easily. With secure data storage, easy navigation and customizable features, Zoho Books provide a head start in accounting for small businesses.\\\",\\\"name\\\":\\\"Zoho Books\\\",\\\"id\\\":\\\"zoho-books\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Social\\\",\\\"description\\\":\\\"Facebook Pages lets you connect with your customers, fans and followers on the world's largest social network. Share relevant content to engage people who Like your page, create events to build and grow your community, and run a Facebook ad campaign by targeting location, age and more.\\\",\\\"name\\\":\\\"Facebook Pages\\\",\\\"id\\\":\\\"facebook-pages\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Contact Management\\\",\\\"description\\\":\\\"Cliengo is a Chatbot that converts your visitors into leads, automatically 24/7\\\",\\\"name\\\":\\\"Cliengo\\\",\\\"id\\\":\\\"cliengo\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Aero Workflow is a workflow application for accountants by accountants.\\\",\\\"name\\\":\\\"Aero Workflow\\\",\\\"id\\\":\\\"aero-workflow\\\"},{\\\"api\\\":\\\"username,password,domain\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Painless recurring billing for your subscription-based business.\\\",\\\"name\\\":\\\"ChargeOver\\\",\\\"id\\\":\\\"chargeover\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Contact Management\\\",\\\"description\\\":\\\"Google Contacts, the address book built into Gmail, lets you keep track of all your contacts, see when you last interacted with them, and more.\\\",\\\"name\\\":\\\"Google Contacts\\\",\\\"id\\\":\\\"google-contacts\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Flow is project and task management software. You can track resources, collaborate with your team, and organize tasks with custom views.\\\",\\\"name\\\":\\\"Flow\\\",\\\"id\\\":\\\"flow\\\"},{\\\"api\\\":\\\"api_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Workstack is a project planning platform that lets you organize your tasks and schedule them across your team.\\\",\\\"name\\\":\\\"Workstack\\\",\\\"id\\\":\\\"workstack\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Zoho Invoice is an easy invoice software meant for small businesses and freelancers. Accept payments online, automate payment reminders and recurring billing.\\\",\\\"name\\\":\\\"Zoho Invoice\\\",\\\"id\\\":\\\"zoho-invoice\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Upwave is a visual project management and collaboration platform.\\\",\\\"name\\\":\\\"Upwave\\\",\\\"id\\\":\\\"upwave\\\"},{\\\"api\\\":\\\"email,api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Clockodo is online time tracking software. You can track working hours, approve absences, and manage resources.\\\",\\\"name\\\":\\\"Clockodo\\\",\\\"id\\\":\\\"clockodo\\\"},{\\\"api\\\":\\\"domain,api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"noCRM.io helps you to track and close deals without wasting time filling out forms. Boost productivity and manage your sales cycle from end-to-end\\\",\\\"name\\\":\\\"NoCRM.io\\\",\\\"id\\\":\\\"nocrm.io\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Time Tracking\\\",\\\"description\\\":\\\"Clockly is a time tracker and timesheet app that lets you track work hours across projects.\\\",\\\"name\\\":\\\"Clockly\\\",\\\"id\\\":\\\"clockly\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Basecamp’s unique blend of tools is everything any team needs to stay on the same page about whatever they’re working on.\\\",\\\"name\\\":\\\"Basecamp 3\\\",\\\"id\\\":\\\"basecamp-3\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Zoho Projects is an online project management app that helps you plan your work and keep track of your progress. It also lets the people in the project communicate easily, discuss ideas, and stay updated. This lets you deliver quality results on time\\\",\\\"name\\\":\\\"Zoho Projects\\\",\\\"id\\\":\\\"zoho-projects\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Forms & Surveys\\\",\\\"description\\\":\\\"It's a web based platform you can use to create anything from surveys to apps, without needing to write a single line of code.\\\",\\\"name\\\":\\\"Typeform\\\",\\\"id\\\":\\\"typeform\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Moskit is CRM software that lets you manage your sales and business from one place. You can keep track of all negotiations with powerful reports to plan for better results.\\\",\\\"name\\\":\\\"Moskit\\\",\\\"id\\\":\\\"moskit\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Forms & Surveys\\\",\\\"description\\\":\\\"Google Forms is an easy way to collect data from the web with a simple UI and powerful editor. Works hand-in-hand with Google Sheets!\\\",\\\"name\\\":\\\"Google Forms\\\",\\\"id\\\":\\\"google-forms\\\"},{\\\"api\\\":\\\"api_key,api_secret\\\",\\\"category\\\":\\\"Email Newsletters\\\",\\\"description\\\":\\\"Mailjet is an all-in-one solution to send, track and deliver transactional, notification and marketing emails. Engage, analyze and react with your client base through email. Get started by using the Mailjet zap to synchronise contacts from your favorite eCommerce, CRM or other SaaS tools to your Mailjet contact lists. For users on API version 3 or higher.\\\",\\\"name\\\":\\\"Mailjet\\\",\\\"id\\\":\\\"mailjet\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"eCommerce\\\",\\\"description\\\":\\\"Zoho Inventory is inventory management software for growing businesses to increase the sales and keep track of every unit with powerful stock management, order fulfillment, and inventory control.\\\",\\\"name\\\":\\\"Zoho Inventory\\\",\\\"id\\\":\\\"zoho-inventory\\\"},{\\\"api\\\":\\\"x_linkname,sessionToken,subdomain,session_token\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Sales CRM Software for small businesses with easy to use and intuitive interface Give Salesmate CRM Software a free trial without long-term commitments\\\",\\\"name\\\":\\\"Salesmate\\\",\\\"id\\\":\\\"salesmate\\\"},{\\\"api\\\":\\\"client_id,client_secret,token,refresh_url\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Asana is a collaborative information manager for workspace. It helps you organize people and tasks effectively.\\\",\\\"name\\\":\\\"Asana\\\",\\\"id\\\":\\\"asana\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Insightly\\\",\\\"name\\\":\\\"Insightly\\\",\\\"id\\\":\\\"insightly\\\"},{\\\"api\\\":\\\"domain,api_key\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"description\\\":\\\"Freshdesk is an online cloud-based customer service platform. You can keep track of your conversations, collaborate with colleagues, and improve team efficiency with accurate metrics.\\\",\\\"name\\\":\\\"Freshdesk\\\",\\\"id\\\":\\\"freshdesk\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Wrike is a project management tool where you can plan and organize your projects, tasks, and folders. You can customize your dashboard, synchronize tasks and milestones with calendar, and be up to date with the live activity stream.\\\",\\\"name\\\":\\\"Wrike\\\",\\\"id\\\":\\\"wrike\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"HubSpot is your all-in-one stop for all of your marketing software needs.\\\",\\\"name\\\":\\\"Hubspot\\\",\\\"id\\\":\\\"hubspot\\\"},{\\\"api\\\":\\\"api_key,api_secret\\\",\\\"category\\\":\\\"Drip Emails\\\",\\\"description\\\":\\\"Convertkit is an email marketing platform. You can organize subscribers, send broadcasts, and increase conversions with personalized emails.\\\",\\\"name\\\":\\\"Convertkit\\\",\\\"id\\\":\\\"convertkit\\\"},{\\\"api\\\":\\\"token\\\",\\\"category\\\":\\\"Website Builders\\\",\\\"description\\\":\\\"WordPress is software designed for everyone, emphasizing accessibility, performance, security, and ease of use. We believe great software should work with minimum set up, so you can focus on sharing your story, product, or services freely. The basic WordPress software is simple and predictable so you can easily get started. It also offers powerful features for growth and success.\\\",\\\"name\\\":\\\"WordPress\\\",\\\"id\\\":\\\"wordpress\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Avaza is software designed to run your client focused business. It includes modules for project & task management, timesheets, expense reporting, quotes & invoicing.\\\",\\\"name\\\":\\\"Avaza\\\",\\\"id\\\":\\\"avaza\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Zoho Sprints is a project management tool that helps agile teams plan and track their work with scrum, agile reports, and collaboration capabilites for software development teams.\\\",\\\"name\\\":\\\"Zoho Sprints\\\",\\\"id\\\":\\\"zoho-sprints\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Scheduling & Bookings\\\",\\\"description\\\":\\\"Calendly is an elegant and simple scheduling tool for businesses that eliminates email back and forth. It helps save time so that businesses can provide great service and increase sales.\\\",\\\"name\\\":\\\"Calendly\\\",\\\"id\\\":\\\"calendly\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Team Chat\\\",\\\"description\\\":\\\"Zoho Connect is Team Chat software that helps teams communicate faster and get work done easily. You can plan tasks with your colleagues, prioritize, and track the progress of work.\\\",\\\"name\\\":\\\"Zoho Connect\\\",\\\"id\\\":\\\"zoho-connect\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"File Management & Storage\\\",\\\"description\\\":\\\"OneDrive, Microsoft's file sync app formerly known as SkyDrive, lets you store your files online, edit Office documents in the free Office Web Apps, and easily access your online files from your PC.\\\",\\\"name\\\":\\\"OneDrive\\\",\\\"id\\\":\\\"onedrive\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Podio is a collaborative work platform that's perfect for managing projects, teams, and anything else in your business that needs flexible apps that work the way you do.\\\",\\\"name\\\":\\\"Podio\\\",\\\"id\\\":\\\"podio\\\"},{\\\"api\\\":\\\"email,api_key\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Alegra is an accounting and billing app designed for Latin American managers.\\\",\\\"name\\\":\\\"Alegra\\\",\\\"id\\\":\\\"alegra\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Signatures\\\",\\\"description\\\":\\\"Zoho Sign is a complete digital signature app that allows you to securely sign, send, and manage business documents online. Build automated electronic signature workflows to close deals quickly.\\\",\\\"name\\\":\\\"Zoho Sign\\\",\\\"id\\\":\\\"zoho-sign\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Documents\\\",\\\"description\\\":\\\"Writer is a powerful word processor made for collaborative work.\\\",\\\"name\\\":\\\"Zoho Writer\\\",\\\"id\\\":\\\"zoho-writer\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Recruitment\\\",\\\"description\\\":\\\"Zoho People is an online HR management software which helps you automate all your HR processes efficiently.\\\",\\\"name\\\":\\\"Zoho People\\\",\\\"id\\\":\\\"zoho-people\\\"},{\\\"api\\\":\\\"user_id,api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Hive is a project management tool with predictive alerts. You can plan tasks with action templates, use Hive forms to collect data for projects, and communicate with your team and external users.\\\",\\\"name\\\":\\\"Hive\\\",\\\"id\\\":\\\"hive\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_url,token,data_center\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"description\\\":\\\"Zoho Desk is web-based customer service software designed to help you focus more on creating customer happiness every day.\\\",\\\"name\\\":\\\"Zoho Desk\\\",\\\"id\\\":\\\"zoho-desk\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Analytics\\\",\\\"description\\\":\\\"Zoho Analytics is a self-service BI that lets you create visually appealing data visualizations and insightful dashboards.\\\",\\\"name\\\":\\\"Zoho Analytics\\\",\\\"id\\\":\\\"zoho-analytics\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Databases\\\",\\\"description\\\":\\\"Zoho Creator is an online database builder. Its easy drag-n-drop interface lets you create custom applications for every data collection need, define workflow and also configure business rules that are unique to your business\\\",\\\"name\\\":\\\"Zoho Creator\\\",\\\"id\\\":\\\"zoho-creator\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Payment Processing\\\",\\\"description\\\":\\\"Zoho Subscriptions is a recurring billing and subscription management app that helps manage the entire life cycle of your customers - from billing and charging to managing their subscriptions\\\",\\\"name\\\":\\\"Zoho Subscriptions\\\",\\\"id\\\":\\\"zoho-subscriptions\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"TeamWave is an unified platform for project management, CRM, and HR software for small businesses.\\\",\\\"name\\\":\\\"TeamWave\\\",\\\"id\\\":\\\"teamwave\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Social CRM Simplified. With Nimble’s social CRM, easily manage all your contacts, communications, activities and sales in one single place.\\\",\\\"name\\\":\\\"Nimble\\\",\\\"id\\\":\\\"nimble\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Emails\\\",\\\"description\\\":\\\"Mixmax’s mission is to do the impossible with email including scheduling meetings, completing surveys, making purchases, and more.\\\",\\\"name\\\":\\\"Mixmax\\\",\\\"id\\\":\\\"mixmax\\\"},{\\\"api\\\":\\\"accountsid,authtoken\\\",\\\"category\\\":\\\"Phone & SMS\\\",\\\"description\\\":\\\"Twilio is a cloud based service that enables powerful communication between mobile devices, applications, services, and systems throughout the business in order to bridge the gap between conventional communication.Twilio seeks to rid businesses of the messy telecom hardware by providing a telephony infrastructure web service via a globally available cloud API, allowing web developers to use standard web languages to integrate phone calls, text messages and IP voice communications into their web\\\",\\\"name\\\":\\\"Twilio\\\",\\\"id\\\":\\\"twilio\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Salesforce is a leading enterprise customer relationship manager (CRM) application.\\\",\\\"name\\\":\\\"Salesforce\\\",\\\"id\\\":\\\"salesforce\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Social\\\",\\\"description\\\":\\\"Instagram is a social network which is a fast, beautiful and fun way to share your photos with friends and family.\\\",\\\"name\\\":\\\"Instagram for Business\\\",\\\"id\\\":\\\"instagram-for-business\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"name\\\":\\\"custom\\\",\\\"id\\\":\\\"custom\\\",\\\"description\\\":\\\"Develop custom widget in javascript for your customers.\\\",\\\"category\\\":\\\"Custom\\\",\\\"custom\\\":true,\\\"logo_url\\\":\\\"\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"File Management & Storage\\\",\\\"description\\\":\\\"Box lets you keep all your businesses files in one place for simple online collaboration.\\\",\\\"name\\\":\\\"Box\\\",\\\"id\\\":\\\"Box\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"File Management & Storage\\\",\\\"description\\\":\\\"Bring your files and cloud content together with the tools your team wants to use.\\\",\\\"name\\\":\\\"Dropbox\\\",\\\"id\\\":\\\"Dropbox\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Emails\\\",\\\"description\\\":\\\"Office 365 is a line of subscription services offered by Microsoft as part of the Microsoft Office product line. The brand encompasses plans that allow use of the Microsoft Office software suite over the life of the subscription, as well as cloud-based software as a service products for business environments, such as hosted Exchange Server, Skype for Business Server, and SharePoint, among others. All Office 365 plans include automatic updates to their respective software at no additional charge\\\",\\\"name\\\":\\\"Microsoft Office 365 Email\\\",\\\"id\\\":\\\"microsoft-office 365 email\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Zoho CRM is a collaborative information manager for workspace. It helps you organize people and tasks effectively.\\\",\\\"name\\\":\\\"Zoho CRM\\\",\\\"id\\\":\\\"zoho-crm\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"description\\\":\\\"Xero offers contact management, marketing automation, telephony, analytics, web engagement, real-time alerts and social suite. Track, nurture, and sell like a pro.\\\",\\\"name\\\":\\\"Xero\\\",\\\"id\\\":\\\"xero\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"name\\\":\\\"Freshbooks\\\",\\\"description\\\":\\\"The best cloud based small business accounting software. Send invoices, track time, manage receipts, expenses, and accept credit cards.\\\",\\\"id\\\":\\\"freshbooks\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Email Newsletters\\\",\\\"description\\\":\\\"AWeber provides professional email marketing software and services. AWeber's easy signup forms and autoresponders make it easy for you to stay in touch with your customers.\\\",\\\"name\\\":\\\"Aweber\\\",\\\"id\\\":\\\"aweber\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,refresh_url,realm_id\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"name\\\":\\\"Quickbooks Online\\\",\\\"description\\\":\\\"QuickBooks Online is the web version of the popular accounting packages QuickBooks\\\",\\\"id\\\":\\\"quickbooks-online\\\"},{\\\"api\\\":\\\"consumer_key,consumer_secret,token_secret,access_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Trello is a task management app that gives you a visual overview of what is being worked on and who is working on it.\\\",\\\"name\\\":\\\"Trello\\\",\\\"id\\\":\\\"trello\\\"},{\\\"api\\\":\\\"api_key,domain\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Freshworks is CRM with built-in phone and email. You can manage leads and deals, track customer activities on website, and customize reports for better insights.\\\",\\\"name\\\":\\\"Freshworks\\\",\\\"id\\\":\\\"freshworks\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"CRM\\\",\\\"name\\\":\\\"Microsoft Dynamics 365 CRM\\\",\\\"description\\\":\\\"Microsoft Dynamics CRM is a customer relationship management software package developed by Microsoft.\\\",\\\"id\\\":\\\"microsoft-dynamics-365-crm\\\"},{\\\"api\\\":\\\"api_key,email\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Copper CRM is a collaborative information manager for workspace. It helps you organize people and tasks effectively.\\\",\\\"name\\\":\\\"Copper CRM\\\",\\\"id\\\":\\\"copper-crm\\\"},{\\\"api\\\":\\\"username,password,api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"name\\\":\\\"Redtailcrm\\\",\\\"description\\\":\\\"Redtailcrm cost-effective, feature-rich, customizable, and highly automated, redtail CRM assists you in every aspect of your client relationships.\\\",\\\"id\\\":\\\"redtailcrm\\\"},{\\\"api\\\":\\\"public_key,private_key\\\",\\\"category\\\":\\\"Marketing Automation\\\",\\\"description\\\":\\\"Max Classic offers businesses and teams a robust CRM solution that provides advanced marketing and sales automation, fully customizable campaigns.\\\",\\\"name\\\":\\\"Klaviyo\\\",\\\"id\\\":\\\"klaviyo\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Marketing Automation\\\",\\\"description\\\":\\\"Max Classic offers businesses and teams a robust CRM solution that provides advanced marketing and sales automation, fully customizable campaigns.\\\",\\\"name\\\":\\\"Keap Max Classic\\\",\\\"id\\\":\\\"keep-max-classic\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Notes\\\",\\\"description\\\":\\\"Microsoft OneNote is a note-taking program for free-form information gathering and multi-user collaboration. It gathers users' notes, drawings, screen clippings, and audio commentaries. Notes can be shared with other OneNote users over the Internet or a network.\\\",\\\"name\\\":\\\"OneNote\\\",\\\"id\\\":\\\"notes\\\"},{\\\"api\\\":\\\"client_id,client_secret,token,refresh_url\\\",\\\"category\\\":\\\"Project Management\\\",\\\"name\\\":\\\"Jira Software Cloud\\\",\\\"description\\\":\\\" JiraSoftwareCloud is a collaborative information manager for workspace. It helps you organize people and tasks effectively.\\\",\\\"id\\\":\\\"jira-software-cloud\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Redbooth is a web-based workplace collaboration tool and communication platform.\\\",\\\"name\\\":\\\"Redbooth\\\",\\\"id\\\":\\\"redbooth\\\"},{\\\"api\\\":\\\"app_key,user_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Increase your company's productivity using a task manager. Join Runrun.it, a simple and powerful management tool.\\\",\\\"name\\\":\\\"Runrun.it\\\",\\\"id\\\":\\\"runrun.it\\\"},{\\\"api\\\":\\\"domain,api_key\\\",\\\"category\\\":\\\"Recruitment\\\",\\\"description\\\":\\\"BambooHR is an American technology company that provides human resources software as a service. Founded in 2008 by Ben Peterson and Ryan Sanders, the company is based in Lindon, Utah. BambooHR's services include an applicant tracking system and an employee benefits tracker. \\\",\\\"name\\\":\\\"BambooHR\\\",\\\"id\\\":\\\"bamboohr\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Recruitment\\\",\\\"description\\\":\\\"Zoho Recruit is both a powerful talent acquisition system and a cutting-edge applicant tracking software that streamlines your hiring process. \\\",\\\"name\\\":\\\"Zoho Recruit\\\",\\\"id\\\":\\\"zoho-recruite\\\"},{\\\"api\\\":\\\"token_url,client_id,client_secret,refresh_token\\\",\\\"category\\\":\\\"File Management & Storage\\\",\\\"name\\\":\\\"Dropbox\\\",\\\"description\\\":\\\"Dropbox lets you store your files online, sync them to all your devices, and share them easily. Get started for free, then upgrade for more space and security features.\\\",\\\"id\\\":\\\"dropbox\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Team Chat\\\",\\\"description\\\":\\\"Keep your team focused and working together with Chatwork's team chat, tasks, video chats, and more in one place.\\\",\\\"name\\\":\\\"Chatwork\\\",\\\"id\\\":\\\"chatwork\\\"},{\\\"api\\\":\\\"bot_token,user_token\\\",\\\"category\\\":\\\"Team Chat\\\",\\\"name\\\":\\\"Slack\\\",\\\"description\\\":\\\" One platform for your team and your work\\\",\\\"id\\\":\\\"teamchat\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"CRM\\\",\\\"name\\\":\\\"Zendesk Sell\\\",\\\"description\\\":\\\"Zendesk makes better experiences for agents, admins, and customers. As employees, we encourage each other to grow and innovate. As a company, we roll up our sleeves to plant roots in the communities we call home. Our customer service and engagement platform is powerful and flexible, and scales to meet the needs of any business. Even yours.\\\",\\\"id\\\":\\\"zendesk-sell\\\"},{\\\"api\\\":\\\"app_id,app_secret\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"name\\\":\\\"Help Scout\\\",\\\"description\\\":\\\"Help Scout provides an email-based customer support platform, knowledge base tool, and an embeddable search/contact widget for customer service professionals.\\\",\\\"id\\\":\\\"help-scout\\\"},{\\\"api\\\":\\\"account_id,token\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"description\\\":\\\"LiveChat is the faster way to contact your customers. It is a web-based chat tool that lets you chat with your website visitors.\\\",\\\"name\\\":\\\"LiveChat\\\",\\\"id\\\":\\\"livechat\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"name\\\":\\\"Drift\\\",\\\"description\\\":\\\"Drift is a messaging app that allows you to talk to your website visitors and customers in real-time,from anywhere.\\\",\\\"id\\\":\\\"drift\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"description\\\":\\\"Support.cc is a help desk software with powerful ticket management system that provides faster and better support for your customers.\\\",\\\"name\\\":\\\"Support.cc\\\",\\\"id\\\":\\\"support.cc\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,refresh_url\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"name\\\":\\\"Jira Service Desk\\\",\\\"description\\\":\\\" Jira's service desk empowers teams to deliver great service experiences and ensures your employees and customers can get help quickly.\\\",\\\"id\\\":\\\"jira-service-desk\\\"},{\\\"api\\\":\\\"username,password,api_key\\\",\\\"category\\\":\\\"Phone & SMS\\\",\\\"name\\\":\\\"Clicksend SMS\\\",\\\"description\\\":\\\" ClickSend  is a cloud-based gateway service for your business that lets you send bulk SMS, email, fax & letters worldwide.\\\",\\\"id\\\":\\\"clicksend-sms\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Accounting & Invoicing\\\",\\\"name\\\":\\\"Wave\\\",\\\"description\\\":\\\" Wave is a collaborative information manager for workspace. It helps you organize people and tasks effectively.\\\",\\\"id\\\":\\\"wave\\\"},{\\\"api\\\":\\\"email,password\\\",\\\"category\\\":\\\"Task Management\\\",\\\"description\\\":\\\"Any.do is a productivity platform designed to help individuals and teams stay organized and get more done.\\\",\\\"name\\\":\\\"Any.do\\\",\\\"id\\\":\\\"any.do\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Task Management\\\",\\\"description\\\":\\\"Toodledo is a set of incredibly powerful tools to increase your productivity and organize your life. More than just a to-do list.\\\",\\\"name\\\":\\\"Toodledo\\\",\\\"id\\\":\\\"toodledo\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Task Management\\\",\\\"description\\\":\\\"Join millions of people to capture ideas, organize to-dos, and make the most of your life with TickTick.\\\",\\\"name\\\":\\\"TickTick\\\",\\\"id\\\":\\\"ticktick\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Emails\\\",\\\"name\\\":\\\"Microsoft Office 365 Contacts\\\",\\\"description\\\":\\\" Microsoft Office 365 Contacts is a collaborative information manager for workspace. It helps you organize people and tasks effectively.\\\",\\\"id\\\":\\\"microsoft-office-365-contacts\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Social\\\",\\\"description\\\":\\\"Instagram is a social network which is a fast, beautiful and fun way to share your photos with friends and family.\\\",\\\"name\\\":\\\"Instagram\\\",\\\"id\\\":\\\"instagram\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Time Tracking\\\",\\\"description\\\":\\\"Clockify is a completely free time tracking software for teams. It's a simple time tracker and timesheet app for tracking work hours on projects.\\\",\\\"name\\\":\\\"Clockify\\\",\\\"id\\\":\\\"clockify\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Time Tracking\\\",\\\"description\\\":\\\"Everhour is a completely free time tracking software for teams. It's a simple time tracker and timesheet app for tracking work hours on projects.\\\",\\\"name\\\":\\\"Everhour\\\",\\\"id\\\":\\\"everhour\\\"},{\\\"api\\\":\\\"server_token\\\",\\\"category\\\":\\\"Transactional Email\\\",\\\"description\\\":\\\"Trusted by thousands of developers, Postmark is a fast and reliable application email service. Send with Postmark to ensure your emails get to the inbox on.\\\",\\\"name\\\":\\\"Postmark\\\",\\\"id\\\":\\\"postmark\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Video Conferencing\\\",\\\"description\\\":\\\"Video conferencing, online meetings, and webinar software to bring your students, customers, and team members together.\\\",\\\"name\\\":\\\"Clickmeeting\\\",\\\"id\\\":\\\"clickmeeting\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Video Conferencing\\\",\\\"description\\\":\\\"Livestorm is a browser based online web conferencing software used to share real-time live streams. It can be used to power remote live meetings, product demos, sales webinars, online lessons, onboarding sessions, more.\\\",\\\"name\\\":\\\"Livestorm\\\",\\\"id\\\":\\\"livestrom\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Website Builders\\\",\\\"description\\\":\\\"Webflow, Inc. is an American company, based in San Francisco, that provides software as a service for website building and hosting. Their online visual editor platform allows users to design, build, and launch websites.\\\",\\\"name\\\":\\\"Webflow\\\",\\\"id\\\":\\\"webflow\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Manage customer relationships effectively with the powerful automation featured CRM software tool.\\\",\\\"name\\\":\\\"CRM.io\\\",\\\"id\\\":\\\"crm.io\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Forms & Surveys\\\",\\\"description\\\":\\\"Forms.io is a form builder app which is used to easily create engaging online forms while enhancing the customer experience for increased conversions.\\\",\\\"name\\\":\\\"Forms.io\\\",\\\"id\\\":\\\"forms.io\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Emails\\\",\\\"name\\\":\\\"Microsoft Office 365\\\",\\\"description\\\":\\\" Microsoft Office 365 is a collaborative information manager for workspace. It helps you organize people and tasks effectively.\\\",\\\"id\\\":\\\"microsoft-office-365\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"ClinchPad is a modern sales CRM built for small teams.\\\",\\\"name\\\":\\\"ClinchPad\\\",\\\"id\\\":\\\"clinchpad\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Social\\\",\\\"description\\\":\\\"YouTube allows billions of people to discover, watch and share originally-created videos. YouTube provides a forum for people to connect, inform, and inspire others across the globe and acts as a distribution platform for original content creators and advertisers large and small.\\\",\\\"name\\\":\\\"YouTube\\\",\\\"id\\\":\\\"youtube\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Social\\\",\\\"description\\\":\\\"Pinterest is an American image sharing and social media service designed to enable saving and discovery of information on the internet using images and, on a smaller scale, animated GIFs and videos, in the form of pinboards.\\\",\\\"name\\\":\\\"Pinterest\\\",\\\"id\\\":\\\"pinterest\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"eCommerce\\\",\\\"description\\\":\\\"Shopify Inc. is a Canadian multinational e-commerce company headquartered in Ottawa, Ontario. It is also the name of its proprietary e-commerce platform for online stores and retail point-of-sale systems.\\\",\\\"name\\\":\\\"Shopify\\\",\\\"id\\\":\\\"shopify\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Projectsly Project Management Tool to track your planned work effectively and collaborate with your team members.\\\",\\\"name\\\":\\\"Projectsly\\\",\\\"id\\\":\\\"projectsly\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Payment Processing\\\",\\\"description\\\":\\\"Square is a technology company based in San Francisco, California. Its software allows individuals and businesses to make and receive payments over the Internet.\\\",\\\"name\\\":\\\"Square\\\",\\\"id\\\":\\\"square\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Email Marketing\\\",\\\"description\\\":\\\"Connect with your audience like never before by creating & sending state of the art newsletters, and managing drip campaigns from one central location.\\\",\\\"name\\\":\\\"Mailsend\\\",\\\"id\\\":\\\"mailsend\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"api_key,app_secret\\\",\\\"category\\\":\\\"eCommerce\\\",\\\"description\\\":\\\"Import, manage and ship your orders with ShipStation. Our shipping software is designed to save you time and money on eCommerce order fulfillment.\\\",\\\"name\\\":\\\"Shipstation\\\",\\\"id\\\":\\\"shipstation\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_url,token\\\",\\\"category\\\":\\\"Cloud Platform\\\",\\\"name\\\":\\\"Google Cloud Platform\\\",\\\"description\\\":\\\"High-performance infrastructure for cloud computing, data analytics & machine learning. Secure, reliable and high performance cloud services. Try now with $300 free credit! Highly Scalable. Mix & match services. Competitive pricing. \\\",\\\"id\\\":\\\"google-cloud-platform\\\"},{\\\"api\\\":\\\"access_key,secret_key,region\\\",\\\"category\\\":\\\"Cloud Platform\\\",\\\"description\\\":\\\"Amazon Polly is a cloud service by Amazon Web Services, a subsidiary of Amazon.com, that converts text into spoken audio. It allows developers to create speech-enabled applications and products.\\\",\\\"name\\\":\\\"Amazon Polly\\\",\\\"id\\\":\\\"amezon-polly\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Product Management\\\",\\\"description\\\":\\\"Manifestly is a checklist app for teams to manage and complete their important recurring tasks. Create Procedures, Workflows, Standardized Processes\\\",\\\"name\\\":\\\"Manifestly Checklists\\\",\\\"id\\\":\\\"manifestly-checklists\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Customer App\\\",\\\"description\\\":\\\"Gist Live Chat brings together all your sales, marketing, and customer support conversations to one place, helping you treat customers as real people\\\",\\\"name\\\":\\\"Gist\\\",\\\"id\\\":\\\"gist\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Wealthbox CRM for financial advisors is an outrageously simple, social, and collaborative wealth management platform to build an advisory practice.\\\",\\\"name\\\":\\\"Wealthbox CRM\\\",\\\"id\\\":\\\"wealthbox-crm\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Marketing Automation\\\",\\\"description\\\":\\\"Marketing Automation for Autopilot Journeys. Explore the journeys Autopilot use to grow our business. Basic lead nurturing. A simple drip email campaign .\\\",\\\"name\\\":\\\"Autopilot Journeys\\\",\\\"id\\\":\\\"autopilot-journeys\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Contacts Managements\\\",\\\"description\\\":\\\"Clearbit is the marketing data platform behind the fastest-growing B2B companies. Apply real-time intelligence across your entire stack to improve acquisition, conversion, and operations.\\\",\\\"name\\\":\\\"Clearbit\\\",\\\"id\\\":\\\"clearbit\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Team Chat\\\",\\\"description\\\":\\\"Microsoft Teams is a proprietary business communication platform developed by Microsoft, as part of the Microsoft 365 family of products. Teams primarily competes with the similar service Slack, offering workspace chat and videoconferencing, file storage, and application integration.\\\",\\\"name\\\":\\\"Microsoft Teams\\\",\\\"id\\\":\\\"microsoft-teams\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"description\\\":\\\"Tawk.to is the world's #1 most widely used live chat software. More than 35% of all websites that use live chat, use tawk.to.\\\",\\\"name\\\":\\\"Tawk.to\\\",\\\"id\\\":\\\"tawk.io\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Signatures\\\",\\\"description\\\":\\\"PandaDoc is an American software company providing SaaS software. The platform provides sales processes software. PandaDoc is based in San Francisco, California with main offices in Minsk, Belarus and St. Petersburg, Florida.\\\",\\\"name\\\":\\\"Pandadoc\\\",\\\"id\\\":\\\"pandadoc\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Video Conferencing\\\",\\\"description\\\":\\\"Webex by Cisco is an American company that develops and sells web conferencing and videoconferencing applications. It was founded as WebEx in 1995 and taken over by Cisco Systems in 2007. Its headquarters are in Milpitas, California.\\\",\\\"name\\\":\\\"Cisco Webex\\\",\\\"id\\\":\\\"cisco-webex\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Video Conferencing\\\",\\\"description\\\":\\\"Zoom's secure, reliable video platform powers all of your communication needs, including meetings, chat, phone, webinars, and online events.\\\",\\\"name\\\":\\\"Zoom\\\",\\\"id\\\":\\\"zoom\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Databases\\\",\\\"description\\\":\\\"Airtable is a cloud collaboration service headquartered in San Francisco. It was founded in 2012 by Howie Liu, Andrew Ofstad, and Emmett Nicholas. Airtable is a spreadsheet-database hybrid, with the features of a database but applied to a spreadsheet.\\\",\\\"name\\\":\\\"Airtable\\\",\\\"id\\\":\\\"airtable\\\"},{\\\"api\\\":\\\"api_key,domain\\\",\\\"category\\\":\\\"Server Monitoring\\\",\\\"description\\\":\\\"Freshservice Cloud based ITSM software for your service desk with powerful automation tool to manage incidents, assets and more ✓ Try Freshservice ITSM.\\\",\\\"name\\\":\\\"Freshservice\\\",\\\"id\\\":\\\"freshservice\\\"},{\\\"api\\\":\\\"user_name,remote_key\\\",\\\"category\\\":\\\"Task Management\\\",\\\"description\\\":\\\"Checkvist has been awarded “Best Value” and “Best Ease of Use” by Capterra, a free resource that helps companies find the right software system by sourcing.\\\",\\\"name\\\":\\\"Checkvist\\\",\\\"id\\\":\\\"checkvist\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Social Media\\\",\\\"description\\\":\\\"Medium is an American online publishing platform developed by Evan Williams and launched in August 2012. It is owned by A Medium Corporation.\\\",\\\"name\\\":\\\"Medium\\\",\\\"id\\\":\\\"medium\\\"},{\\\"api\\\":\\\"access_key,secret_key,region\\\",\\\"category\\\":\\\"Transactional Email\\\",\\\"description\\\":\\\"Amazon Simple Email Service is a scalable and cost-effective email sending service tailored for both bulk and transactional for both businesses and developers.\\\",\\\"name\\\":\\\"Amazon SES\\\",\\\"id\\\":\\\"amezon-ses\\\"},{\\\"api\\\":\\\"host,port_number,user_name,password,Secured Connection Using\\\",\\\"category\\\":\\\"Emails\\\",\\\"description\\\":\\\"SMTP lets you send emails from the account. It is the fastest way to get started with sending emails but may not be very reliable to send more than 100 a day.\\\",\\\"name\\\":\\\"SMTP\\\",\\\"id\\\":\\\"smtp\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"name\\\":\\\"monday.com\\\",\\\"description\\\":\\\"monday.com helps you move projects forward fast, letting everyone know what's been done on a task—and what needs finished right now.\\\",\\\"id\\\":\\\"monday.com\\\"},{\\\"api\\\":\\\"api_key,domain\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Kanbanize helps managers align the planning of big projects with day-to-day execution, prevent teams from overburdening, and always set clear priorities.\\\",\\\"name\\\":\\\"Kanbanize\\\",\\\"id\\\":\\\"kanbanize\\\"},{\\\"api\\\":\\\"access_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Meistertask is a collaborative information manager for workspace. It helps you organize people and tasks effectively.\\\",\\\"name\\\":\\\"Meistertask\\\",\\\"id\\\":\\\"meistertask\\\"},{\\\"api\\\":\\\"username,password,api_key\\\",\\\"category\\\":\\\"Phone & SMS\\\",\\\"description\\\":\\\"Telnyx is an all-in-one communications platform which delivers voice, messaging and IP services for applications and communications companies\\\",\\\"name\\\":\\\"Telnyx\\\",\\\"id\\\":\\\"telnyx\\\"},{\\\"api\\\":\\\"domain,user_token\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Kanban Tool is an application for managing projects and tasks along with Kanban methodology. Kanban method relies on these two principles: a graphic, clear visualization of the workflow, and limitation of the number of tasks being in progress at the same time.\\\",\\\"name\\\":\\\"Kanban Tool\\\",\\\"id\\\":\\\"kanban-tool\\\"},{\\\"api\\\":\\\"domain,api_key\\\",\\\"category\\\":\\\"Project Management\\\",\\\"description\\\":\\\"Scoro is a software-as-a-service solution for professional and creative services. The all-in-one business management software combines project management with time and team management, sales, billing, and professional services automation.\\\",\\\"name\\\":\\\"Scoro\\\",\\\"id\\\":\\\"scoro\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Product Management\\\",\\\"description\\\":\\\"Product Board is a comprehensive product management platform that supports a customer-centric approach and strategy\\\",\\\"name\\\":\\\"Productboard\\\",\\\"id\\\":\\\"productboard\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,refresh_url\\\",\\\"category\\\":\\\"Video Conferencing\\\",\\\"description\\\":\\\"GoToMeeting is a web-hosted service created and marketed by LogMeIn. It is an online meeting, desktop sharing, and video conferencing software package that enables the user to meet with other computer users, customers, clients or colleagues via the Internet in real time.\\\",\\\"name\\\":\\\"GotoMeeting\\\",\\\"id\\\":\\\"gotomeeting\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,refresh_url\\\",\\\"category\\\":\\\"Signatures\\\",\\\"description\\\":\\\"Docusign is an electronic signature technology and digital transaction management service for facilitating electronic exchanges of signed documents.\\\",\\\"name\\\":\\\"DocuSign\\\",\\\"id\\\":\\\"docusign\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Product Management\\\",\\\"description\\\":\\\"Beamer is a company Create and schedule posts to keep your users and site visitors in the know with our easy to use changelog.\\\",\\\"name\\\":\\\"Beamer\\\",\\\"id\\\":\\\"beamer\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Scheduling & Bookings\\\",\\\"description\\\":\\\"Schedule appointments in real-time and set event reminders by integrating your emails, syncing your calendar and managing availability.\\\",\\\"name\\\":\\\"Schedule.cc\\\",\\\"id\\\":\\\"schedule.cc\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Server Monitoring\\\",\\\"description\\\":\\\"PagerDuty is an incident management platform that provides reliable notifications, automatic escalations, on-call scheduling, and other functionality to help teams detect and fix infrastructure problems quickly.\\\",\\\"name\\\":\\\"Pagerduty\\\",\\\"id\\\":\\\"pagerduty\\\"},{\\\"api\\\":\\\"acess_token,organization_id\\\",\\\"category\\\":\\\"Task Management\\\",\\\"description\\\":\\\"Tallyfy is workflow software that lets you document and automate every business process across your company.\\\",\\\"name\\\":\\\"Tallyfy\\\",\\\"id\\\":\\\"tallyfy\\\"},{\\\"api\\\":\\\"api_key,domain\\\",\\\"category\\\":\\\"Customer Support\\\",\\\"description\\\":\\\"The Mojo Helpdesk app allows agents, managers and admins the ability to track and manage customers support tickets from any iOS device. The app is perfect for field service agents working in remote locations or in-office agents that might be away from their desk so that support requests never go amiss\\\",\\\"name\\\":\\\"Mojo Helpdesk\\\",\\\"id\\\":\\\"mojo-helpdesk\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Task Management\\\",\\\"description\\\":\\\"Microsoft To Do (previously styled as Microsoft To-Do) is a cloud-based task management application. It allows users to manage their tasks from a smartphone, tablet and computer. \\\",\\\"name\\\":\\\"Microsoft To Do\\\",\\\"id\\\":\\\"microsoft-to-do\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Team Chat\\\",\\\"description\\\":\\\"A chatbot or chatterbot is a software application used to conduct an on-line chat conversation via text or text-to-speech, in lieu of providing direct contact with a live human agent.\\\",\\\"name\\\":\\\"Chatbot\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Event Management\\\",\\\"description\\\":\\\"Eventbrite brings people together through live experiences. Discover events that match your passions, or create your own with online ticketing tools.\\\",\\\"name\\\":\\\"Eventbrite\\\",\\\"id\\\":\\\"eventbrite\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Phone & SMS\\\",\\\"description\\\":\\\"VoxDesk provides a resilient core call center software that allows agents to manage the flow of calls seamlessly.\\\",\\\"name\\\":\\\"VoxDesk\\\",\\\"id\\\":\\\"voxdesk\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"signatures\\\",\\\"description\\\":\\\"Sign.cc is an electronic signature software that helps business improve productivity and collect signatures.\\\",\\\"name\\\":\\\"Sign.cc\\\",\\\"id\\\":\\\"sign.cc\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"CRM\\\",\\\"description\\\":\\\"Automated Lead Contact Software, OutReachly is a lead scoring and lead generation software that facilitates healthy lead flow and supports the proper timing of lead hand-off to sales reps.\\\",\\\"name\\\":\\\"Outreachly\\\",\\\"id\\\":\\\"outreachly\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Time Tracking\\\",\\\"description\\\":\\\"Clockly is a time tracker and timesheet app that lets you track work hours across projects.\\\",\\\"name\\\":\\\"Clockly\\\",\\\"id\\\":\\\"clockly\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Scheduling & Bookings\\\",\\\"description\\\":\\\"Schedule appointments in real-time and set event reminders by integrating your emails, syncing your calendar and managing availability.\\\",\\\"name\\\":\\\"Schedule.cc\\\",\\\"id\\\":\\\"schedule.cc\\\",\\\"app_category\\\":\\\"500apps\\\"},{\\\"api\\\":\\\"api_key\\\",\\\"category\\\":\\\"Team Chat\\\",\\\"description\\\":\\\"Transform the way your team collaborates with unlimited team messaging, secure file-sharing, channel management, in-app video calling, and many other tools, all under one platform with Teams.cc\\\",\\\"name\\\":\\\"Teams.cc\\\",\\\"id\\\":\\\"teams.cc\\\",\\\"app_category\\\":\\\"500apps\\\"}]\");\n\n//# sourceURL=webpack://unified-sso/./src/apps.json?");

/***/ }),

/***/ "./src/html sync recursive ^\\.\\/.*\\.html$":
/*!***************************************!*\
  !*** ./src/html/ sync ^\.\/.*\.html$ ***!
  \***************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./filepicker/child-data.html\": \"./src/html/filepicker/child-data.html\",\n\t\"./filepicker/connected-apps.html\": \"./src/html/filepicker/connected-apps.html\",\n\t\"./filepicker/file-path.html\": \"./src/html/filepicker/file-path.html\",\n\t\"./filepicker/files.html\": \"./src/html/filepicker/files.html\",\n\t\"./filepicker/home.html\": \"./src/html/filepicker/home.html\",\n\t\"./sso/sso.html\": \"./src/html/sso/sso.html\",\n\t\"./widget/apps.html\": \"./src/html/widget/apps.html\",\n\t\"./widget/custom-card.html\": \"./src/html/widget/custom-card.html\",\n\t\"./widget/custom.html\": \"./src/html/widget/custom.html\",\n\t\"./widget/customInput.html\": \"./src/html/widget/customInput.html\",\n\t\"./widget/facebook.html\": \"./src/html/widget/facebook.html\",\n\t\"./widget/form.html\": \"./src/html/widget/form.html\",\n\t\"./widget/gmail.html\": \"./src/html/widget/gmail.html\",\n\t\"./widget/linkedin.html\": \"./src/html/widget/linkedin.html\",\n\t\"./widget/twilio/call.html\": \"./src/html/widget/twilio/call.html\",\n\t\"./widget/twilio/index.html\": \"./src/html/widget/twilio/index.html\",\n\t\"./widget/twilio/numbers.html\": \"./src/html/widget/twilio/numbers.html\",\n\t\"./widget/twilio/sms.html\": \"./src/html/widget/twilio/sms.html\",\n\t\"./widget/twitter.html\": \"./src/html/widget/twitter.html\",\n\t\"./widget/widget-cards.html\": \"./src/html/widget/widget-cards.html\",\n\t\"./widget/widget.html\": \"./src/html/widget/widget.html\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./src/html sync recursive ^\\\\.\\\\/.*\\\\.html$\";\n\n//# sourceURL=webpack://unified-sso/./src/html/_sync_^\\.\\/.*\\.html$?");

/***/ }),

/***/ "./src/sso/apps-sso.json":
/*!*******************************!*\
  !*** ./src/sso/apps-sso.json ***!
  \*******************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse(\"[{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"Social\\\",\\\"description\\\":\\\"LinkedIn is the world's largest social network for professionals. Manage your professional identity. Build and engage with your professional network. Access knowledge, insights and opportunities.\\\",\\\"name\\\":\\\"LinkedIn-sso\\\",\\\"id\\\":\\\"linkedin\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Developer Tools\\\",\\\"description\\\":\\\"GitHub is the perfect place to share code and work collaboratively on private and open source software.\\\",\\\"name\\\":\\\"GitHub-sso\\\",\\\"id\\\":\\\"github\\\"},{\\\"api\\\":\\\"client_id,client_secret,token_url,refresh_token\\\",\\\"category\\\":\\\"Email\\\",\\\"description\\\":\\\"One of the most popular email services, Gmail keeps track of all your emails with threaded conversations, tags, and Google-powered search to find any message you need.\\\",\\\"name\\\":\\\"Gmail-sso\\\",\\\"id\\\":\\\"gmail\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"\\\",\\\"description\\\":\\\"\\\",\\\"name\\\":\\\"Google-sso\\\",\\\"id\\\":\\\"google\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"\\\",\\\"description\\\":\\\"Facebook Pages lets you connect with your customers, fans and followers on the world's largest social network. Share relevant content to engage people who Like your page, create events to build and grow your community, and run a Facebook ad campaign by targeting location, age and more.\\\",\\\"name\\\":\\\"Facebook-sso\\\",\\\"id\\\":\\\"facebook\\\"},{\\\"api\\\":\\\"consumer_key,consumer_secret,token_secret,access_token\\\",\\\"category\\\":\\\"\\\",\\\"description\\\":\\\"Twitter is the social network that shows what's happening around the world in real time. Share your ideas in Tweets, follow hashtags to keep up with trends, and join in the global conversation.\\\",\\\"name\\\":\\\"Twitter-sso\\\",\\\"id\\\":\\\"twitter\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"\\\",\\\"description\\\":\\\"\\\",\\\"name\\\":\\\"Microsoft-sso\\\",\\\"id\\\":\\\"microsoft\\\"},{\\\"api\\\":\\\"client_id,client_secret,refresh_token,token_url\\\",\\\"category\\\":\\\"\\\",\\\"description\\\":\\\"\\\",\\\"name\\\":\\\"Apple-sso\\\",\\\"id\\\":\\\"apple\\\"}]\");\n\n//# sourceURL=webpack://unified-sso/./src/sso/apps-sso.json?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			id: moduleId,
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		__webpack_require__.p = "https://appletio-js.500apps.com/";
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./src/main.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;